# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'ASD_Viz.ui'
##
## Created by: Qt User Interface Compiler version 6.8.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QButtonGroup, QCheckBox, QComboBox,
    QDockWidget, QFrame, QGridLayout, QGroupBox,
    QHBoxLayout, QLabel, QLineEdit, QMainWindow,
    QMenu, QMenuBar, QPushButton, QRadioButton,
    QScrollArea, QSizePolicy, QSlider, QSpacerItem,
    QSpinBox, QStackedWidget, QStatusBar, QTabWidget,
    QToolBox, QVBoxLayout, QWidget)

class Ui_VizMainWindow(object):
    def setupUi(self, VizMainWindow):
        if not VizMainWindow.objectName():
            VizMainWindow.setObjectName(u"VizMainWindow")
        VizMainWindow.setEnabled(True)
        VizMainWindow.resize(1948, 1280)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(VizMainWindow.sizePolicy().hasHeightForWidth())
        VizMainWindow.setSizePolicy(sizePolicy)
        VizMainWindow.setMinimumSize(QSize(800, 600))
        VizMainWindow.setAutoFillBackground(True)
        self.actionMoments_File = QAction(VizMainWindow)
        self.actionMoments_File.setObjectName(u"actionMoments_File")
        self.actionMagnetization_File = QAction(VizMainWindow)
        self.actionMagnetization_File.setObjectName(u"actionMagnetization_File")
        self.actionExit = QAction(VizMainWindow)
        self.actionExit.setObjectName(u"actionExit")
        self.actionSave_png = QAction(VizMainWindow)
        self.actionSave_png.setObjectName(u"actionSave_png")
        self.actionSave_png.setCheckable(True)
        self.actionSave_png.setChecked(True)
        self.actionSave_png.setEnabled(False)
        self.actionSave_pov = QAction(VizMainWindow)
        self.actionSave_pov.setObjectName(u"actionSave_pov")
        self.actionSave_pov.setCheckable(True)
        self.actionSave_pov.setEnabled(False)
        self.actionDisplayMagDens = QAction(VizMainWindow)
        self.actionDisplayMagDens.setObjectName(u"actionDisplayMagDens")
        self.actionDisplayMagDens.setCheckable(True)
        self.actionDisplayMagDens.setChecked(True)
        self.actionDisplayMagDens.setEnabled(False)
        self.actionX_ProjMagDens = QAction(VizMainWindow)
        self.actionX_ProjMagDens.setObjectName(u"actionX_ProjMagDens")
        self.actionX_ProjMagDens.setCheckable(True)
        self.actionX_ProjMagDens.setEnabled(False)
        self.actionY_ProjMagDens = QAction(VizMainWindow)
        self.actionY_ProjMagDens.setObjectName(u"actionY_ProjMagDens")
        self.actionY_ProjMagDens.setCheckable(True)
        self.actionY_ProjMagDens.setEnabled(False)
        self.actionZ_ProjMagDens = QAction(VizMainWindow)
        self.actionZ_ProjMagDens.setObjectName(u"actionZ_ProjMagDens")
        self.actionZ_ProjMagDens.setCheckable(True)
        self.actionZ_ProjMagDens.setChecked(True)
        self.actionZ_ProjMagDens.setEnabled(False)
        self.actionDisplayAtomicSpins = QAction(VizMainWindow)
        self.actionDisplayAtomicSpins.setObjectName(u"actionDisplayAtomicSpins")
        self.actionDisplayAtomicSpins.setCheckable(True)
        self.actionDisplayAtomicSpins.setEnabled(False)
        self.actionX_ProjAtomicSpins = QAction(VizMainWindow)
        self.actionX_ProjAtomicSpins.setObjectName(u"actionX_ProjAtomicSpins")
        self.actionX_ProjAtomicSpins.setCheckable(True)
        self.actionX_ProjAtomicSpins.setEnabled(False)
        self.actionY_ProjAtomicSpins = QAction(VizMainWindow)
        self.actionY_ProjAtomicSpins.setObjectName(u"actionY_ProjAtomicSpins")
        self.actionY_ProjAtomicSpins.setCheckable(True)
        self.actionY_ProjAtomicSpins.setEnabled(False)
        self.actionZ_ProjAtomicSpins = QAction(VizMainWindow)
        self.actionZ_ProjAtomicSpins.setObjectName(u"actionZ_ProjAtomicSpins")
        self.actionZ_ProjAtomicSpins.setCheckable(True)
        self.actionZ_ProjAtomicSpins.setChecked(True)
        self.actionZ_ProjAtomicSpins.setEnabled(False)
        self.actionArrows = QAction(VizMainWindow)
        self.actionArrows.setObjectName(u"actionArrows")
        self.actionArrows.setCheckable(True)
        self.actionArrows.setChecked(True)
        self.actionArrows.setEnabled(False)
        self.actionCones = QAction(VizMainWindow)
        self.actionCones.setObjectName(u"actionCones")
        self.actionCones.setCheckable(True)
        self.actionCones.setEnabled(False)
        self.actionCubes = QAction(VizMainWindow)
        self.actionCubes.setObjectName(u"actionCubes")
        self.actionCubes.setCheckable(True)
        self.actionCubes.setEnabled(False)
        self.actionSpheres = QAction(VizMainWindow)
        self.actionSpheres.setObjectName(u"actionSpheres")
        self.actionSpheres.setCheckable(True)
        self.actionSpheres.setEnabled(False)
        self.actionMagnetisation_direction = QAction(VizMainWindow)
        self.actionMagnetisation_direction.setObjectName(u"actionMagnetisation_direction")
        self.actionMagnetisation_direction.setCheckable(True)
        self.actionDisplay_Contours = QAction(VizMainWindow)
        self.actionDisplay_Contours.setObjectName(u"actionDisplay_Contours")
        self.actionDisplay_Contours.setCheckable(True)
        self.actionExchange = QAction(VizMainWindow)
        self.actionExchange.setObjectName(u"actionExchange")
        self.actionExchange.setCheckable(True)
        self.actionExchange.setEnabled(False)
        self.actionDMI_Energy = QAction(VizMainWindow)
        self.actionDMI_Energy.setObjectName(u"actionDMI_Energy")
        self.actionDMI_Energy.setCheckable(True)
        self.actionDMI_Energy.setEnabled(False)
        self.actionAnisotropy_Energy = QAction(VizMainWindow)
        self.actionAnisotropy_Energy.setObjectName(u"actionAnisotropy_Energy")
        self.actionAnisotropy_Energy.setCheckable(True)
        self.actionAnisotropy_Energy.setEnabled(False)
        self.actionBiquadratic_Energy = QAction(VizMainWindow)
        self.actionBiquadratic_Energy.setObjectName(u"actionBiquadratic_Energy")
        self.actionBiquadratic_Energy.setCheckable(True)
        self.actionBiquadratic_Energy.setEnabled(False)
        self.actionBiquadratic_DM_Energy = QAction(VizMainWindow)
        self.actionBiquadratic_DM_Energy.setObjectName(u"actionBiquadratic_DM_Energy")
        self.actionBiquadratic_DM_Energy.setCheckable(True)
        self.actionBiquadratic_DM_Energy.setEnabled(False)
        self.actionPseudo_Dipolar_Energy = QAction(VizMainWindow)
        self.actionPseudo_Dipolar_Energy.setObjectName(u"actionPseudo_Dipolar_Energy")
        self.actionPseudo_Dipolar_Energy.setCheckable(True)
        self.actionPseudo_Dipolar_Energy.setEnabled(False)
        self.actionZeeman_Energy = QAction(VizMainWindow)
        self.actionZeeman_Energy.setObjectName(u"actionZeeman_Energy")
        self.actionZeeman_Energy.setCheckable(True)
        self.actionZeeman_Energy.setEnabled(False)
        self.actionDipolar_Energy = QAction(VizMainWindow)
        self.actionDipolar_Energy.setObjectName(u"actionDipolar_Energy")
        self.actionDipolar_Energy.setCheckable(True)
        self.actionDipolar_Energy.setEnabled(False)
        self.actionTotal_Energy = QAction(VizMainWindow)
        self.actionTotal_Energy.setObjectName(u"actionTotal_Energy")
        self.actionTotal_Energy.setCheckable(True)
        self.actionTotal_Energy.setChecked(True)
        self.actionTotal_Energy.setEnabled(False)
        self.actionDisplay_Atoms = QAction(VizMainWindow)
        self.actionDisplay_Atoms.setObjectName(u"actionDisplay_Atoms")
        self.actionDisplay_Atoms.setCheckable(True)
        self.actionDisplay_Atoms.setChecked(True)
        self.actionDisplay_Atoms.setEnabled(False)
        self.actionDisplay_Neighbour_cloud = QAction(VizMainWindow)
        self.actionDisplay_Neighbour_cloud.setObjectName(u"actionDisplay_Neighbour_cloud")
        self.actionDisplay_Neighbour_cloud.setCheckable(True)
        self.actionDisplay_Neighbour_cloud.setChecked(True)
        self.actionDisplay_Neighbour_cloud.setEnabled(False)
        self.actionCoolwarm = QAction(VizMainWindow)
        self.actionCoolwarm.setObjectName(u"actionCoolwarm")
        self.actionCoolwarm.setCheckable(True)
        self.actionCoolwarm.setChecked(True)
        self.actionCoolwarm.setEnabled(False)
        self.actionBlack_Body = QAction(VizMainWindow)
        self.actionBlack_Body.setObjectName(u"actionBlack_Body")
        self.actionBlack_Body.setCheckable(True)
        self.actionBlack_Body.setEnabled(False)
        self.actionRdGy = QAction(VizMainWindow)
        self.actionRdGy.setObjectName(u"actionRdGy")
        self.actionRdGy.setCheckable(True)
        self.actionRdGy.setEnabled(False)
        self.actionSpectral = QAction(VizMainWindow)
        self.actionSpectral.setObjectName(u"actionSpectral")
        self.actionSpectral.setCheckable(True)
        self.actionSpectral.setEnabled(False)
        self.actionScalar_Bar = QAction(VizMainWindow)
        self.actionScalar_Bar.setObjectName(u"actionScalar_Bar")
        self.actionScalar_Bar.setCheckable(True)
        self.actionScalar_Bar.setChecked(True)
        self.actionScalar_Bar.setEnabled(False)
        self.actionAxes = QAction(VizMainWindow)
        self.actionAxes.setObjectName(u"actionAxes")
        self.actionAxes.setCheckable(True)
        self.actionAxes.setChecked(True)
        self.actionAxes.setEnabled(False)
        self.actionDisplay_timer = QAction(VizMainWindow)
        self.actionDisplay_timer.setObjectName(u"actionDisplay_timer")
        self.actionDisplay_timer.setCheckable(True)
        self.actionDisplay_timer.setEnabled(False)
        self.actionReset_Camera = QAction(VizMainWindow)
        self.actionReset_Camera.setObjectName(u"actionReset_Camera")
        self.actionReset_Camera.setCheckable(False)
        self.actionPrallel_Projection = QAction(VizMainWindow)
        self.actionPrallel_Projection.setObjectName(u"actionPrallel_Projection")
        self.actionPrallel_Projection.setCheckable(False)
        self.actionTake_Snapshot = QAction(VizMainWindow)
        self.actionTake_Snapshot.setObjectName(u"actionTake_Snapshot")
        self.actionTake_Snapshot.setEnabled(True)
        self.actionRestart = QAction(VizMainWindow)
        self.actionRestart.setObjectName(u"actionRestart")
        self.actionMoments = QAction(VizMainWindow)
        self.actionMoments.setObjectName(u"actionMoments")
        self.actionNeighbours = QAction(VizMainWindow)
        self.actionNeighbours.setObjectName(u"actionNeighbours")
        self.actionPlay = QAction(VizMainWindow)
        self.actionPlay.setObjectName(u"actionPlay")
        self.actionEnergy = QAction(VizMainWindow)
        self.actionEnergy.setObjectName(u"actionEnergy")
        self.actionEnergy_File = QAction(VizMainWindow)
        self.actionEnergy_File.setObjectName(u"actionEnergy_File")
        self.actionDM_Neigh = QAction(VizMainWindow)
        self.actionDM_Neigh.setObjectName(u"actionDM_Neigh")
        self.actionS_q_w = QAction(VizMainWindow)
        self.actionS_q_w.setObjectName(u"actionS_q_w")
        self.actionTrajectory = QAction(VizMainWindow)
        self.actionTrajectory.setObjectName(u"actionTrajectory")
        self.actionAverages = QAction(VizMainWindow)
        self.actionAverages.setObjectName(u"actionAverages")
        self.actionCoordinate_File = QAction(VizMainWindow)
        self.actionCoordinate_File.setObjectName(u"actionCoordinate_File")
        self.actionStruct_File = QAction(VizMainWindow)
        self.actionStruct_File.setObjectName(u"actionStruct_File")
        self.actionDM_File = QAction(VizMainWindow)
        self.actionDM_File.setObjectName(u"actionDM_File")
        self.actionKMC_File = QAction(VizMainWindow)
        self.actionKMC_File.setObjectName(u"actionKMC_File")
        self.actionYaml_File = QAction(VizMainWindow)
        self.actionYaml_File.setObjectName(u"actionYaml_File")
        self.actionS_q_w_File = QAction(VizMainWindow)
        self.actionS_q_w_File.setObjectName(u"actionS_q_w_File")
        self.actionAMS_File = QAction(VizMainWindow)
        self.actionAMS_File.setObjectName(u"actionAMS_File")
        self.actionAverages_File = QAction(VizMainWindow)
        self.actionAverages_File.setObjectName(u"actionAverages_File")
        self.actionTrajectory_File = QAction(VizMainWindow)
        self.actionTrajectory_File.setObjectName(u"actionTrajectory_File")
        self.actionTot_Energy_File = QAction(VizMainWindow)
        self.actionTot_Energy_File.setObjectName(u"actionTot_Energy_File")
        self.centralwidget = QWidget(VizMainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.CentralWidgetLayout = QGridLayout(self.centralwidget)
        self.CentralWidgetLayout.setObjectName(u"CentralWidgetLayout")
        self.CentralWidgetLayout.setContentsMargins(6, 6, 6, 6)
        self.ModeSelector = QTabWidget(self.centralwidget)
        self.ModeSelector.setObjectName(u"ModeSelector")
        self.ASD_VTK = QWidget()
        self.ASD_VTK.setObjectName(u"ASD_VTK")
        self.ASD_VTK_Layout = QVBoxLayout(self.ASD_VTK)
        self.ASD_VTK_Layout.setObjectName(u"ASD_VTK_Layout")
        self.ASD_VTK_Layout.setContentsMargins(1, 1, 1, 1)
        self.VTKContWidget = QWidget(self.ASD_VTK)
        self.VTKContWidget.setObjectName(u"VTKContWidget")
        self.VTKContWidgetLayout = QGridLayout(self.VTKContWidget)
        self.VTKContWidgetLayout.setObjectName(u"VTKContWidgetLayout")
        self.VTKContWidgetLayout.setContentsMargins(1, 1, 1, 1)
        self.VTKWidget_Layout = QVBoxLayout()
        self.VTKWidget_Layout.setObjectName(u"VTKWidget_Layout")

        self.VTKContWidgetLayout.addLayout(self.VTKWidget_Layout, 0, 0, 1, 1)


        self.ASD_VTK_Layout.addWidget(self.VTKContWidget)

        self.ModeSelector.addTab(self.ASD_VTK, "")
        self.ASD_PY = QWidget()
        self.ASD_PY.setObjectName(u"ASD_PY")
        self.ASD_PY_Layout = QVBoxLayout(self.ASD_PY)
        self.ASD_PY_Layout.setObjectName(u"ASD_PY_Layout")
        self.ASD_PY_Layout.setContentsMargins(1, 1, 1, 1)
        self.PlotStacked = QStackedWidget(self.ASD_PY)
        self.PlotStacked.setObjectName(u"PlotStacked")
        self.PlotStacked.setEnabled(False)
        self.Plot2DPage = QWidget()
        self.Plot2DPage.setObjectName(u"Plot2DPage")
        self.Plot2DPage.setEnabled(False)
        self.Plot2DLayout = QGridLayout(self.Plot2DPage)
        self.Plot2DLayout.setObjectName(u"Plot2DLayout")
        self.Plot2DLayout.setContentsMargins(1, 1, 1, 1)
        self.PlotStacked.addWidget(self.Plot2DPage)
        self.Plot3DPage = QWidget()
        self.Plot3DPage.setObjectName(u"Plot3DPage")
        self.Plot3DPage.setEnabled(False)
        self.Plot3DLayout = QGridLayout(self.Plot3DPage)
        self.Plot3DLayout.setObjectName(u"Plot3DLayout")
        self.Plot3DLayout.setContentsMargins(1, 1, 1, 1)
        self.PlotStacked.addWidget(self.Plot3DPage)

        self.ASD_PY_Layout.addWidget(self.PlotStacked)

        self.ModeSelector.addTab(self.ASD_PY, "")
        self.ASDInput = QWidget()
        self.ASDInput.setObjectName(u"ASDInput")
        self.verticalLayout_29 = QVBoxLayout(self.ASDInput)
        self.verticalLayout_29.setObjectName(u"verticalLayout_29")
        self.verticalLayout_29.setContentsMargins(1, 1, 1, 1)
        self.InpContWidget = QScrollArea(self.ASDInput)
        self.InpContWidget.setObjectName(u"InpContWidget")
        self.InpContWidget.setWidgetResizable(True)
        self.InpContWidget.setAlignment(Qt.AlignCenter)
        self.InpConWidgetConts = QWidget()
        self.InpConWidgetConts.setObjectName(u"InpConWidgetConts")
        self.InpConWidgetConts.setGeometry(QRect(0, 0, 907, 1858))
        self.ASDInp_Layout = QVBoxLayout(self.InpConWidgetConts)
        self.ASDInp_Layout.setObjectName(u"ASDInp_Layout")
        self.ASDInp_Layout.setContentsMargins(2, 2, 2, 2)
        self.InpGeometryBox = QGroupBox(self.InpConWidgetConts)
        self.InpGeometryBox.setObjectName(u"InpGeometryBox")
        self.horizontalLayout_6 = QHBoxLayout(self.InpGeometryBox)
        self.horizontalLayout_6.setObjectName(u"horizontalLayout_6")
        self.InpUnitCellBox = QGroupBox(self.InpGeometryBox)
        self.InpUnitCellBox.setObjectName(u"InpUnitCellBox")
        self.gridLayout_23 = QGridLayout(self.InpUnitCellBox)
        self.gridLayout_23.setObjectName(u"gridLayout_23")
        self.InpNcellLabel = QLabel(self.InpUnitCellBox)
        self.InpNcellLabel.setObjectName(u"InpNcellLabel")

        self.gridLayout_23.addWidget(self.InpNcellLabel, 1, 0, 1, 1)

        self.InpPBCCheckC1 = QCheckBox(self.InpUnitCellBox)
        self.InpPBCCheckC1.setObjectName(u"InpPBCCheckC1")
        self.InpPBCCheckC1.setChecked(True)

        self.gridLayout_23.addWidget(self.InpPBCCheckC1, 0, 2, 1, 1)

        self.InpPBCCheckC2 = QCheckBox(self.InpUnitCellBox)
        self.InpPBCCheckC2.setObjectName(u"InpPBCCheckC2")
        self.InpPBCCheckC2.setChecked(True)

        self.gridLayout_23.addWidget(self.InpPBCCheckC2, 0, 4, 1, 1)

        self.InpPBCCheckC3 = QCheckBox(self.InpUnitCellBox)
        self.InpPBCCheckC3.setObjectName(u"InpPBCCheckC3")
        self.InpPBCCheckC3.setChecked(True)

        self.gridLayout_23.addWidget(self.InpPBCCheckC3, 0, 5, 1, 1)

        self.InpN1 = QLineEdit(self.InpUnitCellBox)
        self.InpN1.setObjectName(u"InpN1")

        self.gridLayout_23.addWidget(self.InpN1, 1, 1, 1, 3)

        self.InpN2 = QLineEdit(self.InpUnitCellBox)
        self.InpN2.setObjectName(u"InpN2")

        self.gridLayout_23.addWidget(self.InpN2, 1, 4, 1, 1)

        self.InpN3 = QLineEdit(self.InpUnitCellBox)
        self.InpN3.setObjectName(u"InpN3")

        self.gridLayout_23.addWidget(self.InpN3, 1, 5, 1, 1)

        self.InpLineEditC1_x = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC1_x.setObjectName(u"InpLineEditC1_x")

        self.gridLayout_23.addWidget(self.InpLineEditC1_x, 2, 1, 1, 3)

        self.InpLineEditC1_y = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC1_y.setObjectName(u"InpLineEditC1_y")

        self.gridLayout_23.addWidget(self.InpLineEditC1_y, 2, 4, 1, 1)

        self.InpLineEditC1_z = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC1_z.setObjectName(u"InpLineEditC1_z")

        self.gridLayout_23.addWidget(self.InpLineEditC1_z, 2, 5, 1, 1)

        self.InpLineEditC2_x = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC2_x.setObjectName(u"InpLineEditC2_x")

        self.gridLayout_23.addWidget(self.InpLineEditC2_x, 3, 1, 1, 3)

        self.InpLineEditC2_y = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC2_y.setObjectName(u"InpLineEditC2_y")

        self.gridLayout_23.addWidget(self.InpLineEditC2_y, 3, 4, 1, 1)

        self.InpLineEditC2_z = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC2_z.setObjectName(u"InpLineEditC2_z")

        self.gridLayout_23.addWidget(self.InpLineEditC2_z, 3, 5, 1, 1)

        self.InpLineEditC3_x = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC3_x.setObjectName(u"InpLineEditC3_x")

        self.gridLayout_23.addWidget(self.InpLineEditC3_x, 4, 1, 1, 3)

        self.InpLineEditC3_y = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC3_y.setObjectName(u"InpLineEditC3_y")

        self.gridLayout_23.addWidget(self.InpLineEditC3_y, 4, 4, 1, 1)

        self.InpLineEditC3_z = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditC3_z.setObjectName(u"InpLineEditC3_z")

        self.gridLayout_23.addWidget(self.InpLineEditC3_z, 4, 5, 1, 1)

        self.InpLineEditAlat = QLineEdit(self.InpUnitCellBox)
        self.InpLineEditAlat.setObjectName(u"InpLineEditAlat")

        self.gridLayout_23.addWidget(self.InpLineEditAlat, 5, 1, 1, 3)

        self.InpC1Label = QLabel(self.InpUnitCellBox)
        self.InpC1Label.setObjectName(u"InpC1Label")

        self.gridLayout_23.addWidget(self.InpC1Label, 2, 0, 1, 1)

        self.InpC2Label = QLabel(self.InpUnitCellBox)
        self.InpC2Label.setObjectName(u"InpC2Label")

        self.gridLayout_23.addWidget(self.InpC2Label, 3, 0, 1, 1)

        self.InpC3Label = QLabel(self.InpUnitCellBox)
        self.InpC3Label.setObjectName(u"InpC3Label")

        self.gridLayout_23.addWidget(self.InpC3Label, 4, 0, 1, 1)

        self.Inp_m_label = QLabel(self.InpUnitCellBox)
        self.Inp_m_label.setObjectName(u"Inp_m_label")

        self.gridLayout_23.addWidget(self.Inp_m_label, 5, 4, 1, 1)

        self.InpPBCLabel = QLabel(self.InpUnitCellBox)
        self.InpPBCLabel.setObjectName(u"InpPBCLabel")

        self.gridLayout_23.addWidget(self.InpPBCLabel, 0, 0, 1, 1)

        self.Inp_alat_label = QLabel(self.InpUnitCellBox)
        self.Inp_alat_label.setObjectName(u"Inp_alat_label")

        self.gridLayout_23.addWidget(self.Inp_alat_label, 5, 0, 1, 1)


        self.horizontalLayout_6.addWidget(self.InpUnitCellBox)

        self.InpTemplateBox = QGroupBox(self.InpGeometryBox)
        self.InpTemplateBox.setObjectName(u"InpTemplateBox")
        self.InpTemplateBox.setEnabled(True)
        self.gridLayout_52 = QGridLayout(self.InpTemplateBox)
        self.gridLayout_52.setObjectName(u"gridLayout_52")
        self.InpTemplateBCCButton = QPushButton(self.InpTemplateBox)
        self.InpTemplateBCCButton.setObjectName(u"InpTemplateBCCButton")
        self.InpTemplateBCCButton.setEnabled(True)
        icon = QIcon()
        icon.addFile(u"../TemplateStructurePIC/pp_bcc.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.InpTemplateBCCButton.setIcon(icon)
        self.InpTemplateBCCButton.setIconSize(QSize(100, 100))

        self.gridLayout_52.addWidget(self.InpTemplateBCCButton, 0, 1, 1, 1)

        self.InpTemplateSCButton = QPushButton(self.InpTemplateBox)
        self.InpTemplateSCButton.setObjectName(u"InpTemplateSCButton")
        self.InpTemplateSCButton.setEnabled(True)
        icon1 = QIcon()
        icon1.addFile(u"../TemplateStructurePIC/pp_sc.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.InpTemplateSCButton.setIcon(icon1)
        self.InpTemplateSCButton.setIconSize(QSize(100, 100))

        self.gridLayout_52.addWidget(self.InpTemplateSCButton, 0, 0, 1, 1)

        self.InpTemplateFCCButton = QPushButton(self.InpTemplateBox)
        self.InpTemplateFCCButton.setObjectName(u"InpTemplateFCCButton")
        self.InpTemplateFCCButton.setEnabled(True)
        icon2 = QIcon()
        icon2.addFile(u"../TemplateStructurePIC/pp_fcc.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.InpTemplateFCCButton.setIcon(icon2)
        self.InpTemplateFCCButton.setIconSize(QSize(100, 100))

        self.gridLayout_52.addWidget(self.InpTemplateFCCButton, 1, 0, 1, 1)

        self.InpTemplateBCC2TypesButton = QPushButton(self.InpTemplateBox)
        self.InpTemplateBCC2TypesButton.setObjectName(u"InpTemplateBCC2TypesButton")
        self.InpTemplateBCC2TypesButton.setEnabled(True)
        icon3 = QIcon()
        icon3.addFile(u"../TemplateStructurePIC/pp_b2.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.InpTemplateBCC2TypesButton.setIcon(icon3)
        self.InpTemplateBCC2TypesButton.setIconSize(QSize(100, 100))

        self.gridLayout_52.addWidget(self.InpTemplateBCC2TypesButton, 0, 2, 1, 1)

        self.InpTemplateHCPButton = QPushButton(self.InpTemplateBox)
        self.InpTemplateHCPButton.setObjectName(u"InpTemplateHCPButton")
        self.InpTemplateHCPButton.setEnabled(True)
        icon4 = QIcon()
        icon4.addFile(u"../TemplateStructurePIC/pp_hcp.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.InpTemplateHCPButton.setIcon(icon4)
        self.InpTemplateHCPButton.setIconSize(QSize(100, 100))

        self.gridLayout_52.addWidget(self.InpTemplateHCPButton, 1, 1, 1, 1)


        self.horizontalLayout_6.addWidget(self.InpTemplateBox)

        self.InpBasisBox = QGroupBox(self.InpGeometryBox)
        self.InpBasisBox.setObjectName(u"InpBasisBox")
        self.gridLayout_27 = QGridLayout(self.InpBasisBox)
        self.gridLayout_27.setObjectName(u"gridLayout_27")
        self.InpMomBox = QGroupBox(self.InpBasisBox)
        self.InpMomBox.setObjectName(u"InpMomBox")
        self.horizontalLayout_3 = QHBoxLayout(self.InpMomBox)
        self.horizontalLayout_3.setObjectName(u"horizontalLayout_3")
        self.InpMomButtonSelect = QPushButton(self.InpMomBox)
        self.InpMomButtonSelect.setObjectName(u"InpMomButtonSelect")

        self.horizontalLayout_3.addWidget(self.InpMomButtonSelect)

        self.InpMomButtonCreate = QPushButton(self.InpMomBox)
        self.InpMomButtonCreate.setObjectName(u"InpMomButtonCreate")

        self.horizontalLayout_3.addWidget(self.InpMomButtonCreate)


        self.gridLayout_27.addWidget(self.InpMomBox, 1, 0, 1, 1)

        self.InpPosBox = QGroupBox(self.InpBasisBox)
        self.InpPosBox.setObjectName(u"InpPosBox")
        self.horizontalLayout_2 = QHBoxLayout(self.InpPosBox)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.InpPosButtonSelect = QPushButton(self.InpPosBox)
        self.InpPosButtonSelect.setObjectName(u"InpPosButtonSelect")

        self.horizontalLayout_2.addWidget(self.InpPosButtonSelect)

        self.InpPosButtonCreate = QPushButton(self.InpPosBox)
        self.InpPosButtonCreate.setObjectName(u"InpPosButtonCreate")

        self.horizontalLayout_2.addWidget(self.InpPosButtonCreate)


        self.gridLayout_27.addWidget(self.InpPosBox, 0, 0, 1, 1)

        self.horizontalSpacer_7 = QSpacerItem(40, 20, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_27.addItem(self.horizontalSpacer_7, 2, 0, 1, 1)


        self.horizontalLayout_6.addWidget(self.InpBasisBox)


        self.ASDInp_Layout.addWidget(self.InpGeometryBox)

        self.line = QFrame(self.InpConWidgetConts)
        self.line.setObjectName(u"line")
        self.line.setLineWidth(2)
        self.line.setFrameShape(QFrame.Shape.HLine)
        self.line.setFrameShadow(QFrame.Shadow.Sunken)

        self.ASDInp_Layout.addWidget(self.line)

        self.InpImportBox = QGroupBox(self.InpConWidgetConts)
        self.InpImportBox.setObjectName(u"InpImportBox")
        self.gridLayout_53 = QGridLayout(self.InpImportBox)
        self.gridLayout_53.setObjectName(u"gridLayout_53")
        self.InpImportRSPTButton = QPushButton(self.InpImportBox)
        self.InpImportRSPTButton.setObjectName(u"InpImportRSPTButton")

        self.gridLayout_53.addWidget(self.InpImportRSPTButton, 0, 2, 1, 1)

        self.InpImportRSLMTOButton = QPushButton(self.InpImportBox)
        self.InpImportRSLMTOButton.setObjectName(u"InpImportRSLMTOButton")

        self.gridLayout_53.addWidget(self.InpImportRSLMTOButton, 0, 3, 1, 1)

        self.InpImportCIFButton = QPushButton(self.InpImportBox)
        self.InpImportCIFButton.setObjectName(u"InpImportCIFButton")

        self.gridLayout_53.addWidget(self.InpImportCIFButton, 0, 0, 1, 1)

        self.InpImportSPRKKRButton = QPushButton(self.InpImportBox)
        self.InpImportSPRKKRButton.setObjectName(u"InpImportSPRKKRButton")

        self.gridLayout_53.addWidget(self.InpImportSPRKKRButton, 0, 1, 1, 1)

        self.horizontalSpacer_5 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_53.addItem(self.horizontalSpacer_5, 0, 4, 1, 1)


        self.ASDInp_Layout.addWidget(self.InpImportBox)

        self.line1 = QFrame(self.InpConWidgetConts)
        self.line1.setObjectName(u"line1")
        self.line1.setLineWidth(2)
        self.line1.setFrameShape(QFrame.Shape.HLine)
        self.line1.setFrameShadow(QFrame.Shadow.Sunken)

        self.ASDInp_Layout.addWidget(self.line1)

        self.IngGenBox = QGroupBox(self.InpConWidgetConts)
        self.IngGenBox.setObjectName(u"IngGenBox")
        self.horizontalLayout_4 = QHBoxLayout(self.IngGenBox)
        self.horizontalLayout_4.setObjectName(u"horizontalLayout_4")
        self.GeneralGridBox = QGroupBox(self.IngGenBox)
        self.GeneralGridBox.setObjectName(u"GeneralGridBox")
        self.GeneralGridLayout = QGridLayout(self.GeneralGridBox)
        self.GeneralGridLayout.setObjectName(u"GeneralGridLayout")
        self.InpSimIDLabel = QLabel(self.GeneralGridBox)
        self.InpSimIDLabel.setObjectName(u"InpSimIDLabel")

        self.GeneralGridLayout.addWidget(self.InpSimIDLabel, 0, 0, 1, 1)

        self.InpLineEditSimid = QLineEdit(self.GeneralGridBox)
        self.InpLineEditSimid.setObjectName(u"InpLineEditSimid")
        self.InpLineEditSimid.setMaxLength(8)

        self.GeneralGridLayout.addWidget(self.InpLineEditSimid, 0, 1, 1, 1)


        self.horizontalLayout_4.addWidget(self.GeneralGridBox)

        self.InpMeasureBox = QGroupBox(self.IngGenBox)
        self.InpMeasureBox.setObjectName(u"InpMeasureBox")
        self.InpMeasureBox.setCheckable(False)
        self.horizontalLayout_5 = QHBoxLayout(self.InpMeasureBox)
        self.horizontalLayout_5.setObjectName(u"horizontalLayout_5")
        self.InpMeasureLLG = QRadioButton(self.InpMeasureBox)
        self.MeasurePhaseModeSelector = QButtonGroup(VizMainWindow)
        self.MeasurePhaseModeSelector.setObjectName(u"MeasurePhaseModeSelector")
        self.MeasurePhaseModeSelector.addButton(self.InpMeasureLLG)
        self.InpMeasureLLG.setObjectName(u"InpMeasureLLG")
        self.InpMeasureLLG.setChecked(True)

        self.horizontalLayout_5.addWidget(self.InpMeasureLLG)

        self.InpMeasureSelectMCBox = QGroupBox(self.InpMeasureBox)
        self.InpMeasureSelectMCBox.setObjectName(u"InpMeasureSelectMCBox")
        self.verticalLayout_14 = QVBoxLayout(self.InpMeasureSelectMCBox)
        self.verticalLayout_14.setObjectName(u"verticalLayout_14")
        self.InpMeasureMCMet = QRadioButton(self.InpMeasureSelectMCBox)
        self.MeasurePhaseModeSelector.addButton(self.InpMeasureMCMet)
        self.InpMeasureMCMet.setObjectName(u"InpMeasureMCMet")

        self.verticalLayout_14.addWidget(self.InpMeasureMCMet)

        self.InpMeasureMCHeat = QRadioButton(self.InpMeasureSelectMCBox)
        self.MeasurePhaseModeSelector.addButton(self.InpMeasureMCHeat)
        self.InpMeasureMCHeat.setObjectName(u"InpMeasureMCHeat")

        self.verticalLayout_14.addWidget(self.InpMeasureMCHeat)


        self.horizontalLayout_5.addWidget(self.InpMeasureSelectMCBox)

        self.InpMeasureGNEB = QRadioButton(self.InpMeasureBox)
        self.MeasurePhaseModeSelector.addButton(self.InpMeasureGNEB)
        self.InpMeasureGNEB.setObjectName(u"InpMeasureGNEB")

        self.horizontalLayout_5.addWidget(self.InpMeasureGNEB)


        self.horizontalLayout_4.addWidget(self.InpMeasureBox)

        self.InpLLGMeasureBox = QGroupBox(self.IngGenBox)
        self.InpLLGMeasureBox.setObjectName(u"InpLLGMeasureBox")
        self.InpLLGMeasureBox.setCheckable(True)
        self.gridLayout_15 = QGridLayout(self.InpLLGMeasureBox)
        self.gridLayout_15.setObjectName(u"gridLayout_15")
        self.InpASDLLGAlghLabel = QLabel(self.InpLLGMeasureBox)
        self.InpASDLLGAlghLabel.setObjectName(u"InpASDLLGAlghLabel")

        self.gridLayout_15.addWidget(self.InpASDLLGAlghLabel, 5, 0, 1, 1)

        self.InpASDLLGSteps = QLineEdit(self.InpLLGMeasureBox)
        self.InpASDLLGSteps.setObjectName(u"InpASDLLGSteps")

        self.gridLayout_15.addWidget(self.InpASDLLGSteps, 1, 1, 1, 2)

        self.InpASDLLGTempLabel = QLabel(self.InpLLGMeasureBox)
        self.InpASDLLGTempLabel.setObjectName(u"InpASDLLGTempLabel")

        self.gridLayout_15.addWidget(self.InpASDLLGTempLabel, 0, 0, 1, 1)

        self.InpASDLLGDamp = QLineEdit(self.InpLLGMeasureBox)
        self.InpASDLLGDamp.setObjectName(u"InpASDLLGDamp")

        self.gridLayout_15.addWidget(self.InpASDLLGDamp, 3, 1, 2, 2)

        self.InpASDLLGAlgh = QSpinBox(self.InpLLGMeasureBox)
        self.InpASDLLGAlgh.setObjectName(u"InpASDLLGAlgh")
        self.InpASDLLGAlgh.setMinimum(1)
        self.InpASDLLGAlgh.setMaximum(5)

        self.gridLayout_15.addWidget(self.InpASDLLGAlgh, 5, 1, 1, 1)

        self.InpASDLLGDampLabel = QLabel(self.InpLLGMeasureBox)
        self.InpASDLLGDampLabel.setObjectName(u"InpASDLLGDampLabel")

        self.gridLayout_15.addWidget(self.InpASDLLGDampLabel, 3, 0, 2, 1)

        self.InpASDLLGStepsLabel = QLabel(self.InpLLGMeasureBox)
        self.InpASDLLGStepsLabel.setObjectName(u"InpASDLLGStepsLabel")

        self.gridLayout_15.addWidget(self.InpASDLLGStepsLabel, 1, 0, 1, 1)

        self.InpASDLLGTemp = QLineEdit(self.InpLLGMeasureBox)
        self.InpASDLLGTemp.setObjectName(u"InpASDLLGTemp")

        self.gridLayout_15.addWidget(self.InpASDLLGTemp, 0, 1, 1, 2)

        self.InpASDLLGDTLabel = QLabel(self.InpLLGMeasureBox)
        self.InpASDLLGDTLabel.setObjectName(u"InpASDLLGDTLabel")

        self.gridLayout_15.addWidget(self.InpASDLLGDTLabel, 2, 0, 1, 1)

        self.InpASDLLGDT = QLineEdit(self.InpLLGMeasureBox)
        self.InpASDLLGDT.setObjectName(u"InpASDLLGDT")

        self.gridLayout_15.addWidget(self.InpASDLLGDT, 2, 1, 1, 2)


        self.horizontalLayout_4.addWidget(self.InpLLGMeasureBox)

        self.InpMeasureMCBox = QGroupBox(self.IngGenBox)
        self.InpMeasureMCBox.setObjectName(u"InpMeasureMCBox")
        self.InpMeasureMCBox.setCheckable(True)
        self.InpMeasureMCBox.setChecked(False)
        self.gridLayout_14 = QGridLayout(self.InpMeasureMCBox)
        self.gridLayout_14.setObjectName(u"gridLayout_14")
        self.InpMCTempLabel = QLabel(self.InpMeasureMCBox)
        self.InpMCTempLabel.setObjectName(u"InpMCTempLabel")

        self.gridLayout_14.addWidget(self.InpMCTempLabel, 0, 0, 1, 1)

        self.InpMCTemp = QLineEdit(self.InpMeasureMCBox)
        self.InpMCTemp.setObjectName(u"InpMCTemp")

        self.gridLayout_14.addWidget(self.InpMCTemp, 0, 1, 1, 1)

        self.InpMCStepsLabel = QLabel(self.InpMeasureMCBox)
        self.InpMCStepsLabel.setObjectName(u"InpMCStepsLabel")

        self.gridLayout_14.addWidget(self.InpMCStepsLabel, 1, 0, 1, 1)

        self.InpMCSteps = QLineEdit(self.InpMeasureMCBox)
        self.InpMCSteps.setObjectName(u"InpMCSteps")

        self.gridLayout_14.addWidget(self.InpMCSteps, 1, 1, 1, 1)

        self.horizontalSpacer = QSpacerItem(20, 100, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_14.addItem(self.horizontalSpacer, 0, 0, 1, 1)


        self.horizontalLayout_4.addWidget(self.InpMeasureMCBox)

        self.horizontalSpacer1 = QSpacerItem(250, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.horizontalLayout_4.addItem(self.horizontalSpacer1)


        self.ASDInp_Layout.addWidget(self.IngGenBox)

        self.line_2 = QFrame(self.InpConWidgetConts)
        self.line_2.setObjectName(u"line_2")
        self.line_2.setLineWidth(2)
        self.line_2.setFrameShape(QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QFrame.Shadow.Sunken)

        self.ASDInp_Layout.addWidget(self.line_2)

        self.InpHamiltonianFileGen = QGroupBox(self.InpConWidgetConts)
        self.InpHamiltonianFileGen.setObjectName(u"InpHamiltonianFileGen")
        self.InpHamiltonianFileGenLayout = QHBoxLayout(self.InpHamiltonianFileGen)
        self.InpHamiltonianFileGenLayout.setObjectName(u"InpHamiltonianFileGenLayout")
        self.InpJfileBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpJfileBox.setObjectName(u"InpJfileBox")
        self.horizontalLayout_jfile = QHBoxLayout(self.InpJfileBox)
        self.horizontalLayout_jfile.setObjectName(u"horizontalLayout_jfile")
        self.InpJfileButtonSelect = QPushButton(self.InpJfileBox)
        self.InpJfileButtonSelect.setObjectName(u"InpJfileButtonSelect")

        self.horizontalLayout_jfile.addWidget(self.InpJfileButtonSelect)

        self.InpJfileButtonCreate = QPushButton(self.InpJfileBox)
        self.InpJfileButtonCreate.setObjectName(u"InpJfileButtonCreate")

        self.horizontalLayout_jfile.addWidget(self.InpJfileButtonCreate)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpJfileBox)

        self.InpDMBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpDMBox.setObjectName(u"InpDMBox")
        self.horizontalLayout_DM = QHBoxLayout(self.InpDMBox)
        self.horizontalLayout_DM.setObjectName(u"horizontalLayout_DM")
        self.InpDMButtonSelect = QPushButton(self.InpDMBox)
        self.InpDMButtonSelect.setObjectName(u"InpDMButtonSelect")

        self.horizontalLayout_DM.addWidget(self.InpDMButtonSelect)

        self.InpDMButtonCreate = QPushButton(self.InpDMBox)
        self.InpDMButtonCreate.setObjectName(u"InpDMButtonCreate")

        self.horizontalLayout_DM.addWidget(self.InpDMButtonCreate)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpDMBox)

        self.InpKfileBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpKfileBox.setObjectName(u"InpKfileBox")
        self.horizontalLayout_Kfile = QHBoxLayout(self.InpKfileBox)
        self.horizontalLayout_Kfile.setObjectName(u"horizontalLayout_Kfile")
        self.InpKfileButtonSelect = QPushButton(self.InpKfileBox)
        self.InpKfileButtonSelect.setObjectName(u"InpKfileButtonSelect")

        self.horizontalLayout_Kfile.addWidget(self.InpKfileButtonSelect)

        self.InpKfileButtonCreate = QPushButton(self.InpKfileBox)
        self.InpKfileButtonCreate.setObjectName(u"InpKfileButtonCreate")

        self.horizontalLayout_Kfile.addWidget(self.InpKfileButtonCreate)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpKfileBox)

        self.InpPsDipCheckBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpPsDipCheckBox.setObjectName(u"InpPsDipCheckBox")
        self.InpPsDipCheckBoxLayout = QVBoxLayout(self.InpPsDipCheckBox)
        self.InpPsDipCheckBoxLayout.setObjectName(u"InpPsDipCheckBoxLayout")
        self.InpPseudDipSelect = QPushButton(self.InpPsDipCheckBox)
        self.InpPseudDipSelect.setObjectName(u"InpPseudDipSelect")

        self.InpPsDipCheckBoxLayout.addWidget(self.InpPseudDipSelect)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpPsDipCheckBox)

        self.InpBiQCheckBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpBiQCheckBox.setObjectName(u"InpBiQCheckBox")
        self.InpBiQCheckBoxLayout = QVBoxLayout(self.InpBiQCheckBox)
        self.InpBiQCheckBoxLayout.setObjectName(u"InpBiQCheckBoxLayout")
        self.InpBiQSelect = QPushButton(self.InpBiQCheckBox)
        self.InpBiQSelect.setObjectName(u"InpBiQSelect")

        self.InpBiQCheckBoxLayout.addWidget(self.InpBiQSelect)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpBiQCheckBox)

        self.InpBiQDMCheckBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpBiQDMCheckBox.setObjectName(u"InpBiQDMCheckBox")
        self.InpBiQDMCheckBoxLayout = QVBoxLayout(self.InpBiQDMCheckBox)
        self.InpBiQDMCheckBoxLayout.setObjectName(u"InpBiQDMCheckBoxLayout")
        self.InpBiQDMSelect = QPushButton(self.InpBiQDMCheckBox)
        self.InpBiQDMSelect.setObjectName(u"InpBiQDMSelect")

        self.InpBiQDMCheckBoxLayout.addWidget(self.InpBiQDMSelect)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpBiQDMCheckBox)

        self.InpBextMainBox = QGroupBox(self.InpHamiltonianFileGen)
        self.InpBextMainBox.setObjectName(u"InpBextMainBox")
        self.verticalLayout_15 = QVBoxLayout(self.InpBextMainBox)
        self.verticalLayout_15.setObjectName(u"verticalLayout_15")
        self.InpBextMeasureBox = QGroupBox(self.InpBextMainBox)
        self.InpBextMeasureBox.setObjectName(u"InpBextMeasureBox")
        self.InpBextMeasureBox.setCheckable(True)
        self.InpBextMeasureBox.setChecked(False)
        self.gridLayout_7 = QGridLayout(self.InpBextMeasureBox)
        self.gridLayout_7.setObjectName(u"gridLayout_7")
        self.InpBextMeasure_x = QLineEdit(self.InpBextMeasureBox)
        self.InpBextMeasure_x.setObjectName(u"InpBextMeasure_x")

        self.gridLayout_7.addWidget(self.InpBextMeasure_x, 0, 0, 1, 1)

        self.InpBextMeasure_y = QLineEdit(self.InpBextMeasureBox)
        self.InpBextMeasure_y.setObjectName(u"InpBextMeasure_y")

        self.gridLayout_7.addWidget(self.InpBextMeasure_y, 0, 1, 1, 1)

        self.InpBextMeasure_z = QLineEdit(self.InpBextMeasureBox)
        self.InpBextMeasure_z.setObjectName(u"InpBextMeasure_z")

        self.gridLayout_7.addWidget(self.InpBextMeasure_z, 0, 2, 1, 1)


        self.verticalLayout_15.addWidget(self.InpBextMeasureBox)


        self.InpHamiltonianFileGenLayout.addWidget(self.InpBextMainBox)

        self.horizontalSpacer_10 = QSpacerItem(100, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.InpHamiltonianFileGenLayout.addItem(self.horizontalSpacer_10)


        self.ASDInp_Layout.addWidget(self.InpHamiltonianFileGen)

        self.line_3 = QFrame(self.InpConWidgetConts)
        self.line_3.setObjectName(u"line_3")
        self.line_3.setLineWidth(2)
        self.line_3.setFrameShape(QFrame.Shape.HLine)
        self.line_3.setFrameShadow(QFrame.Shadow.Sunken)

        self.ASDInp_Layout.addWidget(self.line_3)

        self.InpMagnonQuickBox = QGroupBox(self.InpConWidgetConts)
        self.InpMagnonQuickBox.setObjectName(u"InpMagnonQuickBox")
        self.InpMagnonQuickLayout = QGridLayout(self.InpMagnonQuickBox)
        self.InpMagnonQuickLayout.setObjectName(u"InpMagnonQuickLayout")
        self.InpMagnonQuickButton = QPushButton(self.InpMagnonQuickBox)
        self.InpMagnonQuickButton.setObjectName(u"InpMagnonQuickButton")

        self.InpMagnonQuickLayout.addWidget(self.InpMagnonQuickButton, 0, 0, 1, 1)

        self.verticalSpacer_9 = QSpacerItem(80, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.InpMagnonQuickLayout.addItem(self.verticalSpacer_9, 0, 1, 1, 1)


        self.ASDInp_Layout.addWidget(self.InpMagnonQuickBox)

        self.line_mag = QFrame(self.InpConWidgetConts)
        self.line_mag.setObjectName(u"line_mag")
        self.line_mag.setLineWidth(2)
        self.line_mag.setFrameShape(QFrame.Shape.HLine)
        self.line_mag.setFrameShadow(QFrame.Shadow.Sunken)

        self.ASDInp_Layout.addWidget(self.line_mag)

        self.InpFInalizeBox = QGroupBox(self.InpConWidgetConts)
        self.InpFInalizeBox.setObjectName(u"InpFInalizeBox")
        self.gridLayout_50 = QGridLayout(self.InpFInalizeBox)
        self.gridLayout_50.setObjectName(u"gridLayout_50")
        self.InpRunSimButton = QPushButton(self.InpFInalizeBox)
        self.InpRunSimButton.setObjectName(u"InpRunSimButton")

        self.gridLayout_50.addWidget(self.InpRunSimButton, 1, 1, 1, 1)

        self.InpDoneButton = QPushButton(self.InpFInalizeBox)
        self.InpDoneButton.setObjectName(u"InpDoneButton")

        self.gridLayout_50.addWidget(self.InpDoneButton, 1, 2, 1, 1)

        self.horizontalSpacer_3 = QSpacerItem(40, 20, QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Minimum)

        self.gridLayout_50.addItem(self.horizontalSpacer_3, 1, 0, 1, 1)

        self.InpCancelButton = QPushButton(self.InpFInalizeBox)
        self.InpCancelButton.setObjectName(u"InpCancelButton")

        self.gridLayout_50.addWidget(self.InpCancelButton, 1, 3, 1, 1)


        self.ASDInp_Layout.addWidget(self.InpFInalizeBox)

        self.verticalSpacer_6 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.ASDInp_Layout.addItem(self.verticalSpacer_6)

        self.InpContWidget.setWidget(self.InpConWidgetConts)

        self.verticalLayout_29.addWidget(self.InpContWidget)

        self.ModeSelector.addTab(self.ASDInput, "")
        self.ASD_Interactive = QWidget()
        self.ASD_Interactive.setObjectName(u"ASD_Interactive")
        self.ASD_Interactive_Layout = QVBoxLayout(self.ASD_Interactive)
        self.ASD_Interactive_Layout.setObjectName(u"ASD_Interactive_Layout")
        self.ASD_Interactive_Layout.setContentsMargins(1, 1, 1, 1)
        self.InteractiveWidget = QWidget(self.ASD_Interactive)
        self.InteractiveWidget.setObjectName(u"InteractiveWidget")
        self.InteractiveContWidgetLayout = QGridLayout(self.InteractiveWidget)
        self.InteractiveContWidgetLayout.setObjectName(u"InteractiveContWidgetLayout")
        self.InteractiveContWidgetLayout.setContentsMargins(1, 1, 1, 1)
        self.InteractiveWidget_Layout = QVBoxLayout()
        self.InteractiveWidget_Layout.setObjectName(u"InteractiveWidget_Layout")

        self.InteractiveContWidgetLayout.addLayout(self.InteractiveWidget_Layout, 0, 0, 1, 1)


        self.ASD_Interactive_Layout.addWidget(self.InteractiveWidget)

        self.ModeSelector.addTab(self.ASD_Interactive, "")

        self.CentralWidgetLayout.addWidget(self.ModeSelector, 0, 0, 1, 1)

        VizMainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(VizMainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1280, 24))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuVTK_Files = QMenu(self.menuFile)
        self.menuVTK_Files.setObjectName(u"menuVTK_Files")
        self.menuPlot_Files = QMenu(self.menuFile)
        self.menuPlot_Files.setObjectName(u"menuPlot_Files")
        self.menuSnapshot = QMenu(self.menubar)
        self.menuSnapshot.setObjectName(u"menuSnapshot")
        self.menuViz_Options = QMenu(self.menubar)
        self.menuViz_Options.setObjectName(u"menuViz_Options")
        self.menuMagnetisation_Opts = QMenu(self.menuViz_Options)
        self.menuMagnetisation_Opts.setObjectName(u"menuMagnetisation_Opts")
        self.menuMagnetisation_Density = QMenu(self.menuMagnetisation_Opts)
        self.menuMagnetisation_Density.setObjectName(u"menuMagnetisation_Density")
        self.menuAtomic_Spins = QMenu(self.menuMagnetisation_Opts)
        self.menuAtomic_Spins.setObjectName(u"menuAtomic_Spins")
        self.menuEnergy_Opts = QMenu(self.menuViz_Options)
        self.menuEnergy_Opts.setObjectName(u"menuEnergy_Opts")
        self.menuNeighbour_Opts = QMenu(self.menuViz_Options)
        self.menuNeighbour_Opts.setObjectName(u"menuNeighbour_Opts")
        self.menuColormap_Options = QMenu(self.menuViz_Options)
        self.menuColormap_Options.setObjectName(u"menuColormap_Options")
        self.menuCamera_Options = QMenu(self.menubar)
        self.menuCamera_Options.setObjectName(u"menuCamera_Options")
        VizMainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(VizMainWindow)
        self.statusbar.setObjectName(u"statusbar")
        VizMainWindow.setStatusBar(self.statusbar)
        self.OptionDock = QDockWidget(VizMainWindow)
        self.OptionDock.setObjectName(u"OptionDock")
        self.OptionDock.setMinimumSize(QSize(350, 695))
        self.OptionDock.setMaximumSize(QSize(350, 800))
        self.OptionDock.setFocusPolicy(Qt.NoFocus)
        self.OptionDock.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.OptionDock.setAcceptDrops(False)
        self.OptionDock.setAutoFillBackground(True)
        self.OptionDock.setFeatures(QDockWidget.NoDockWidgetFeatures)
        self.OptionDock.setAllowedAreas(Qt.LeftDockWidgetArea|Qt.RightDockWidgetArea)
        self.dockWidgetContents = QWidget()
        self.dockWidgetContents.setObjectName(u"dockWidgetContents")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Minimum)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.dockWidgetContents.sizePolicy().hasHeightForWidth())
        self.dockWidgetContents.setSizePolicy(sizePolicy1)
        self.verticalLayout_11 = QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout_11.setObjectName(u"verticalLayout_11")
        self.VizToolBox = QToolBox(self.dockWidgetContents)
        self.VizToolBox.setObjectName(u"VizToolBox")
        self.VizToolBox.setEnabled(True)
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.Preferred)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.VizToolBox.sizePolicy().hasHeightForWidth())
        self.VizToolBox.setSizePolicy(sizePolicy2)
        self.VizToolBox.setMinimumSize(QSize(300, 500))
        self.VizToolBox.setBaseSize(QSize(300, 500))
        self.VizToolBox.setLayoutDirection(Qt.LeftToRight)
        self.VizToolBox.setFrameShape(QFrame.Box)
        self.VizToolBox.setFrameShadow(QFrame.Sunken)
        self.Mag_Page = QWidget()
        self.Mag_Page.setObjectName(u"Mag_Page")
        self.Mag_Page.setGeometry(QRect(0, 0, 354, 534))
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Preferred)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.Mag_Page.sizePolicy().hasHeightForWidth())
        self.Mag_Page.setSizePolicy(sizePolicy3)
        self.MagPageLayout = QGridLayout(self.Mag_Page)
        self.MagPageLayout.setObjectName(u"MagPageLayout")
        self.MagMainGroup = QGroupBox(self.Mag_Page)
        self.MagMainGroup.setObjectName(u"MagMainGroup")
        self.MagMainGroup.setEnabled(True)
        self.MagMainGroup.setCheckable(False)
        self.MagMainLayout = QVBoxLayout(self.MagMainGroup)
        self.MagMainLayout.setObjectName(u"MagMainLayout")
        self.DensBox = QGroupBox(self.MagMainGroup)
        self.DensBox.setObjectName(u"DensBox")
        self.DensBox.setEnabled(True)
        sizePolicy3.setHeightForWidth(self.DensBox.sizePolicy().hasHeightForWidth())
        self.DensBox.setSizePolicy(sizePolicy3)
        self.DensBox.setFlat(False)
        self.DensBox.setCheckable(True)
        self.DensBox.setChecked(False)
        self.MagDensBoxLayout = QVBoxLayout(self.DensBox)
        self.MagDensBoxLayout.setObjectName(u"MagDensBoxLayout")
        self.DensX = QRadioButton(self.DensBox)
        self.MagDensSelector = QButtonGroup(VizMainWindow)
        self.MagDensSelector.setObjectName(u"MagDensSelector")
        self.MagDensSelector.addButton(self.DensX)
        self.DensX.setObjectName(u"DensX")
        self.DensX.setMaximumSize(QSize(16777215, 16777215))
        self.DensX.setAutoFillBackground(False)

        self.MagDensBoxLayout.addWidget(self.DensX)

        self.DensY = QRadioButton(self.DensBox)
        self.MagDensSelector.addButton(self.DensY)
        self.DensY.setObjectName(u"DensY")

        self.MagDensBoxLayout.addWidget(self.DensY)

        self.DensZ = QRadioButton(self.DensBox)
        self.MagDensSelector.addButton(self.DensZ)
        self.DensZ.setObjectName(u"DensZ")
        self.DensZ.setChecked(True)

        self.MagDensBoxLayout.addWidget(self.DensZ)


        self.MagMainLayout.addWidget(self.DensBox)

        self.SpinsBox = QGroupBox(self.MagMainGroup)
        self.SpinsBox.setObjectName(u"SpinsBox")
        self.SpinsBox.setEnabled(True)
        sizePolicy3.setHeightForWidth(self.SpinsBox.sizePolicy().hasHeightForWidth())
        self.SpinsBox.setSizePolicy(sizePolicy3)
        self.SpinsBox.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.SpinsBox.setFlat(False)
        self.SpinsBox.setCheckable(True)
        self.SpinsBox.setChecked(True)
        self.SpinBoxLayout = QVBoxLayout(self.SpinsBox)
        self.SpinBoxLayout.setObjectName(u"SpinBoxLayout")
        self.SpinX = QRadioButton(self.SpinsBox)
        self.SpinProjSelector = QButtonGroup(VizMainWindow)
        self.SpinProjSelector.setObjectName(u"SpinProjSelector")
        self.SpinProjSelector.addButton(self.SpinX)
        self.SpinX.setObjectName(u"SpinX")
        self.SpinX.setAutoFillBackground(False)

        self.SpinBoxLayout.addWidget(self.SpinX)

        self.SpinY = QRadioButton(self.SpinsBox)
        self.SpinProjSelector.addButton(self.SpinY)
        self.SpinY.setObjectName(u"SpinY")

        self.SpinBoxLayout.addWidget(self.SpinY)

        self.SpinZ = QRadioButton(self.SpinsBox)
        self.SpinProjSelector.addButton(self.SpinZ)
        self.SpinZ.setObjectName(u"SpinZ")
        self.SpinZ.setChecked(True)

        self.SpinBoxLayout.addWidget(self.SpinZ)

        self.SpinSliderLabel = QLabel(self.SpinsBox)
        self.SpinSliderLabel.setObjectName(u"SpinSliderLabel")
        self.SpinSliderLabel.setFrameShape(QFrame.NoFrame)
        self.SpinSliderLabel.setAlignment(Qt.AlignCenter)

        self.SpinBoxLayout.addWidget(self.SpinSliderLabel)

        self.SpinSize = QSlider(self.SpinsBox)
        self.SpinSize.setObjectName(u"SpinSize")
        self.SpinSize.setEnabled(True)
        font = QFont()
        font.setItalic(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        self.SpinSize.setFont(font)
        self.SpinSize.setMinimum(5)
        self.SpinSize.setMaximum(50)
        self.SpinSize.setPageStep(1)
        self.SpinSize.setValue(10)
        self.SpinSize.setSliderPosition(10)
        self.SpinSize.setOrientation(Qt.Horizontal)
        self.SpinSize.setTickPosition(QSlider.TicksBelow)
        self.SpinSize.setTickInterval(5)

        self.SpinBoxLayout.addWidget(self.SpinSize)

        self.SpinGlyphSelectBox = QGroupBox(self.SpinsBox)
        self.SpinGlyphSelectBox.setObjectName(u"SpinGlyphSelectBox")
        self.SpinGlyphSelectBox.setEnabled(True)
        self.SpinSelectBoxLayout = QGridLayout(self.SpinGlyphSelectBox)
        self.SpinSelectBoxLayout.setObjectName(u"SpinSelectBoxLayout")
        self.SpinArrowButton = QRadioButton(self.SpinGlyphSelectBox)
        self.SpinGlyphButtonGroup = QButtonGroup(VizMainWindow)
        self.SpinGlyphButtonGroup.setObjectName(u"SpinGlyphButtonGroup")
        self.SpinGlyphButtonGroup.addButton(self.SpinArrowButton)
        self.SpinArrowButton.setObjectName(u"SpinArrowButton")
        self.SpinArrowButton.setChecked(True)

        self.SpinSelectBoxLayout.addWidget(self.SpinArrowButton, 0, 0, 1, 1)

        self.SpinConeButton = QRadioButton(self.SpinGlyphSelectBox)
        self.SpinGlyphButtonGroup.addButton(self.SpinConeButton)
        self.SpinConeButton.setObjectName(u"SpinConeButton")

        self.SpinSelectBoxLayout.addWidget(self.SpinConeButton, 1, 0, 1, 1)

        self.SpinSphereButton = QRadioButton(self.SpinGlyphSelectBox)
        self.SpinGlyphButtonGroup.addButton(self.SpinSphereButton)
        self.SpinSphereButton.setObjectName(u"SpinSphereButton")

        self.SpinSelectBoxLayout.addWidget(self.SpinSphereButton, 2, 0, 1, 1)

        self.SpinCubeButton = QRadioButton(self.SpinGlyphSelectBox)
        self.SpinGlyphButtonGroup.addButton(self.SpinCubeButton)
        self.SpinCubeButton.setObjectName(u"SpinCubeButton")

        self.SpinSelectBoxLayout.addWidget(self.SpinCubeButton, 3, 0, 1, 1)

        self.SpinBarButton = QRadioButton(self.SpinGlyphSelectBox)
        self.SpinGlyphButtonGroup.addButton(self.SpinBarButton)
        self.SpinBarButton.setObjectName(u"SpinBarButton")

        self.SpinSelectBoxLayout.addWidget(self.SpinBarButton, 4, 0, 1, 1)

        self.SpinCenterCheck = QCheckBox(self.SpinGlyphSelectBox)
        self.SpinCenterCheck.setObjectName(u"SpinCenterCheck")

        self.SpinSelectBoxLayout.addWidget(self.SpinCenterCheck, 0, 1, 1, 1)

        self.GlyphQualitySliderLabel = QLabel(self.SpinGlyphSelectBox)
        self.GlyphQualitySliderLabel.setObjectName(u"GlyphQualitySliderLabel")
        self.GlyphQualitySliderLabel.setFrameShape(QFrame.NoFrame)
        self.GlyphQualitySliderLabel.setAlignment(Qt.AlignCenter)

        self.SpinSelectBoxLayout.addWidget(self.GlyphQualitySliderLabel, 0, 0, 1, 1)

        self.GlyphQualitySlider = QSlider(self.SpinGlyphSelectBox)
        self.GlyphQualitySlider.setObjectName(u"GlyphQualitySlider")
        self.GlyphQualitySlider.setSliderPosition(16)
        self.GlyphQualitySlider.setMinimum(8)
        self.GlyphQualitySlider.setMaximum(64)
        self.GlyphQualitySlider.setPageStep(8)
        self.GlyphQualitySlider.setValue(16)
        self.GlyphQualitySlider.setOrientation(Qt.Horizontal)
        self.GlyphQualitySlider.setTickPosition(QSlider.TicksBelow)

        self.SpinSelectBoxLayout.addWidget(self.GlyphQualitySlider, 0, 0, 1, 1)


        self.SpinBoxLayout.addWidget(self.SpinGlyphSelectBox)

        self.SpinColorScale = QCheckBox(self.SpinsBox)
        self.SpinColorScale.setObjectName(u"SpinColorScale")
        self.SpinColorScale.setChecked(True)

        self.SpinBoxLayout.addWidget(self.SpinColorScale)


        self.MagMainLayout.addWidget(self.SpinsBox)

        self.AtomsBox = QGroupBox(self.MagMainGroup)
        self.AtomsBox.setObjectName(u"AtomsBox")
        self.AtomsBox.setEnabled(True)
        sizePolicy3.setHeightForWidth(self.AtomsBox.sizePolicy().hasHeightForWidth())
        self.AtomsBox.setSizePolicy(sizePolicy3)
        self.AtomsBox.setContextMenuPolicy(Qt.DefaultContextMenu)
        self.AtomsBox.setFlat(False)
        self.AtomsBox.setCheckable(True)
        self.AtomsBox.setChecked(False)
        self.AtomBoxLayout = QVBoxLayout(self.AtomsBox)
        self.AtomBoxLayout.setObjectName(u"AtomBoxLayout")
        self.AtomSizeSliderLabel = QLabel(self.AtomsBox)
        self.AtomSizeSliderLabel.setObjectName(u"AtomSizeSliderLabel")
        self.AtomSizeSliderLabel.setFrameShape(QFrame.NoFrame)
        self.AtomSizeSliderLabel.setAlignment(Qt.AlignCenter)

        self.AtomBoxLayout.addWidget(self.AtomSizeSliderLabel)

        self.AtomSize = QSlider(self.AtomsBox)
        self.AtomSize.setObjectName(u"AtomSize")
        self.AtomSize.setEnabled(True)
        self.AtomSize.setFont(font)
        self.AtomSize.setMinimum(0)
        self.AtomSize.setMaximum(50)
        self.AtomSize.setPageStep(1)
        self.AtomSize.setValue(10)
        self.AtomSize.setSliderPosition(10)
        self.AtomSize.setOrientation(Qt.Horizontal)
        self.AtomSize.setTickPosition(QSlider.TicksBelow)
        self.AtomSize.setTickInterval(5)

        self.AtomBoxLayout.addWidget(self.AtomSize)

        self.AtomOpaqSliderLabel = QLabel(self.AtomsBox)
        self.AtomOpaqSliderLabel.setObjectName(u"AtomOpaqSliderLabel")
        self.AtomOpaqSliderLabel.setFrameShape(QFrame.NoFrame)
        self.AtomOpaqSliderLabel.setAlignment(Qt.AlignCenter)

        self.AtomBoxLayout.addWidget(self.AtomOpaqSliderLabel)

        self.AtomOpaq = QSlider(self.AtomsBox)
        self.AtomOpaq.setObjectName(u"AtomOpaq")
        self.AtomOpaq.setEnabled(True)
        self.AtomOpaq.setFont(font)
        self.AtomOpaq.setMinimum(0)
        self.AtomOpaq.setMaximum(100)
        self.AtomOpaq.setPageStep(1)
        self.AtomOpaq.setValue(10)
        self.AtomOpaq.setSliderPosition(100)
        self.AtomOpaq.setOrientation(Qt.Horizontal)
        self.AtomOpaq.setTickPosition(QSlider.TicksBelow)
        self.AtomOpaq.setTickInterval(10)

        self.AtomBoxLayout.addWidget(self.AtomOpaq)

        self.AtomQualiSliderLabel = QLabel(self.AtomsBox)
        self.AtomQualiSliderLabel.setObjectName(u"AtomQualiSliderLabel")
        self.AtomQualiSliderLabel.setFrameShape(QFrame.NoFrame)
        self.AtomQualiSliderLabel.setAlignment(Qt.AlignCenter)

        self.AtomBoxLayout.addWidget(self.AtomQualiSliderLabel)

        self.AtomQuali = QSlider(self.AtomsBox)
        self.AtomQuali.setObjectName(u"AtomQuali")
        self.AtomQuali.setEnabled(True)
        self.AtomQuali.setFont(font)
        self.AtomQuali.setMinimum(8)
        self.AtomQuali.setMaximum(128)
        self.AtomQuali.setPageStep(8)
        self.AtomQuali.setValue(12)
        self.AtomQuali.setSliderPosition(12)
        self.AtomQuali.setOrientation(Qt.Horizontal)
        self.AtomQuali.setTickPosition(QSlider.TicksBelow)
        self.AtomQuali.setTickInterval(8)

        self.AtomBoxLayout.addWidget(self.AtomQuali)


        self.MagMainLayout.addWidget(self.AtomsBox)

        self.MomOptGroup = QGroupBox(self.MagMainGroup)
        self.MomOptGroup.setObjectName(u"MomOptGroup")
        self.MomOptGroup.setEnabled(True)
        sizePolicy3.setHeightForWidth(self.MomOptGroup.sizePolicy().hasHeightForWidth())
        self.MomOptGroup.setSizePolicy(sizePolicy3)
        self.MomOptGroup.setMinimumSize(QSize(300, 0))
        self.MomOptLayout = QVBoxLayout(self.MomOptGroup)
        self.MomOptLayout.setObjectName(u"MomOptLayout")
        self.SpinCheck = QCheckBox(self.MomOptGroup)
        self.SpinCheck.setObjectName(u"SpinCheck")
        self.SpinCheck.setEnabled(False)

        self.MomOptLayout.addWidget(self.SpinCheck)

        self.ContourCheck = QCheckBox(self.MomOptGroup)
        self.ContourCheck.setObjectName(u"ContourCheck")

        self.MomOptLayout.addWidget(self.ContourCheck)

        self.KMCCheck = QCheckBox(self.MomOptGroup)
        self.KMCCheck.setObjectName(u"KMCCheck")
        self.KMCCheck.setChecked(True)

        self.MomOptLayout.addWidget(self.KMCCheck)


        self.MagMainLayout.addWidget(self.MomOptGroup)

        self.verticalSpacer_3 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.MagMainLayout.addItem(self.verticalSpacer_3)


        self.MagPageLayout.addWidget(self.MagMainGroup, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.Mag_Page, u"Magnetization Options")
        self.Ene_Page = QWidget()
        self.Ene_Page.setObjectName(u"Ene_Page")
        self.Ene_Page.setGeometry(QRect(0, 0, 322, 495))
        sizePolicy2.setHeightForWidth(self.Ene_Page.sizePolicy().hasHeightForWidth())
        self.Ene_Page.setSizePolicy(sizePolicy2)
        self.gridLayout_3 = QGridLayout(self.Ene_Page)
        self.gridLayout_3.setObjectName(u"gridLayout_3")
        self.EneMainBox = QGroupBox(self.Ene_Page)
        self.EneMainBox.setObjectName(u"EneMainBox")
        self.verticalLayout_9 = QVBoxLayout(self.EneMainBox)
        self.verticalLayout_9.setObjectName(u"verticalLayout_9")
        self.EneSelectBox = QGroupBox(self.EneMainBox)
        self.EneSelectBox.setObjectName(u"EneSelectBox")
        self.EneSelectBox.setEnabled(True)
        self.EneSelectBox.setMinimumSize(QSize(200, 0))
        self.EneBoxLayout = QVBoxLayout(self.EneSelectBox)
        self.EneBoxLayout.setObjectName(u"EneBoxLayout")
        self.TotEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector = QButtonGroup(VizMainWindow)
        self.EneSelector.setObjectName(u"EneSelector")
        self.EneSelector.addButton(self.TotEneButton)
        self.TotEneButton.setObjectName(u"TotEneButton")
        self.TotEneButton.setChecked(True)

        self.EneBoxLayout.addWidget(self.TotEneButton)

        self.ExcEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.ExcEneButton)
        self.ExcEneButton.setObjectName(u"ExcEneButton")

        self.EneBoxLayout.addWidget(self.ExcEneButton)

        self.DMEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.DMEneButton)
        self.DMEneButton.setObjectName(u"DMEneButton")

        self.EneBoxLayout.addWidget(self.DMEneButton)

        self.AniEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.AniEneButton)
        self.AniEneButton.setObjectName(u"AniEneButton")

        self.EneBoxLayout.addWidget(self.AniEneButton)

        self.BqEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.BqEneButton)
        self.BqEneButton.setObjectName(u"BqEneButton")

        self.EneBoxLayout.addWidget(self.BqEneButton)

        self.BqDMEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.BqDMEneButton)
        self.BqDMEneButton.setObjectName(u"BqDMEneButton")

        self.EneBoxLayout.addWidget(self.BqDMEneButton)

        self.PdEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.PdEneButton)
        self.PdEneButton.setObjectName(u"PdEneButton")

        self.EneBoxLayout.addWidget(self.PdEneButton)

        self.BextEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.BextEneButton)
        self.BextEneButton.setObjectName(u"BextEneButton")

        self.EneBoxLayout.addWidget(self.BextEneButton)

        self.DipEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.DipEneButton)
        self.DipEneButton.setObjectName(u"DipEneButton")

        self.EneBoxLayout.addWidget(self.DipEneButton)

        self.ChirEneButton = QRadioButton(self.EneSelectBox)
        self.EneSelector.addButton(self.ChirEneButton)
        self.ChirEneButton.setObjectName(u"ChirEneButton")

        self.EneBoxLayout.addWidget(self.ChirEneButton)


        self.verticalLayout_9.addWidget(self.EneSelectBox)

        self.EneActorBox = QGroupBox(self.EneMainBox)
        self.EneActorBox.setObjectName(u"EneActorBox")
        self.verticalLayout_3 = QVBoxLayout(self.EneActorBox)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.EneDensButton = QRadioButton(self.EneActorBox)
        self.EneActorBGroup = QButtonGroup(VizMainWindow)
        self.EneActorBGroup.setObjectName(u"EneActorBGroup")
        self.EneActorBGroup.addButton(self.EneDensButton)
        self.EneDensButton.setObjectName(u"EneDensButton")
        self.EneDensButton.setChecked(True)

        self.verticalLayout_3.addWidget(self.EneDensButton)

        self.EneSiteGlyphs = QRadioButton(self.EneActorBox)
        self.EneActorBGroup.addButton(self.EneSiteGlyphs)
        self.EneSiteGlyphs.setObjectName(u"EneSiteGlyphs")

        self.verticalLayout_3.addWidget(self.EneSiteGlyphs)


        self.verticalLayout_9.addWidget(self.EneActorBox)

        self.verticalSpacer = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_9.addItem(self.verticalSpacer)


        self.gridLayout_3.addWidget(self.EneMainBox, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.Ene_Page, u"Energy Options")
        self.Neigh_Page = QWidget()
        self.Neigh_Page.setObjectName(u"Neigh_Page")
        self.Neigh_Page.setGeometry(QRect(0, 0, 322, 495))
        self.gridLayout_6 = QGridLayout(self.Neigh_Page)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.NeighMainBox = QGroupBox(self.Neigh_Page)
        self.NeighMainBox.setObjectName(u"NeighMainBox")
        self.NeighMainBox.setEnabled(True)
        self.verticalLayout_10 = QVBoxLayout(self.NeighMainBox)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.NeighSelectBox = QGroupBox(self.NeighMainBox)
        self.NeighSelectBox.setObjectName(u"NeighSelectBox")
        self.NeighSelectBox.setEnabled(True)
        self.NeighSelectBox.setCheckable(False)
        self.gridLayout = QGridLayout(self.NeighSelectBox)
        self.gridLayout.setObjectName(u"gridLayout")
        self.AtomNumLabel = QLabel(self.NeighSelectBox)
        self.AtomNumLabel.setObjectName(u"AtomNumLabel")

        self.gridLayout.addWidget(self.AtomNumLabel, 0, 0, 1, 1)

        self.NeighSelectLineEdit = QLineEdit(self.NeighSelectBox)
        self.NeighSelectLineEdit.setObjectName(u"NeighSelectLineEdit")

        self.gridLayout.addWidget(self.NeighSelectLineEdit, 0, 1, 1, 1)

        self.NeighSelectSlider = QSlider(self.NeighSelectBox)
        self.NeighSelectSlider.setObjectName(u"NeighSelectSlider")
        self.NeighSelectSlider.setMinimum(1)
        self.NeighSelectSlider.setMaximum(10)
        self.NeighSelectSlider.setOrientation(Qt.Horizontal)
        self.NeighSelectSlider.setTickPosition(QSlider.TicksBelow)
        self.NeighSelectSlider.setTickInterval(1)

        self.gridLayout.addWidget(self.NeighSelectSlider, 1, 0, 1, 2)

        self.NeighInfoBox = QGroupBox(self.NeighSelectBox)
        self.NeighInfoBox.setObjectName(u"NeighInfoBox")
        self.NeighInfoLayout = QGridLayout(self.NeighInfoBox)
        self.NeighInfoLayout.setObjectName(u"NeighInfoLayout")
        self.NeighNumberLabel = QLabel(self.NeighInfoBox)
        self.NeighNumberLabel.setObjectName(u"NeighNumberLabel")

        self.NeighInfoLayout.addWidget(self.NeighNumberLabel, 0, 0, 1, 1)


        self.gridLayout.addWidget(self.NeighInfoBox, 2, 0, 1, 2)


        self.verticalLayout_10.addWidget(self.NeighSelectBox)

        self.NeighOptBox = QGroupBox(self.NeighMainBox)
        self.NeighOptBox.setObjectName(u"NeighOptBox")
        self.NeighOptBox.setEnabled(True)
        self.NeighOptLayout = QGridLayout(self.NeighOptBox)
        self.NeighOptLayout.setObjectName(u"NeighOptLayout")
        self.NeighAtomCheck = QCheckBox(self.NeighOptBox)
        self.NeighAtomCheck.setObjectName(u"NeighAtomCheck")
        self.NeighAtomCheck.setChecked(True)

        self.NeighOptLayout.addWidget(self.NeighAtomCheck, 0, 0, 1, 1)

        self.NeighNeighsCheck = QCheckBox(self.NeighOptBox)
        self.NeighNeighsCheck.setObjectName(u"NeighNeighsCheck")
        self.NeighNeighsCheck.setChecked(True)

        self.NeighOptLayout.addWidget(self.NeighNeighsCheck, 1, 0, 1, 1)

        self.NeighOpacityLabel = QLabel(self.NeighOptBox)
        self.NeighOpacityLabel.setObjectName(u"NeighOpacityLabel")

        self.NeighOptLayout.addWidget(self.NeighOpacityLabel, 2, 0, 1, 1)

        self.NeighOpacitySlider = QSlider(self.NeighOptBox)
        self.NeighOpacitySlider.setObjectName(u"NeighOpacitySlider")
        self.NeighOpacitySlider.setMaximum(10)
        self.NeighOpacitySlider.setSliderPosition(10)
        self.NeighOpacitySlider.setOrientation(Qt.Horizontal)
        self.NeighOpacitySlider.setTickPosition(QSlider.TicksBelow)
        self.NeighOpacitySlider.setTickInterval(1)

        self.NeighOptLayout.addWidget(self.NeighOpacitySlider, 3, 0, 1, 1)

        self.AtomOpacityLabel = QLabel(self.NeighOptBox)
        self.AtomOpacityLabel.setObjectName(u"AtomOpacityLabel")

        self.NeighOptLayout.addWidget(self.AtomOpacityLabel, 4, 0, 1, 1)

        self.AtomOpacitySlider = QSlider(self.NeighOptBox)
        self.AtomOpacitySlider.setObjectName(u"AtomOpacitySlider")
        self.AtomOpacitySlider.setMaximum(10)
        self.AtomOpacitySlider.setSliderPosition(10)
        self.AtomOpacitySlider.setOrientation(Qt.Horizontal)
        self.AtomOpacitySlider.setTickPosition(QSlider.TicksBelow)
        self.AtomOpacitySlider.setTickInterval(1)

        self.NeighOptLayout.addWidget(self.AtomOpacitySlider, 5, 0, 1, 1)


        self.verticalLayout_10.addWidget(self.NeighOptBox)

        self.verticalSpacer_2 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_10.addItem(self.verticalSpacer_2)


        self.gridLayout_6.addWidget(self.NeighMainBox, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.Neigh_Page, u"Neighbour Options")
        self.SceneOptPage = QWidget()
        self.SceneOptPage.setObjectName(u"SceneOptPage")
        self.SceneOptPage.setGeometry(QRect(0, 0, 354, 685))
        self.gridLayout_4 = QGridLayout(self.SceneOptPage)
        self.gridLayout_4.setObjectName(u"gridLayout_4")
        self.SceneOptMainBox = QGroupBox(self.SceneOptPage)
        self.SceneOptMainBox.setObjectName(u"SceneOptMainBox")
        self.verticalLayout = QVBoxLayout(self.SceneOptMainBox)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.SceneOptBox = QGroupBox(self.SceneOptMainBox)
        self.SceneOptBox.setObjectName(u"SceneOptBox")
        self.SceneOptBox.setEnabled(True)
        self.SceneOptLayout = QVBoxLayout(self.SceneOptBox)
        self.SceneOptLayout.setObjectName(u"SceneOptLayout")
        self.ScalarBarCheck = QCheckBox(self.SceneOptBox)
        self.ScalarBarCheck.setObjectName(u"ScalarBarCheck")
        self.ScalarBarCheck.setChecked(True)

        self.SceneOptLayout.addWidget(self.ScalarBarCheck)

        self.AxesCheck = QCheckBox(self.SceneOptBox)
        self.AxesCheck.setObjectName(u"AxesCheck")
        self.AxesCheck.setChecked(True)

        self.SceneOptLayout.addWidget(self.AxesCheck)

        self.ClusBox = QCheckBox(self.SceneOptBox)
        self.ClusBox.setObjectName(u"ClusBox")
        self.ClusBox.setChecked(True)

        self.SceneOptLayout.addWidget(self.ClusBox)

        self.TimeStepBox = QGroupBox(self.SceneOptBox)
        self.TimeStepBox.setObjectName(u"TimeStepBox")
        self.TimeStepBox.setCheckable(True)
        self.TimeStepBox.setChecked(False)
        self.TimeStepLayout = QHBoxLayout(self.TimeStepBox)
        self.TimeStepLayout.setObjectName(u"TimeStepLayout")
        self.TimeStepLabel = QLabel(self.TimeStepBox)
        self.TimeStepLabel.setObjectName(u"TimeStepLabel")

        self.TimeStepLayout.addWidget(self.TimeStepLabel)

        self.TimeStepLineEdit = QLineEdit(self.TimeStepBox)
        self.TimeStepLineEdit.setObjectName(u"TimeStepLineEdit")

        self.TimeStepLayout.addWidget(self.TimeStepLineEdit)


        self.SceneOptLayout.addWidget(self.TimeStepBox)


        self.verticalLayout.addWidget(self.SceneOptBox)

        self.ClippBox = QGroupBox(self.SceneOptMainBox)
        self.ClippBox.setObjectName(u"ClippBox")
        self.ClippBox.setEnabled(True)
        sizePolicy3.setHeightForWidth(self.ClippBox.sizePolicy().hasHeightForWidth())
        self.ClippBox.setSizePolicy(sizePolicy3)
        self.ClippBox.setMinimumSize(QSize(300, 0))
        self.ClippBox.setCheckable(True)
        self.ClippBox.setChecked(False)
        self.ClippPlaneLayout = QVBoxLayout(self.ClippBox)
        self.ClippPlaneLayout.setObjectName(u"ClippPlaneLayout")
        self.ClippPlaneXCheck = QRadioButton(self.ClippBox)
        self.ClippingPlaneSelector = QButtonGroup(VizMainWindow)
        self.ClippingPlaneSelector.setObjectName(u"ClippingPlaneSelector")
        self.ClippingPlaneSelector.addButton(self.ClippPlaneXCheck)
        self.ClippPlaneXCheck.setObjectName(u"ClippPlaneXCheck")
        self.ClippPlaneXCheck.setEnabled(False)
        self.ClippPlaneXCheck.setAutoFillBackground(False)
        self.ClippPlaneXCheck.setChecked(True)

        self.ClippPlaneLayout.addWidget(self.ClippPlaneXCheck)

        self.ClippPlaneYCheck = QRadioButton(self.ClippBox)
        self.ClippingPlaneSelector.addButton(self.ClippPlaneYCheck)
        self.ClippPlaneYCheck.setObjectName(u"ClippPlaneYCheck")
        self.ClippPlaneYCheck.setAutoFillBackground(False)

        self.ClippPlaneLayout.addWidget(self.ClippPlaneYCheck)

        self.ClippPlaneZCheck = QRadioButton(self.ClippBox)
        self.ClippingPlaneSelector.addButton(self.ClippPlaneZCheck)
        self.ClippPlaneZCheck.setObjectName(u"ClippPlaneZCheck")
        self.ClippPlaneZCheck.setAutoFillBackground(False)
        self.ClippPlaneZCheck.setChecked(False)

        self.ClippPlaneLayout.addWidget(self.ClippPlaneZCheck)

        self.ClippingPlaneSlider = QSlider(self.ClippBox)
        self.ClippingPlaneSlider.setObjectName(u"ClippingPlaneSlider")
        self.ClippingPlaneSlider.setEnabled(False)
        self.ClippingPlaneSlider.setFont(font)
        self.ClippingPlaneSlider.setMinimum(0)
        self.ClippingPlaneSlider.setMaximum(10)
        self.ClippingPlaneSlider.setPageStep(1)
        self.ClippingPlaneSlider.setValue(0)
        self.ClippingPlaneSlider.setOrientation(Qt.Horizontal)
        self.ClippingPlaneSlider.setTickPosition(QSlider.TicksBelow)
        self.ClippingPlaneSlider.setTickInterval(1)

        self.ClippPlaneLayout.addWidget(self.ClippingPlaneSlider)

        self.ClipPlaneLabel = QLabel(self.ClippBox)
        self.ClipPlaneLabel.setObjectName(u"ClipPlaneLabel")

        self.ClippPlaneLayout.addWidget(self.ClipPlaneLabel)


        self.verticalLayout.addWidget(self.ClippBox)

        self.BackgroundColorBox = QGroupBox(self.SceneOptMainBox)
        self.BackgroundColorBox.setObjectName(u"BackgroundColorBox")
        self.BackgroundColorBox.setEnabled(True)
        self.BackgroundColorLayout = QGridLayout(self.BackgroundColorBox)
        self.BackgroundColorLayout.setObjectName(u"BackgroundColorLayout")
        self.RGBRedBackgroundLabel = QLabel(self.BackgroundColorBox)
        self.RGBRedBackgroundLabel.setObjectName(u"RGBRedBackgroundLabel")

        self.BackgroundColorLayout.addWidget(self.RGBRedBackgroundLabel, 0, 0, 1, 1)

        self.RGBRedBackgroundSlider = QSlider(self.BackgroundColorBox)
        self.RGBRedBackgroundSlider.setObjectName(u"RGBRedBackgroundSlider")
        self.RGBRedBackgroundSlider.setEnabled(True)
        self.RGBRedBackgroundSlider.setMinimum(0)
        self.RGBRedBackgroundSlider.setMaximum(255)
        self.RGBRedBackgroundSlider.setPageStep(16)
        self.RGBRedBackgroundSlider.setValue(255)
        self.RGBRedBackgroundSlider.setOrientation(Qt.Horizontal)
        self.RGBRedBackgroundSlider.setTickPosition(QSlider.TicksBelow)
        self.RGBRedBackgroundSlider.setTickInterval(16)

        self.BackgroundColorLayout.addWidget(self.RGBRedBackgroundSlider, 0, 1, 1, 1)

        self.RGBGreenBackgroundLabel = QLabel(self.BackgroundColorBox)
        self.RGBGreenBackgroundLabel.setObjectName(u"RGBGreenBackgroundLabel")

        self.BackgroundColorLayout.addWidget(self.RGBGreenBackgroundLabel, 1, 0, 1, 1)

        self.RGBGreenBackgroundSlider = QSlider(self.BackgroundColorBox)
        self.RGBGreenBackgroundSlider.setObjectName(u"RGBGreenBackgroundSlider")
        self.RGBGreenBackgroundSlider.setEnabled(True)
        self.RGBGreenBackgroundSlider.setMinimum(0)
        self.RGBGreenBackgroundSlider.setMaximum(255)
        self.RGBGreenBackgroundSlider.setPageStep(16)
        self.RGBGreenBackgroundSlider.setValue(255)
        self.RGBGreenBackgroundSlider.setOrientation(Qt.Horizontal)
        self.RGBGreenBackgroundSlider.setTickPosition(QSlider.TicksBelow)
        self.RGBGreenBackgroundSlider.setTickInterval(16)

        self.BackgroundColorLayout.addWidget(self.RGBGreenBackgroundSlider, 1, 1, 1, 1)

        self.RGBBlueBackgroundLabel = QLabel(self.BackgroundColorBox)
        self.RGBBlueBackgroundLabel.setObjectName(u"RGBBlueBackgroundLabel")

        self.BackgroundColorLayout.addWidget(self.RGBBlueBackgroundLabel, 2, 0, 1, 1)

        self.RGBBlueBackgroundSlider = QSlider(self.BackgroundColorBox)
        self.RGBBlueBackgroundSlider.setObjectName(u"RGBBlueBackgroundSlider")
        self.RGBBlueBackgroundSlider.setEnabled(True)
        self.RGBBlueBackgroundSlider.setMinimum(0)
        self.RGBBlueBackgroundSlider.setMaximum(255)
        self.RGBBlueBackgroundSlider.setPageStep(16)
        self.RGBBlueBackgroundSlider.setValue(255)
        self.RGBBlueBackgroundSlider.setOrientation(Qt.Horizontal)
        self.RGBBlueBackgroundSlider.setTickPosition(QSlider.TicksBelow)
        self.RGBBlueBackgroundSlider.setTickInterval(16)

        self.BackgroundColorLayout.addWidget(self.RGBBlueBackgroundSlider, 2, 1, 1, 1)

        self.BWBackgroundCheck = QCheckBox(self.BackgroundColorBox)
        self.BWBackgroundCheck.setObjectName(u"BWBackgroundCheck")
        self.BWBackgroundCheck.setChecked(False)

        self.BackgroundColorLayout.addWidget(self.BWBackgroundCheck, 0, 0, 1, 1)


        self.verticalLayout.addWidget(self.BackgroundColorBox)

        self.FocusBox = QGroupBox(self.SceneOptMainBox)
        self.FocusBox.setObjectName(u"FocusBox")
        self.FocusBox.setEnabled(True)
        sizePolicy3.setHeightForWidth(self.FocusBox.sizePolicy().hasHeightForWidth())
        self.FocusBox.setSizePolicy(sizePolicy3)
        self.FocusBox.setMinimumSize(QSize(300, 0))
        self.FocusBox.setCheckable(True)
        self.FocusBox.setChecked(False)
        self.FocusLayout = QGridLayout(self.FocusBox)
        self.FocusLayout.setObjectName(u"FocusLayout")
        self.FocusLabel = QLabel(self.FocusBox)
        self.FocusLabel.setObjectName(u"FocusLabel")

        self.FocusLayout.addWidget(self.FocusLabel, 0, 0, 1, 1)

        self.FocusSlider = QSlider(self.FocusBox)
        self.FocusSlider.setObjectName(u"FocusSlider")
        self.FocusSlider.setEnabled(True)
        self.FocusSlider.setMinimum(1)
        self.FocusSlider.setMaximum(100)
        self.FocusSlider.setPageStep(10)
        self.FocusSlider.setValue(100)
        self.FocusSlider.setOrientation(Qt.Horizontal)
        self.FocusSlider.setTickPosition(QSlider.TicksBelow)
        self.FocusSlider.setTickInterval(10)

        self.FocusLayout.addWidget(self.FocusSlider, 0, 1, 1, 1)

        self.AutoFocusCheck = QCheckBox(self.FocusBox)
        self.AutoFocusCheck.setObjectName(u"AutoFocusCheck")
        self.AutoFocusCheck.setChecked(False)

        self.FocusLayout.addWidget(self.AutoFocusCheck, 1, 0, 1, 1)


        self.verticalLayout.addWidget(self.FocusBox)

        self.verticalSpacer_4 = QSpacerItem(20, 68, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout.addItem(self.verticalSpacer_4)


        self.gridLayout_4.addWidget(self.SceneOptMainBox, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.SceneOptPage, u"Scene Options")
        self.ColorOptPage = QWidget()
        self.ColorOptPage.setObjectName(u"ColorOptPage")
        self.ColorOptPage.setGeometry(QRect(0, 0, 354, 685))
        self.gridLayout_4c = QGridLayout(self.ColorOptPage)
        self.gridLayout_4c.setObjectName(u"gridLayout_4c")
        self.ColorOptMainBox = QGroupBox(self.ColorOptPage)
        self.ColorOptMainBox.setObjectName(u"ColorOptMainBox")
        self.ColormapOptLayout = QVBoxLayout(self.ColorOptMainBox)
        self.ColormapOptLayout.setObjectName(u"ColormapOptLayout")
        self.ColormapLabel = QLabel(self.ColorOptMainBox)
        self.ColormapLabel.setObjectName(u"ColormapLabel")

        self.ColormapOptLayout.addWidget(self.ColormapLabel)

        self.ColorMapBox = QComboBox(self.ColorOptMainBox)
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.addItem("")
        self.ColorMapBox.setObjectName(u"ColorMapBox")

        self.ColormapOptLayout.addWidget(self.ColorMapBox)

        self.ColormapScaleBox = QGroupBox(self.ColorOptMainBox)
        self.ColormapScaleBox.setObjectName(u"ColormapScaleBox")
        self.verticalLayout_2 = QVBoxLayout(self.ColormapScaleBox)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.LinearScale = QRadioButton(self.ColormapScaleBox)
        self.ColomapScaleBGroup = QButtonGroup(VizMainWindow)
        self.ColomapScaleBGroup.setObjectName(u"ColomapScaleBGroup")
        self.ColomapScaleBGroup.addButton(self.LinearScale)
        self.LinearScale.setObjectName(u"LinearScale")
        self.LinearScale.setChecked(True)

        self.verticalLayout_2.addWidget(self.LinearScale)

        self.LogScale = QRadioButton(self.ColormapScaleBox)
        self.ColomapScaleBGroup.addButton(self.LogScale)
        self.LogScale.setObjectName(u"LogScale")

        self.verticalLayout_2.addWidget(self.LogScale)


        self.ColormapOptLayout.addWidget(self.ColormapScaleBox)

        self.SingleColorBox = QGroupBox(self.ColorOptMainBox)
        self.SingleColorBox.setObjectName(u"SingleColorBox")
        self.SingleColorBox.setEnabled(True)
        self.SingleColorBox.setCheckable(True)
        self.SingleColorBox.setChecked(False)
        self.SingleColorLayout = QGridLayout(self.SingleColorBox)
        self.SingleColorLayout.setObjectName(u"SingleColorLayout")
        self.RGBRedColorLabel = QLabel(self.SingleColorBox)
        self.RGBRedColorLabel.setObjectName(u"RGBRedColorLabel")

        self.SingleColorLayout.addWidget(self.RGBRedColorLabel, 0, 0, 1, 1)

        self.RGBRedColorSlider = QSlider(self.SingleColorBox)
        self.RGBRedColorSlider.setObjectName(u"RGBRedColorSlider")
        self.RGBRedColorSlider.setEnabled(False)
        self.RGBRedColorSlider.setMinimum(0)
        self.RGBRedColorSlider.setMaximum(255)
        self.RGBRedColorSlider.setPageStep(16)
        self.RGBRedColorSlider.setValue(255)
        self.RGBRedColorSlider.setOrientation(Qt.Horizontal)
        self.RGBRedColorSlider.setTickPosition(QSlider.TicksBelow)
        self.RGBRedColorSlider.setTickInterval(16)

        self.SingleColorLayout.addWidget(self.RGBRedColorSlider, 0, 1, 1, 1)

        self.RGBGreenColorLabel = QLabel(self.SingleColorBox)
        self.RGBGreenColorLabel.setObjectName(u"RGBGreenColorLabel")

        self.SingleColorLayout.addWidget(self.RGBGreenColorLabel, 1, 0, 1, 1)

        self.RGBGreenColorSlider = QSlider(self.SingleColorBox)
        self.RGBGreenColorSlider.setObjectName(u"RGBGreenColorSlider")
        self.RGBGreenColorSlider.setEnabled(False)
        self.RGBGreenColorSlider.setMinimum(0)
        self.RGBGreenColorSlider.setMaximum(255)
        self.RGBGreenColorSlider.setPageStep(16)
        self.RGBGreenColorSlider.setValue(255)
        self.RGBGreenColorSlider.setOrientation(Qt.Horizontal)
        self.RGBGreenColorSlider.setTickPosition(QSlider.TicksBelow)
        self.RGBGreenColorSlider.setTickInterval(16)

        self.SingleColorLayout.addWidget(self.RGBGreenColorSlider, 1, 1, 1, 1)

        self.RGBBlueColorLabel = QLabel(self.SingleColorBox)
        self.RGBBlueColorLabel.setObjectName(u"RGBBlueColorLabel")

        self.SingleColorLayout.addWidget(self.RGBBlueColorLabel, 2, 0, 1, 1)

        self.RGBBlueColorSlider = QSlider(self.SingleColorBox)
        self.RGBBlueColorSlider.setObjectName(u"RGBBlueColorSlider")
        self.RGBBlueColorSlider.setEnabled(False)
        self.RGBBlueColorSlider.setMinimum(0)
        self.RGBBlueColorSlider.setMaximum(255)
        self.RGBBlueColorSlider.setPageStep(16)
        self.RGBBlueColorSlider.setValue(255)
        self.RGBBlueColorSlider.setOrientation(Qt.Horizontal)
        self.RGBBlueColorSlider.setTickPosition(QSlider.TicksBelow)
        self.RGBBlueColorSlider.setTickInterval(16)

        self.SingleColorLayout.addWidget(self.RGBBlueColorSlider, 2, 1, 1, 1)

        self.BWSinglecolorCheck = QCheckBox(self.SingleColorBox)
        self.BWSinglecolorCheck.setObjectName(u"BWSinglecolorCheck")
        self.BWSinglecolorCheck.setChecked(False)

        self.SingleColorLayout.addWidget(self.BWSinglecolorCheck, 0, 0, 1, 1)


        self.ColormapOptLayout.addWidget(self.SingleColorBox)

        self.verticalSpacer_41 = QSpacerItem(20, 68, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.ColormapOptLayout.addItem(self.verticalSpacer_41)


        self.gridLayout_4c.addWidget(self.ColorOptMainBox, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.ColorOptPage, u"Colormap Options")
        self.AdvViz_Page = QWidget()
        self.AdvViz_Page.setObjectName(u"AdvViz_Page")
        self.AdvViz_Page.setGeometry(QRect(0, 0, 322, 495))
        self.gridLayout_61 = QGridLayout(self.AdvViz_Page)
        self.gridLayout_61.setObjectName(u"gridLayout_61")
        self.NeighMainBox1 = QGroupBox(self.AdvViz_Page)
        self.NeighMainBox1.setObjectName(u"NeighMainBox1")
        self.NeighMainBox1.setEnabled(True)
        self.verticalLayout_101 = QVBoxLayout(self.NeighMainBox1)
        self.verticalLayout_101.setObjectName(u"verticalLayout_101")
        self.VizQualityBox = QGroupBox(self.NeighMainBox1)
        self.VizQualityBox.setObjectName(u"VizQualityBox")
        self.verticalLayout_25 = QVBoxLayout(self.VizQualityBox)
        self.verticalLayout_25.setObjectName(u"verticalLayout_25")
        self.SSAOCheck = QCheckBox(self.VizQualityBox)
        self.SSAOCheck.setObjectName(u"SSAOCheck")
        self.SSAOCheck.setChecked(False)

        self.verticalLayout_25.addWidget(self.SSAOCheck)

        self.FXAACheck = QCheckBox(self.VizQualityBox)
        self.FXAACheck.setObjectName(u"FXAACheck")
        self.FXAACheck.setChecked(False)

        self.verticalLayout_25.addWidget(self.FXAACheck)

        self.HDRICheck = QCheckBox(self.VizQualityBox)
        self.HDRICheck.setObjectName(u"HDRICheck")
        self.HDRICheck.setEnabled(False)
        self.HDRICheck.setChecked(False)

        self.verticalLayout_25.addWidget(self.HDRICheck)

        self.SkyBoxCheck = QCheckBox(self.VizQualityBox)
        self.SkyBoxCheck.setObjectName(u"SkyBoxCheck")
        self.SkyBoxCheck.setEnabled(False)
        self.SkyBoxCheck.setChecked(False)

        self.verticalLayout_25.addWidget(self.SkyBoxCheck)

        self.HDRIButtonSelect = QPushButton(self.VizQualityBox)
        self.HDRIButtonSelect.setObjectName(u"HDRIButtonSelect")

        self.verticalLayout_25.addWidget(self.HDRIButtonSelect)


        self.verticalLayout_101.addWidget(self.VizQualityBox)

        self.SpinShadeSelectBox = QGroupBox(self.NeighMainBox1)
        self.SpinShadeSelectBox.setObjectName(u"SpinShadeSelectBox")
        self.SpinShadeSelectBox.setEnabled(True)
        self.ShadeSelectBoxLayout = QGridLayout(self.SpinShadeSelectBox)
        self.ShadeSelectBoxLayout.setObjectName(u"ShadeSelectBoxLayout")
        self.FlatShadeButton = QRadioButton(self.SpinShadeSelectBox)
        self.SpinShadeButtonGroup = QButtonGroup(VizMainWindow)
        self.SpinShadeButtonGroup.setObjectName(u"SpinShadeButtonGroup")
        self.SpinShadeButtonGroup.addButton(self.FlatShadeButton)
        self.FlatShadeButton.setObjectName(u"FlatShadeButton")
        self.FlatShadeButton.setChecked(False)

        self.ShadeSelectBoxLayout.addWidget(self.FlatShadeButton, 0, 0, 1, 1)

        self.GouraudShadeButton = QRadioButton(self.SpinShadeSelectBox)
        self.SpinShadeButtonGroup.addButton(self.GouraudShadeButton)
        self.GouraudShadeButton.setObjectName(u"GouraudShadeButton")
        self.GouraudShadeButton.setChecked(True)

        self.ShadeSelectBoxLayout.addWidget(self.GouraudShadeButton, 0, 0, 1, 1)

        self.PhongShadeButton = QRadioButton(self.SpinShadeSelectBox)
        self.SpinShadeButtonGroup.addButton(self.PhongShadeButton)
        self.PhongShadeButton.setObjectName(u"PhongShadeButton")
        self.PhongShadeButton.setChecked(False)

        self.ShadeSelectBoxLayout.addWidget(self.PhongShadeButton, 0, 0, 1, 1)

        self.AmbientLabel = QLabel(self.SpinShadeSelectBox)
        self.AmbientLabel.setObjectName(u"AmbientLabel")
        self.AmbientLabel.setFrameShape(QFrame.NoFrame)
        self.AmbientLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.AmbientLabel, 0, 0, 1, 1)

        self.RenAmbientSlider = QSlider(self.SpinShadeSelectBox)
        self.RenAmbientSlider.setObjectName(u"RenAmbientSlider")
        self.RenAmbientSlider.setEnabled(True)
        self.RenAmbientSlider.setFont(font)
        self.RenAmbientSlider.setMinimum(0)
        self.RenAmbientSlider.setMaximum(100)
        self.RenAmbientSlider.setPageStep(10)
        self.RenAmbientSlider.setValue(60)
        self.RenAmbientSlider.setSliderPosition(60)
        self.RenAmbientSlider.setOrientation(Qt.Horizontal)
        self.RenAmbientSlider.setTickPosition(QSlider.TicksBelow)
        self.RenAmbientSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.RenAmbientSlider, 0, 0, 1, 1)

        self.DiffuseLabel = QLabel(self.SpinShadeSelectBox)
        self.DiffuseLabel.setObjectName(u"DiffuseLabel")
        self.DiffuseLabel.setFrameShape(QFrame.NoFrame)
        self.DiffuseLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.DiffuseLabel, 0, 0, 1, 1)

        self.RenDiffuseSlider = QSlider(self.SpinShadeSelectBox)
        self.RenDiffuseSlider.setObjectName(u"RenDiffuseSlider")
        self.RenDiffuseSlider.setEnabled(True)
        self.RenDiffuseSlider.setFont(font)
        self.RenDiffuseSlider.setMinimum(0)
        self.RenDiffuseSlider.setMaximum(100)
        self.RenDiffuseSlider.setPageStep(10)
        self.RenDiffuseSlider.setValue(40)
        self.RenDiffuseSlider.setSliderPosition(40)
        self.RenDiffuseSlider.setOrientation(Qt.Horizontal)
        self.RenDiffuseSlider.setTickPosition(QSlider.TicksBelow)
        self.RenDiffuseSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.RenDiffuseSlider, 0, 0, 1, 1)

        self.SpecularLabel = QLabel(self.SpinShadeSelectBox)
        self.SpecularLabel.setObjectName(u"SpecularLabel")
        self.SpecularLabel.setFrameShape(QFrame.NoFrame)
        self.SpecularLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.SpecularLabel, 0, 0, 1, 1)

        self.RenSpecularSlider = QSlider(self.SpinShadeSelectBox)
        self.RenSpecularSlider.setObjectName(u"RenSpecularSlider")
        self.RenSpecularSlider.setEnabled(True)
        self.RenSpecularSlider.setFont(font)
        self.RenSpecularSlider.setMinimum(0)
        self.RenSpecularSlider.setMaximum(100)
        self.RenSpecularSlider.setPageStep(10)
        self.RenSpecularSlider.setValue(40)
        self.RenSpecularSlider.setSliderPosition(40)
        self.RenSpecularSlider.setOrientation(Qt.Horizontal)
        self.RenSpecularSlider.setTickPosition(QSlider.TicksBelow)
        self.RenSpecularSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.RenSpecularSlider, 0, 0, 1, 1)

        self.SpecularPowerLabel = QLabel(self.SpinShadeSelectBox)
        self.SpecularPowerLabel.setObjectName(u"SpecularPowerLabel")
        self.SpecularPowerLabel.setFrameShape(QFrame.NoFrame)
        self.SpecularPowerLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.SpecularPowerLabel, 0, 0, 1, 1)

        self.RenSpecularPowerSlider = QSlider(self.SpinShadeSelectBox)
        self.RenSpecularPowerSlider.setObjectName(u"RenSpecularPowerSlider")
        self.RenSpecularPowerSlider.setEnabled(True)
        self.RenSpecularPowerSlider.setFont(font)
        self.RenSpecularPowerSlider.setMinimum(0)
        self.RenSpecularPowerSlider.setMaximum(100)
        self.RenSpecularPowerSlider.setPageStep(10)
        self.RenSpecularPowerSlider.setValue(80)
        self.RenSpecularPowerSlider.setSliderPosition(80)
        self.RenSpecularPowerSlider.setOrientation(Qt.Horizontal)
        self.RenSpecularPowerSlider.setTickPosition(QSlider.TicksBelow)
        self.RenSpecularPowerSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.RenSpecularPowerSlider, 0, 0, 1, 1)

        self.GlyphOpacitySliderLabel = QLabel(self.SpinShadeSelectBox)
        self.GlyphOpacitySliderLabel.setObjectName(u"GlyphOpacitySliderLabel")
        self.GlyphOpacitySliderLabel.setFrameShape(QFrame.NoFrame)
        self.GlyphOpacitySliderLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.GlyphOpacitySliderLabel, 0, 0, 1, 1)

        self.GlyphOpacitySlider = QSlider(self.SpinShadeSelectBox)
        self.GlyphOpacitySlider.setObjectName(u"GlyphOpacitySlider")
        self.GlyphOpacitySlider.setSliderPosition(100)
        self.GlyphOpacitySlider.setMinimum(0)
        self.GlyphOpacitySlider.setMaximum(100)
        self.GlyphOpacitySlider.setPageStep(10)
        self.GlyphOpacitySlider.setValue(100)
        self.GlyphOpacitySlider.setOrientation(Qt.Horizontal)
        self.GlyphOpacitySlider.setTickPosition(QSlider.TicksBelow)
        self.GlyphOpacitySlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.GlyphOpacitySlider, 0, 0, 1, 1)

        self.PBRShadeButton = QRadioButton(self.SpinShadeSelectBox)
        self.SpinShadeButtonGroup.addButton(self.PBRShadeButton)
        self.PBRShadeButton.setObjectName(u"PBRShadeButton")
        self.PBRShadeButton.setChecked(False)

        self.ShadeSelectBoxLayout.addWidget(self.PBRShadeButton, 0, 0, 1, 1)

        self.RoughnessLabel = QLabel(self.SpinShadeSelectBox)
        self.RoughnessLabel.setObjectName(u"RoughnessLabel")
        self.RoughnessLabel.setFrameShape(QFrame.NoFrame)
        self.RoughnessLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.RoughnessLabel, 0, 0, 1, 1)

        self.PBRRoughnessSlider = QSlider(self.SpinShadeSelectBox)
        self.PBRRoughnessSlider.setObjectName(u"PBRRoughnessSlider")
        self.PBRRoughnessSlider.setEnabled(True)
        self.PBRRoughnessSlider.setFont(font)
        self.PBRRoughnessSlider.setMinimum(0)
        self.PBRRoughnessSlider.setMaximum(100)
        self.PBRRoughnessSlider.setPageStep(10)
        self.PBRRoughnessSlider.setValue(50)
        self.PBRRoughnessSlider.setSliderPosition(50)
        self.PBRRoughnessSlider.setOrientation(Qt.Horizontal)
        self.PBRRoughnessSlider.setTickPosition(QSlider.TicksBelow)
        self.PBRRoughnessSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.PBRRoughnessSlider, 0, 0, 1, 1)

        self.MetallicLabel = QLabel(self.SpinShadeSelectBox)
        self.MetallicLabel.setObjectName(u"MetallicLabel")
        self.MetallicLabel.setFrameShape(QFrame.NoFrame)
        self.MetallicLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.MetallicLabel, 0, 0, 1, 1)

        self.PBRMetallicSlider = QSlider(self.SpinShadeSelectBox)
        self.PBRMetallicSlider.setObjectName(u"PBRMetallicSlider")
        self.PBRMetallicSlider.setEnabled(True)
        self.PBRMetallicSlider.setFont(font)
        self.PBRMetallicSlider.setMinimum(0)
        self.PBRMetallicSlider.setMaximum(100)
        self.PBRMetallicSlider.setPageStep(10)
        self.PBRMetallicSlider.setValue(50)
        self.PBRMetallicSlider.setSliderPosition(50)
        self.PBRMetallicSlider.setOrientation(Qt.Horizontal)
        self.PBRMetallicSlider.setTickPosition(QSlider.TicksBelow)
        self.PBRMetallicSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.PBRMetallicSlider, 0, 0, 1, 1)

        self.EmissionLabel = QLabel(self.SpinShadeSelectBox)
        self.EmissionLabel.setObjectName(u"EmissionLabel")
        self.EmissionLabel.setFrameShape(QFrame.NoFrame)
        self.EmissionLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.EmissionLabel, 0, 0, 1, 1)

        self.PBREmissionSlider = QSlider(self.SpinShadeSelectBox)
        self.PBREmissionSlider.setObjectName(u"PBREmissionSlider")
        self.PBREmissionSlider.setEnabled(True)
        self.PBREmissionSlider.setFont(font)
        self.PBREmissionSlider.setMinimum(0)
        self.PBREmissionSlider.setMaximum(100)
        self.PBREmissionSlider.setPageStep(10)
        self.PBREmissionSlider.setValue(50)
        self.PBREmissionSlider.setSliderPosition(50)
        self.PBREmissionSlider.setOrientation(Qt.Horizontal)
        self.PBREmissionSlider.setTickPosition(QSlider.TicksBelow)
        self.PBREmissionSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.PBREmissionSlider, 0, 0, 1, 1)

        self.OcclusionLabel = QLabel(self.SpinShadeSelectBox)
        self.OcclusionLabel.setObjectName(u"OcclusionLabel")
        self.OcclusionLabel.setFrameShape(QFrame.NoFrame)
        self.OcclusionLabel.setAlignment(Qt.AlignCenter)

        self.ShadeSelectBoxLayout.addWidget(self.OcclusionLabel, 0, 0, 1, 1)

        self.PBROcclusionSlider = QSlider(self.SpinShadeSelectBox)
        self.PBROcclusionSlider.setObjectName(u"PBROcclusionSlider")
        self.PBROcclusionSlider.setEnabled(True)
        self.PBROcclusionSlider.setFont(font)
        self.PBROcclusionSlider.setMinimum(0)
        self.PBROcclusionSlider.setMaximum(100)
        self.PBROcclusionSlider.setPageStep(10)
        self.PBROcclusionSlider.setValue(50)
        self.PBROcclusionSlider.setSliderPosition(50)
        self.PBROcclusionSlider.setOrientation(Qt.Horizontal)
        self.PBROcclusionSlider.setTickPosition(QSlider.TicksBelow)
        self.PBROcclusionSlider.setTickInterval(10)

        self.ShadeSelectBoxLayout.addWidget(self.PBROcclusionSlider, 0, 0, 1, 1)


        self.verticalLayout_101.addWidget(self.SpinShadeSelectBox)


        self.gridLayout_61.addWidget(self.NeighMainBox1, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.AdvViz_Page, u"Shading Options")
        self.Texure_Page = QWidget()
        self.Texure_Page.setObjectName(u"Texure_Page")
        self.Texure_Page.setGeometry(QRect(0, 0, 322, 495))
        self.gridLayout_16 = QGridLayout(self.Texure_Page)
        self.gridLayout_16.setObjectName(u"gridLayout_16")
        self.TextureMainBox = QGroupBox(self.Texure_Page)
        self.TextureMainBox.setObjectName(u"TextureMainBox")
        self.TextureMainBox.setEnabled(True)
        self.Texture_Layout = QVBoxLayout(self.TextureMainBox)
        self.Texture_Layout.setObjectName(u"Texture_Layout")
        self.TextureCheck = QCheckBox(self.TextureMainBox)
        self.TextureCheck.setObjectName(u"TextureCheck")
        self.TextureCheck.setChecked(False)
        self.TextureCheck.setEnabled(False)

        self.Texture_Layout.addWidget(self.TextureCheck)

        self.ORMTextureCheck = QCheckBox(self.TextureMainBox)
        self.ORMTextureCheck.setObjectName(u"ORMTextureCheck")
        self.ORMTextureCheck.setChecked(False)
        self.ORMTextureCheck.setEnabled(False)

        self.Texture_Layout.addWidget(self.ORMTextureCheck)

        self.NTextureCheck = QCheckBox(self.TextureMainBox)
        self.NTextureCheck.setObjectName(u"NTextureCheck")
        self.NTextureCheck.setChecked(False)
        self.NTextureCheck.setEnabled(False)

        self.Texture_Layout.addWidget(self.NTextureCheck)

        self.ETextureCheck = QCheckBox(self.TextureMainBox)
        self.ETextureCheck.setObjectName(u"ETextureCheck")
        self.ETextureCheck.setChecked(False)
        self.ETextureCheck.setEnabled(False)

        self.Texture_Layout.addWidget(self.ETextureCheck)

        self.ATextureCheck = QCheckBox(self.TextureMainBox)
        self.ATextureCheck.setObjectName(u"ATextureCheck")
        self.ATextureCheck.setChecked(False)
        self.ATextureCheck.setEnabled(False)

        self.Texture_Layout.addWidget(self.ATextureCheck)

        self.TextureSelect = QPushButton(self.TextureMainBox)
        self.TextureSelect.setObjectName(u"TextureSelect")

        self.Texture_Layout.addWidget(self.TextureSelect)

        self.ORMTextureSelect = QPushButton(self.TextureMainBox)
        self.ORMTextureSelect.setObjectName(u"ORMTextureSelect")

        self.Texture_Layout.addWidget(self.ORMTextureSelect)

        self.NTextureSelect = QPushButton(self.TextureMainBox)
        self.NTextureSelect.setObjectName(u"NTextureSelect")

        self.Texture_Layout.addWidget(self.NTextureSelect)

        self.ETextureSelect = QPushButton(self.TextureMainBox)
        self.ETextureSelect.setObjectName(u"ETextureSelect")

        self.Texture_Layout.addWidget(self.ETextureSelect)

        self.ATextureSelect = QPushButton(self.TextureMainBox)
        self.ATextureSelect.setObjectName(u"ATextureSelect")

        self.Texture_Layout.addWidget(self.ATextureSelect)


        self.gridLayout_16.addWidget(self.TextureMainBox, 0, 0, 1, 1)

        self.verticalSpacer_21 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_16.addItem(self.verticalSpacer_21, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.Texure_Page, u"Texturing Options")
        self.Camera_Page = QWidget()
        self.Camera_Page.setObjectName(u"Camera_Page")
        self.Camera_Page.setGeometry(QRect(0, 0, 322, 659))
        self.gridLayout_8 = QGridLayout(self.Camera_Page)
        self.gridLayout_8.setObjectName(u"gridLayout_8")
        self.CamMainBox = QGroupBox(self.Camera_Page)
        self.CamMainBox.setObjectName(u"CamMainBox")
        self.CamOptMainLayout = QVBoxLayout(self.CamMainBox)
        self.CamOptMainLayout.setObjectName(u"CamOptMainLayout")
        self.CamAngleBox = QGroupBox(self.CamMainBox)
        self.CamAngleBox.setObjectName(u"CamAngleBox")
        self.CamAngleBox.setEnabled(True)
        self.CamAngleBoxLayout = QGridLayout(self.CamAngleBox)
        self.CamAngleBoxLayout.setObjectName(u"CamAngleBoxLayout")
        self.CamElevationLineEdit = QLineEdit(self.CamAngleBox)
        self.CamElevationLineEdit.setObjectName(u"CamElevationLineEdit")

        self.CamAngleBoxLayout.addWidget(self.CamElevationLineEdit, 1, 0, 1, 1)

        self.CamRollLineEdit = QLineEdit(self.CamAngleBox)
        self.CamRollLineEdit.setObjectName(u"CamRollLineEdit")

        self.CamAngleBoxLayout.addWidget(self.CamRollLineEdit, 4, 0, 1, 1)

        self.CamRollLabel = QLabel(self.CamAngleBox)
        self.CamRollLabel.setObjectName(u"CamRollLabel")
        self.CamRollLabel.setAlignment(Qt.AlignCenter)

        self.CamAngleBoxLayout.addWidget(self.CamRollLabel, 3, 0, 1, 1)

        self.CamPitchLabel = QLabel(self.CamAngleBox)
        self.CamPitchLabel.setObjectName(u"CamPitchLabel")
        self.CamPitchLabel.setAlignment(Qt.AlignCenter)

        self.CamAngleBoxLayout.addWidget(self.CamPitchLabel, 3, 1, 1, 1)

        self.CamPitchLineEdit = QLineEdit(self.CamAngleBox)
        self.CamPitchLineEdit.setObjectName(u"CamPitchLineEdit")

        self.CamAngleBoxLayout.addWidget(self.CamPitchLineEdit, 4, 1, 1, 1)

        self.CamYawLabel = QLabel(self.CamAngleBox)
        self.CamYawLabel.setObjectName(u"CamYawLabel")
        self.CamYawLabel.setAlignment(Qt.AlignCenter)

        self.CamAngleBoxLayout.addWidget(self.CamYawLabel, 3, 2, 1, 1)

        self.CamYawLineEdit = QLineEdit(self.CamAngleBox)
        self.CamYawLineEdit.setObjectName(u"CamYawLineEdit")

        self.CamAngleBoxLayout.addWidget(self.CamYawLineEdit, 4, 2, 1, 1)

        self.CamAzimuthLineEdit = QLineEdit(self.CamAngleBox)
        self.CamAzimuthLineEdit.setObjectName(u"CamAzimuthLineEdit")

        self.CamAngleBoxLayout.addWidget(self.CamAzimuthLineEdit, 1, 2, 1, 1)

        self.CamAzimuthLabel = QLabel(self.CamAngleBox)
        self.CamAzimuthLabel.setObjectName(u"CamAzimuthLabel")
        self.CamAzimuthLabel.setAlignment(Qt.AlignCenter)

        self.CamAngleBoxLayout.addWidget(self.CamAzimuthLabel, 0, 2, 1, 1)

        self.CamElevationLabel = QLabel(self.CamAngleBox)
        self.CamElevationLabel.setObjectName(u"CamElevationLabel")
        self.CamElevationLabel.setAlignment(Qt.AlignCenter)

        self.CamAngleBoxLayout.addWidget(self.CamElevationLabel, 0, 0, 1, 1)


        self.CamOptMainLayout.addWidget(self.CamAngleBox)

        self.CamPosBox = QGroupBox(self.CamMainBox)
        self.CamPosBox.setObjectName(u"CamPosBox")
        self.CamPosBox.setEnabled(True)
        self.CamBoxLayout = QVBoxLayout(self.CamPosBox)
        self.CamBoxLayout.setObjectName(u"CamBoxLayout")
        self.FocalPointLabel = QLabel(self.CamPosBox)
        self.FocalPointLabel.setObjectName(u"FocalPointLabel")

        self.CamBoxLayout.addWidget(self.FocalPointLabel)

        self.FocalPosLayout = QGridLayout()
        self.FocalPosLayout.setObjectName(u"FocalPosLayout")
        self.FocalPosXLabel = QLabel(self.CamPosBox)
        self.FocalPosXLabel.setObjectName(u"FocalPosXLabel")
        self.FocalPosXLabel.setAlignment(Qt.AlignCenter)

        self.FocalPosLayout.addWidget(self.FocalPosXLabel, 0, 0, 1, 1)

        self.FocalPosYLabel = QLabel(self.CamPosBox)
        self.FocalPosYLabel.setObjectName(u"FocalPosYLabel")
        self.FocalPosYLabel.setAlignment(Qt.AlignCenter)

        self.FocalPosLayout.addWidget(self.FocalPosYLabel, 0, 1, 1, 1)

        self.FocalPosZLabel = QLabel(self.CamPosBox)
        self.FocalPosZLabel.setObjectName(u"FocalPosZLabel")
        self.FocalPosZLabel.setAlignment(Qt.AlignCenter)

        self.FocalPosLayout.addWidget(self.FocalPosZLabel, 0, 2, 1, 1)

        self.FocalPosX = QLineEdit(self.CamPosBox)
        self.FocalPosX.setObjectName(u"FocalPosX")

        self.FocalPosLayout.addWidget(self.FocalPosX, 1, 0, 1, 1)

        self.FocalPosY = QLineEdit(self.CamPosBox)
        self.FocalPosY.setObjectName(u"FocalPosY")

        self.FocalPosLayout.addWidget(self.FocalPosY, 1, 1, 1, 1)

        self.FocalPosZ = QLineEdit(self.CamPosBox)
        self.FocalPosZ.setObjectName(u"FocalPosZ")

        self.FocalPosLayout.addWidget(self.FocalPosZ, 1, 2, 1, 1)


        self.CamBoxLayout.addLayout(self.FocalPosLayout)

        self.CamPosLabel = QLabel(self.CamPosBox)
        self.CamPosLabel.setObjectName(u"CamPosLabel")

        self.CamBoxLayout.addWidget(self.CamPosLabel)

        self.CamPosLayout = QGridLayout()
        self.CamPosLayout.setObjectName(u"CamPosLayout")
        self.CamPosXLabel = QLabel(self.CamPosBox)
        self.CamPosXLabel.setObjectName(u"CamPosXLabel")
        self.CamPosXLabel.setAlignment(Qt.AlignCenter)

        self.CamPosLayout.addWidget(self.CamPosXLabel, 0, 0, 1, 1)

        self.CamPosYLabel = QLabel(self.CamPosBox)
        self.CamPosYLabel.setObjectName(u"CamPosYLabel")
        self.CamPosYLabel.setAlignment(Qt.AlignCenter)

        self.CamPosLayout.addWidget(self.CamPosYLabel, 0, 1, 1, 1)

        self.CamPosZLabel = QLabel(self.CamPosBox)
        self.CamPosZLabel.setObjectName(u"CamPosZLabel")
        self.CamPosZLabel.setAlignment(Qt.AlignCenter)

        self.CamPosLayout.addWidget(self.CamPosZLabel, 0, 2, 1, 1)

        self.CamPosX = QLineEdit(self.CamPosBox)
        self.CamPosX.setObjectName(u"CamPosX")
        self.CamPosX.setAlignment(Qt.AlignCenter)

        self.CamPosLayout.addWidget(self.CamPosX, 1, 0, 1, 1)

        self.CamPosY = QLineEdit(self.CamPosBox)
        self.CamPosY.setObjectName(u"CamPosY")
        self.CamPosY.setAlignment(Qt.AlignCenter)

        self.CamPosLayout.addWidget(self.CamPosY, 1, 1, 1, 1)

        self.CamPosZ = QLineEdit(self.CamPosBox)
        self.CamPosZ.setObjectName(u"CamPosZ")

        self.CamPosLayout.addWidget(self.CamPosZ, 1, 2, 1, 1)


        self.CamBoxLayout.addLayout(self.CamPosLayout)


        self.CamOptMainLayout.addWidget(self.CamPosBox)

        self.CamViewBox = QGroupBox(self.CamMainBox)
        self.CamViewBox.setObjectName(u"CamViewBox")
        self.CamViewBox.setEnabled(True)
        self.CamViewBoxLayout = QHBoxLayout(self.CamViewBox)
        self.CamViewBoxLayout.setObjectName(u"CamViewBoxLayout")
        self.SetXView = QPushButton(self.CamViewBox)
        self.SetXView.setObjectName(u"SetXView")

        self.CamViewBoxLayout.addWidget(self.SetXView)

        self.SetYView = QPushButton(self.CamViewBox)
        self.SetYView.setObjectName(u"SetYView")

        self.CamViewBoxLayout.addWidget(self.SetYView)

        self.SetZView = QPushButton(self.CamViewBox)
        self.SetZView.setObjectName(u"SetZView")

        self.CamViewBoxLayout.addWidget(self.SetZView)


        self.CamOptMainLayout.addWidget(self.CamViewBox)

        self.ParallelProjectBox = QGroupBox(self.CamMainBox)
        self.ParallelProjectBox.setObjectName(u"ParallelProjectBox")
        self.ParallelProjectBox.setEnabled(True)
        self.ParallelProjectBox.setCheckable(True)
        self.ParallelProjectBox.setChecked(False)
        self.ParallelProjBoxLayout = QVBoxLayout(self.ParallelProjectBox)
        self.ParallelProjBoxLayout.setObjectName(u"ParallelProjBoxLayout")
        self.ParallelScaleSlider = QSlider(self.ParallelProjectBox)
        self.ParallelScaleSlider.setObjectName(u"ParallelScaleSlider")
        self.ParallelScaleSlider.setMaximum(100)
        self.ParallelScaleSlider.setSingleStep(1)
        self.ParallelScaleSlider.setTickInterval(10)
        self.ParallelScaleSlider.setValue(10)
        self.ParallelScaleSlider.setOrientation(Qt.Horizontal)
        self.ParallelScaleSlider.setTickPosition(QSlider.TicksBelow)
        self.ParallelScaleSlider.setTickInterval(5)

        self.ParallelProjBoxLayout.addWidget(self.ParallelScaleSlider)

        self.horizontalLayout = QHBoxLayout()
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.ParallelScaleLabel = QLabel(self.ParallelProjectBox)
        self.ParallelScaleLabel.setObjectName(u"ParallelScaleLabel")

        self.horizontalLayout.addWidget(self.ParallelScaleLabel)

        self.ParallelScaleLineEdit = QLineEdit(self.ParallelProjectBox)
        self.ParallelScaleLineEdit.setObjectName(u"ParallelScaleLineEdit")

        self.horizontalLayout.addWidget(self.ParallelScaleLineEdit)


        self.ParallelProjBoxLayout.addLayout(self.horizontalLayout)


        self.CamOptMainLayout.addWidget(self.ParallelProjectBox)

        self.SetCamButton = QPushButton(self.CamMainBox)
        self.SetCamButton.setObjectName(u"SetCamButton")
        self.SetCamButton.setEnabled(True)

        self.CamOptMainLayout.addWidget(self.SetCamButton)

        self.CamResetButton = QPushButton(self.CamMainBox)
        self.CamResetButton.setObjectName(u"CamResetButton")
        self.CamResetButton.setEnabled(True)

        self.CamOptMainLayout.addWidget(self.CamResetButton)

        self.CamSaveButton = QPushButton(self.CamMainBox)
        self.CamSaveButton.setObjectName(u"CamSaveButton")
        self.CamSaveButton.setEnabled(True)

        self.CamOptMainLayout.addWidget(self.CamSaveButton)

        self.CamLoadButton = QPushButton(self.CamMainBox)
        self.CamLoadButton.setObjectName(u"CamLoadButton")
        self.CamLoadButton.setEnabled(True)

        self.CamOptMainLayout.addWidget(self.CamLoadButton)

        self.CamOptVerticalLayout = QSpacerItem(20, 22, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.CamOptMainLayout.addItem(self.CamOptVerticalLayout)


        self.gridLayout_8.addWidget(self.CamMainBox, 0, 0, 1, 1)

        self.VizToolBox.addItem(self.Camera_Page, u"Camera Options")

        self.verticalLayout_11.addWidget(self.VizToolBox)

        self.OptionDock.setWidget(self.dockWidgetContents)
        VizMainWindow.addDockWidget(Qt.DockWidgetArea.RightDockWidgetArea, self.OptionDock)
        self.MatPlotOptions = QDockWidget(VizMainWindow)
        self.MatPlotOptions.setObjectName(u"MatPlotOptions")
        self.MatPlotOptions.setEnabled(True)
        self.MatPlotOptions.setMinimumSize(QSize(350, 604))
        self.MatPlotOptions.setMaximumSize(QSize(350, 800))
        self.MatPlotOptions.setAllowedAreas(Qt.AllDockWidgetAreas)
        self.MatplotOptLayout = QWidget()
        self.MatplotOptLayout.setObjectName(u"MatplotOptLayout")
        self.verticalLayout_4 = QVBoxLayout(self.MatplotOptLayout)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.MatToolBox = QToolBox(self.MatplotOptLayout)
        self.MatToolBox.setObjectName(u"MatToolBox")
        self.MatToolBox.setEnabled(True)
        sizePolicy2.setHeightForWidth(self.MatToolBox.sizePolicy().hasHeightForWidth())
        self.MatToolBox.setSizePolicy(sizePolicy2)
        self.MatToolBox.setMinimumSize(QSize(300, 500))
        self.MatToolBox.setFrameShape(QFrame.Box)
        self.MatToolBox.setFrameShadow(QFrame.Sunken)
        self.SqwOptions = QWidget()
        self.SqwOptions.setObjectName(u"SqwOptions")
        self.SqwOptions.setGeometry(QRect(0, 0, 322, 498))
        self.verticalLayout_8 = QVBoxLayout(self.SqwOptions)
        self.verticalLayout_8.setObjectName(u"verticalLayout_8")
        self.MainSqwBox = QGroupBox(self.SqwOptions)
        self.MainSqwBox.setObjectName(u"MainSqwBox")
        self.verticalLayout_5 = QVBoxLayout(self.MainSqwBox)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.SqwDisplayOpts = QGroupBox(self.MainSqwBox)
        self.SqwDisplayOpts.setObjectName(u"SqwDisplayOpts")
        self.SqwDisplayOpts.setCheckable(True)
        self.verticalLayout_6 = QVBoxLayout(self.SqwDisplayOpts)
        self.verticalLayout_6.setObjectName(u"verticalLayout_6")
        self.SqwDispCheckBox = QCheckBox(self.SqwDisplayOpts)
        self.SqwDispCheckBox.setObjectName(u"SqwDispCheckBox")
        self.SqwDispCheckBox.setChecked(True)

        self.verticalLayout_6.addWidget(self.SqwDispCheckBox)

        self.AMSDispCheckBox = QCheckBox(self.SqwDisplayOpts)
        self.AMSDispCheckBox.setObjectName(u"AMSDispCheckBox")
        self.AMSDispCheckBox.setChecked(True)

        self.verticalLayout_6.addWidget(self.AMSDispCheckBox)


        self.verticalLayout_5.addWidget(self.SqwDisplayOpts)

        self.SqwColorMapSelect = QGroupBox(self.MainSqwBox)
        self.SqwColorMapSelect.setObjectName(u"SqwColorMapSelect")
        self.verticalLayout_7 = QVBoxLayout(self.SqwColorMapSelect)
        self.verticalLayout_7.setObjectName(u"verticalLayout_7")
        self.SqwCoolwarm = QRadioButton(self.SqwColorMapSelect)
        self.SqwCoolwarm.setObjectName(u"SqwCoolwarm")
        self.SqwCoolwarm.setChecked(True)

        self.verticalLayout_7.addWidget(self.SqwCoolwarm)

        self.SqwSpectral = QRadioButton(self.SqwColorMapSelect)
        self.SqwSpectral.setObjectName(u"SqwSpectral")

        self.verticalLayout_7.addWidget(self.SqwSpectral)

        self.SqwBlackbody = QRadioButton(self.SqwColorMapSelect)
        self.SqwBlackbody.setObjectName(u"SqwBlackbody")

        self.verticalLayout_7.addWidget(self.SqwBlackbody)


        self.verticalLayout_5.addWidget(self.SqwColorMapSelect)

        self.SqwProjBox = QGroupBox(self.MainSqwBox)
        self.SqwProjBox.setObjectName(u"SqwProjBox")
        self.verticalLayout_12 = QVBoxLayout(self.SqwProjBox)
        self.verticalLayout_12.setObjectName(u"verticalLayout_12")
        self.Sqw_x = QRadioButton(self.SqwProjBox)
        self.Sqw_x.setObjectName(u"Sqw_x")
        self.Sqw_x.setChecked(True)

        self.verticalLayout_12.addWidget(self.Sqw_x)

        self.Sqw_y = QRadioButton(self.SqwProjBox)
        self.Sqw_y.setObjectName(u"Sqw_y")

        self.verticalLayout_12.addWidget(self.Sqw_y)

        self.Sqw_z = QRadioButton(self.SqwProjBox)
        self.Sqw_z.setObjectName(u"Sqw_z")

        self.verticalLayout_12.addWidget(self.Sqw_z)

        self.Sqw_2 = QRadioButton(self.SqwProjBox)
        self.Sqw_2.setObjectName(u"Sqw_2")

        self.verticalLayout_12.addWidget(self.Sqw_2)


        self.verticalLayout_5.addWidget(self.SqwProjBox)

        self.CorrOptsBox = QGroupBox(self.MainSqwBox)
        self.CorrOptsBox.setObjectName(u"CorrOptsBox")
        self.gridLayout_28 = QGridLayout(self.CorrOptsBox)
        self.gridLayout_28.setObjectName(u"gridLayout_28")
        self.InpSqwSCStepLabel = QLabel(self.CorrOptsBox)
        self.InpSqwSCStepLabel.setObjectName(u"InpSqwSCStepLabel")

        self.gridLayout_28.addWidget(self.InpSqwSCStepLabel, 0, 0, 1, 1)

        self.InpSqwSCStep = QLineEdit(self.CorrOptsBox)
        self.InpSqwSCStep.setObjectName(u"InpSqwSCStep")

        self.gridLayout_28.addWidget(self.InpSqwSCStep, 0, 1, 1, 1)

        self.InpSqwSCNStep = QLineEdit(self.CorrOptsBox)
        self.InpSqwSCNStep.setObjectName(u"InpSqwSCNStep")

        self.gridLayout_28.addWidget(self.InpSqwSCNStep, 1, 1, 1, 1)

        self.InpSqwSCNStepLabel = QLabel(self.CorrOptsBox)
        self.InpSqwSCNStepLabel.setObjectName(u"InpSqwSCNStepLabel")

        self.gridLayout_28.addWidget(self.InpSqwSCNStepLabel, 1, 0, 1, 1)


        self.verticalLayout_5.addWidget(self.CorrOptsBox)

        self.AMSDisplayOpts = QGroupBox(self.MainSqwBox)
        self.AMSDisplayOpts.setObjectName(u"AMSDisplayOpts")
        self.AMSDisplayOpts.setEnabled(False)

        self.verticalLayout_5.addWidget(self.AMSDisplayOpts)

        self.ABCorrOptsBox = QGroupBox(self.MainSqwBox)
        self.ABCorrOptsBox.setObjectName(u"ABCorrOptsBox")
        self.ABgridLayout_28 = QGridLayout(self.ABCorrOptsBox)
        self.ABgridLayout_28.setObjectName(u"ABgridLayout_28")
        self.ABCorrWidth = QSlider(self.ABCorrOptsBox)
        self.ABCorrWidth.setObjectName(u"ABCorrWidth")
        self.ABCorrWidth.setEnabled(True)
        self.ABCorrWidth.setFont(font)
        self.ABCorrWidth.setMinimum(0)
        self.ABCorrWidth.setMaximum(20)
        self.ABCorrWidth.setPageStep(1)
        self.ABCorrWidth.setValue(10)
        self.ABCorrWidth.setSliderPosition(0)
        self.ABCorrWidth.setOrientation(Qt.Horizontal)
        self.ABCorrWidth.setTickPosition(QSlider.TicksBelow)
        self.ABCorrWidth.setTickInterval(2)

        self.ABgridLayout_28.addWidget(self.ABCorrWidth, 0, 0, 1, 1)

        self.ABCorrWidthTX = QLineEdit(self.ABCorrOptsBox)
        self.ABCorrWidthTX.setObjectName(u"ABCorrWidthTX")
        self.ABCorrWidthTX.setReadOnly(False)

        self.ABgridLayout_28.addWidget(self.ABCorrWidthTX, 0, 1, 1, 1)

        self.ABAMSGrid = QCheckBox(self.ABCorrOptsBox)
        self.ABAMSGrid.setObjectName(u"ABAMSGrid")
        self.ABAMSGrid.setChecked(False)

        self.ABgridLayout_28.addWidget(self.ABAMSGrid, 1, 0, 1, 1)


        self.verticalLayout_5.addWidget(self.ABCorrOptsBox)

        self.verticalSpacer_12 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_5.addItem(self.verticalSpacer_12)


        self.verticalLayout_8.addWidget(self.MainSqwBox)

        self.MatToolBox.addItem(self.SqwOptions, u"Magnon Spectra Options")
        self.NTrajOpts = QWidget()
        self.NTrajOpts.setObjectName(u"NTrajOpts")
        self.NTrajOpts.setGeometry(QRect(0, 0, 322, 384))
        self.MatToolBox.addItem(self.NTrajOpts, u"Single Trajectory Options")
        self.AveOpts = QWidget()
        self.AveOpts.setObjectName(u"AveOpts")
        self.AveOpts.setGeometry(QRect(0, 0, 322, 384))
        self.AveOptLayout = QVBoxLayout(self.AveOpts)
        self.AveOptLayout.setObjectName(u"AveOptLayout")
        self.AvePlotMainBox = QGroupBox(self.AveOpts)
        self.AvePlotMainBox.setObjectName(u"AvePlotMainBox")
        self.verticalLayout_24 = QVBoxLayout(self.AvePlotMainBox)
        self.verticalLayout_24.setObjectName(u"verticalLayout_24")
        self.PlotMagDirOpt = QGroupBox(self.AvePlotMainBox)
        self.PlotMagDirOpt.setObjectName(u"PlotMagDirOpt")
        self.PlotMagDirOpt.setEnabled(True)
        self.MagSelectLayout = QVBoxLayout(self.PlotMagDirOpt)
        self.MagSelectLayout.setObjectName(u"MagSelectLayout")
        self.Plot_M_x = QCheckBox(self.PlotMagDirOpt)
        self.Plot_M_x.setObjectName(u"Plot_M_x")
        self.Plot_M_x.setChecked(False)

        self.MagSelectLayout.addWidget(self.Plot_M_x)

        self.Plot_M_y = QCheckBox(self.PlotMagDirOpt)
        self.Plot_M_y.setObjectName(u"Plot_M_y")
        self.Plot_M_y.setChecked(False)

        self.MagSelectLayout.addWidget(self.Plot_M_y)

        self.Plot_M_z = QCheckBox(self.PlotMagDirOpt)
        self.Plot_M_z.setObjectName(u"Plot_M_z")
        self.Plot_M_z.setChecked(False)

        self.MagSelectLayout.addWidget(self.Plot_M_z)

        self.Plot_M_tot = QCheckBox(self.PlotMagDirOpt)
        self.Plot_M_tot.setObjectName(u"Plot_M_tot")
        self.Plot_M_tot.setChecked(True)

        self.MagSelectLayout.addWidget(self.Plot_M_tot)


        self.verticalLayout_24.addWidget(self.PlotMagDirOpt)

        self.verticalSpacer_14 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_24.addItem(self.verticalSpacer_14)


        self.AveOptLayout.addWidget(self.AvePlotMainBox)

        self.MatToolBox.addItem(self.AveOpts, u"Averages Options")
        self.EneOpts = QWidget()
        self.EneOpts.setObjectName(u"EneOpts")
        self.EneOpts.setGeometry(QRect(0, 0, 322, 384))
        self.verticalLayout_28 = QVBoxLayout(self.EneOpts)
        self.verticalLayout_28.setObjectName(u"verticalLayout_28")
        self.EnePlotMainBox = QGroupBox(self.EneOpts)
        self.EnePlotMainBox.setObjectName(u"EnePlotMainBox")
        self.verticalLayout_27 = QVBoxLayout(self.EnePlotMainBox)
        self.verticalLayout_27.setObjectName(u"verticalLayout_27")
        self.EneCompOpt = QGroupBox(self.EnePlotMainBox)
        self.EneCompOpt.setObjectName(u"EneCompOpt")
        self.verticalLayout_26 = QVBoxLayout(self.EneCompOpt)
        self.verticalLayout_26.setObjectName(u"verticalLayout_26")
        self.EneTotCheck = QCheckBox(self.EneCompOpt)
        self.EneTotCheck.setObjectName(u"EneTotCheck")
        self.EneTotCheck.setChecked(True)

        self.verticalLayout_26.addWidget(self.EneTotCheck)

        self.EneExcCheck = QCheckBox(self.EneCompOpt)
        self.EneExcCheck.setObjectName(u"EneExcCheck")
        self.EneExcCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneExcCheck)

        self.EneAniCheck = QCheckBox(self.EneCompOpt)
        self.EneAniCheck.setObjectName(u"EneAniCheck")
        self.EneAniCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneAniCheck)

        self.EneDMCheck = QCheckBox(self.EneCompOpt)
        self.EneDMCheck.setObjectName(u"EneDMCheck")
        self.EneDMCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneDMCheck)

        self.EnePdCheck = QCheckBox(self.EneCompOpt)
        self.EnePdCheck.setObjectName(u"EnePdCheck")
        self.EnePdCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EnePdCheck)

        self.EneBqDMCheck = QCheckBox(self.EneCompOpt)
        self.EneBqDMCheck.setObjectName(u"EneBqDMCheck")
        self.EneBqDMCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneBqDMCheck)

        self.EneBqCheck = QCheckBox(self.EneCompOpt)
        self.EneBqCheck.setObjectName(u"EneBqCheck")
        self.EneBqCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneBqCheck)

        self.EneDipCheck = QCheckBox(self.EneCompOpt)
        self.EneDipCheck.setObjectName(u"EneDipCheck")
        self.EneDipCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneDipCheck)

        self.EneExtCheck = QCheckBox(self.EneCompOpt)
        self.EneExtCheck.setObjectName(u"EneExtCheck")
        self.EneExtCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneExtCheck)

        self.EneLSFCheck = QCheckBox(self.EneCompOpt)
        self.EneLSFCheck.setObjectName(u"EneLSFCheck")
        self.EneLSFCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneLSFCheck)

        self.EneChirCheck = QCheckBox(self.EneCompOpt)
        self.EneChirCheck.setObjectName(u"EneChirCheck")
        self.EneChirCheck.setChecked(False)

        self.verticalLayout_26.addWidget(self.EneChirCheck)


        self.verticalLayout_27.addWidget(self.EneCompOpt)

        self.verticalSpacer_15 = QSpacerItem(20, 52, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_27.addItem(self.verticalSpacer_15)


        self.verticalLayout_28.addWidget(self.EnePlotMainBox)

        self.MatToolBox.addItem(self.EneOpts, u"Energy options")
        self.MatGenOpts = QWidget()
        self.MatGenOpts.setObjectName(u"MatGenOpts")
        self.MatGenOpts.setGeometry(QRect(0, 0, 322, 384))
        self.verticalLayout_23 = QVBoxLayout(self.MatGenOpts)
        self.verticalLayout_23.setObjectName(u"verticalLayout_23")
        self.GenOptMainBox = QGroupBox(self.MatGenOpts)
        self.GenOptMainBox.setObjectName(u"GenOptMainBox")
        self.verticalLayout_22 = QVBoxLayout(self.GenOptMainBox)
        self.verticalLayout_22.setObjectName(u"verticalLayout_22")
        self.ABLineLabel = QLabel(self.GenOptMainBox)
        self.ABLineLabel.setObjectName(u"ABLineLabel")
        self.ABLineLabel.setFrameShape(QFrame.NoFrame)
        self.ABLineLabel.setAlignment(Qt.AlignCenter)

        self.verticalLayout_22.addWidget(self.ABLineLabel)

        self.ABLineWidth = QSlider(self.GenOptMainBox)
        self.ABLineWidth.setObjectName(u"ABLineWidth")
        self.ABLineWidth.setEnabled(True)
        self.ABLineWidth.setFont(font)
        self.ABLineWidth.setMinimum(0)
        self.ABLineWidth.setMaximum(10)
        self.ABLineWidth.setPageStep(1)
        self.ABLineWidth.setValue(2)
        self.ABLineWidth.setSliderPosition(6)
        self.ABLineWidth.setOrientation(Qt.Horizontal)
        self.ABLineWidth.setTickPosition(QSlider.TicksBelow)
        self.ABLineWidth.setTickInterval(5)

        self.verticalLayout_22.addWidget(self.ABLineWidth)

        self.ABMarkerLabel = QLabel(self.GenOptMainBox)
        self.ABMarkerLabel.setObjectName(u"ABMarkerLabel")
        self.ABMarkerLabel.setFrameShape(QFrame.NoFrame)
        self.ABMarkerLabel.setAlignment(Qt.AlignCenter)

        self.verticalLayout_22.addWidget(self.ABMarkerLabel)

        self.ABMarkerSize = QSlider(self.GenOptMainBox)
        self.ABMarkerSize.setObjectName(u"ABMarkerSize")
        self.ABMarkerSize.setEnabled(True)
        self.ABMarkerSize.setFont(font)
        self.ABMarkerSize.setMinimum(0)
        self.ABMarkerSize.setMaximum(10)
        self.ABMarkerSize.setPageStep(1)
        self.ABMarkerSize.setValue(2)
        self.ABMarkerSize.setSliderPosition(0)
        self.ABMarkerSize.setOrientation(Qt.Horizontal)
        self.ABMarkerSize.setTickPosition(QSlider.TicksBelow)
        self.ABMarkerSize.setTickInterval(5)

        self.verticalLayout_22.addWidget(self.ABMarkerSize)

        self.ABOptGroup = QGroupBox(self.GenOptMainBox)
        self.ABOptGroup.setObjectName(u"ABOptGroup")
        self.ABGridLayout1 = QGridLayout(self.ABOptGroup)
        self.ABGridLayout1.setObjectName(u"ABGridLayout1")
        self.ABXMajGrid = QCheckBox(self.ABOptGroup)
        self.ABXMajGrid.setObjectName(u"ABXMajGrid")
        self.ABXMajGrid.setChecked(False)

        self.ABGridLayout1.addWidget(self.ABXMajGrid, 0, 0, 1, 1)

        self.ABYMajGrid = QCheckBox(self.ABOptGroup)
        self.ABYMajGrid.setObjectName(u"ABYMajGrid")
        self.ABYMajGrid.setChecked(False)

        self.ABGridLayout1.addWidget(self.ABYMajGrid, 0, 1, 1, 1)


        self.verticalLayout_22.addWidget(self.ABOptGroup)

        self.PlotGenOpts = QGroupBox(self.GenOptMainBox)
        self.PlotGenOpts.setObjectName(u"PlotGenOpts")
        self.gridLayout_51 = QGridLayout(self.PlotGenOpts)
        self.gridLayout_51.setObjectName(u"gridLayout_51")
        self.InpPlotDt = QLineEdit(self.PlotGenOpts)
        self.InpPlotDt.setObjectName(u"InpPlotDt")

        self.gridLayout_51.addWidget(self.InpPlotDt, 0, 1, 1, 1)

        self.InpPlotDtLabel = QLabel(self.PlotGenOpts)
        self.InpPlotDtLabel.setObjectName(u"InpPlotDtLabel")

        self.gridLayout_51.addWidget(self.InpPlotDtLabel, 0, 0, 1, 1)

        self.secLabel = QLabel(self.PlotGenOpts)
        self.secLabel.setObjectName(u"secLabel")

        self.gridLayout_51.addWidget(self.secLabel, 0, 2, 1, 1)


        self.verticalLayout_22.addWidget(self.PlotGenOpts)

        self.InpFigOptBox = QGroupBox(self.GenOptMainBox)
        self.InpFigOptBox.setObjectName(u"InpFigOptBox")
        self.gridLayout_55 = QGridLayout(self.InpFigOptBox)
        self.gridLayout_55.setObjectName(u"gridLayout_55")
        self.InpFigDPILabel = QLabel(self.InpFigOptBox)
        self.InpFigDPILabel.setObjectName(u"InpFigDPILabel")

        self.gridLayout_55.addWidget(self.InpFigDPILabel, 0, 0, 1, 1)

        self.InpFigDPI = QLineEdit(self.InpFigOptBox)
        self.InpFigDPI.setObjectName(u"InpFigDPI")

        self.gridLayout_55.addWidget(self.InpFigDPI, 0, 1, 1, 1)


        self.verticalLayout_22.addWidget(self.InpFigOptBox)

        self.verticalSpacer_13 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_22.addItem(self.verticalSpacer_13)


        self.verticalLayout_23.addWidget(self.GenOptMainBox)

        self.MatToolBox.addItem(self.MatGenOpts, u"Figure Options")

        self.verticalLayout_4.addWidget(self.MatToolBox)

        self.MatPlotOptions.setWidget(self.MatplotOptLayout)
        VizMainWindow.addDockWidget(Qt.DockWidgetArea.RightDockWidgetArea, self.MatPlotOptions)
        self.InpDockWidget = QDockWidget(VizMainWindow)
        self.InpDockWidget.setObjectName(u"InpDockWidget")
        self.InpDockWidget.setMinimumSize(QSize(350, 604))
        self.InpDockWidget.setMaximumSize(QSize(350, 800))
        self.InpDockContents = QWidget()
        self.InpDockContents.setObjectName(u"InpDockContents")
        self.horizontalLayout_7 = QHBoxLayout(self.InpDockContents)
        self.horizontalLayout_7.setObjectName(u"horizontalLayout_7")
        self.InpOptions = QToolBox(self.InpDockContents)
        self.InpOptions.setObjectName(u"InpOptions")
        self.InpOptions.setFrameShape(QFrame.Box)
        self.InpOptions.setFrameShadow(QFrame.Sunken)
        self.Hamiltonian = QWidget()
        self.Hamiltonian.setObjectName(u"Hamiltonian")
        self.Hamiltonian.setGeometry(QRect(0, 0, 322, 604))
        self.gridLayout_11 = QGridLayout(self.Hamiltonian)
        self.gridLayout_11.setObjectName(u"gridLayout_11")
        self.InpHamBox = QGroupBox(self.Hamiltonian)
        self.InpHamBox.setObjectName(u"InpHamBox")
        self.verticalLayout_16 = QVBoxLayout(self.InpHamBox)
        self.verticalLayout_16.setObjectName(u"verticalLayout_16")
        self.InpPairOptBox = QGroupBox(self.InpHamBox)
        self.InpPairOptBox.setObjectName(u"InpPairOptBox")
        self.gridLayout_10 = QGridLayout(self.InpPairOptBox)
        self.gridLayout_10.setObjectName(u"gridLayout_10")
        self.ImpPairMaptypeLabel = QLabel(self.InpPairOptBox)
        self.ImpPairMaptypeLabel.setObjectName(u"ImpPairMaptypeLabel")

        self.gridLayout_10.addWidget(self.ImpPairMaptypeLabel, 1, 0, 1, 1)

        self.InpPairSymLabel = QLabel(self.InpPairOptBox)
        self.InpPairSymLabel.setObjectName(u"InpPairSymLabel")

        self.gridLayout_10.addWidget(self.InpPairSymLabel, 0, 0, 1, 1)

        self.InpPairSym = QSpinBox(self.InpPairOptBox)
        self.InpPairSym.setObjectName(u"InpPairSym")
        self.InpPairSym.setReadOnly(False)
        self.InpPairSym.setMaximum(4)

        self.gridLayout_10.addWidget(self.InpPairSym, 0, 1, 1, 1)

        self.ImpPairMaptype = QSpinBox(self.InpPairOptBox)
        self.ImpPairMaptype.setObjectName(u"ImpPairMaptype")
        self.ImpPairMaptype.setReadOnly(False)
        self.ImpPairMaptype.setMinimum(1)
        self.ImpPairMaptype.setMaximum(2)

        self.gridLayout_10.addWidget(self.ImpPairMaptype, 1, 1, 1, 1)


        self.verticalLayout_16.addWidget(self.InpPairOptBox)

        self.InpXCCheck = QCheckBox(self.InpHamBox)
        self.InpXCCheck.setObjectName(u"InpXCCheck")

        self.verticalLayout_16.addWidget(self.InpXCCheck)

        self.InpDMCheck = QCheckBox(self.InpHamBox)
        self.InpDMCheck.setObjectName(u"InpDMCheck")

        self.verticalLayout_16.addWidget(self.InpDMCheck)

        self.InpMAECheck = QCheckBox(self.InpHamBox)
        self.InpMAECheck.setObjectName(u"InpMAECheck")

        self.verticalLayout_16.addWidget(self.InpMAECheck)

        self.InpPseudoCheck = QCheckBox(self.InpHamBox)
        self.InpPseudoCheck.setObjectName(u"InpPseudoCheck")

        self.verticalLayout_16.addWidget(self.InpPseudoCheck)

        self.InpBqCheck = QCheckBox(self.InpHamBox)
        self.InpBqCheck.setObjectName(u"InpBqCheck")

        self.verticalLayout_16.addWidget(self.InpBqCheck)

        self.InpBqDMCheck = QCheckBox(self.InpHamBox)
        self.InpBqDMCheck.setObjectName(u"InpBqDMCheck")

        self.verticalLayout_16.addWidget(self.InpBqDMCheck)

        self.InpBextMainBox1 = QGroupBox(self.InpHamBox)
        self.InpBextMainBox1.setObjectName(u"InpBextMainBox1")
        self.verticalLayout_151 = QVBoxLayout(self.InpBextMainBox1)
        self.verticalLayout_151.setObjectName(u"verticalLayout_151")
        self.InpBextInitBox = QGroupBox(self.InpBextMainBox1)
        self.InpBextInitBox.setObjectName(u"InpBextInitBox")
        self.InpBextInitBox.setCheckable(True)
        self.InpBextInitBox.setChecked(False)
        self.gridLayout_9 = QGridLayout(self.InpBextInitBox)
        self.gridLayout_9.setObjectName(u"gridLayout_9")
        self.InpBextInit_x = QLineEdit(self.InpBextInitBox)
        self.InpBextInit_x.setObjectName(u"InpBextInit_x")

        self.gridLayout_9.addWidget(self.InpBextInit_x, 0, 0, 1, 1)

        self.InpBextInit_y = QLineEdit(self.InpBextInitBox)
        self.InpBextInit_y.setObjectName(u"InpBextInit_y")

        self.gridLayout_9.addWidget(self.InpBextInit_y, 0, 1, 1, 1)

        self.InpBextInit_z = QLineEdit(self.InpBextInitBox)
        self.InpBextInit_z.setObjectName(u"InpBextInit_z")

        self.gridLayout_9.addWidget(self.InpBextInit_z, 0, 2, 1, 1)


        self.verticalLayout_151.addWidget(self.InpBextInitBox)


        self.verticalLayout_16.addWidget(self.InpBextMainBox1)

        self.InpDipBox = QGroupBox(self.InpHamBox)
        self.InpDipBox.setObjectName(u"InpDipBox")
        self.InpDipBox.setCheckable(True)
        self.InpDipBox.setChecked(False)
        self.gridLayout_5 = QGridLayout(self.InpDipBox)
        self.gridLayout_5.setObjectName(u"gridLayout_5")
        self.InpDipBlockSizeLineEdit = QLineEdit(self.InpDipBox)
        self.InpDipBlockSizeLineEdit.setObjectName(u"InpDipBlockSizeLineEdit")
        self.InpDipBlockSizeLineEdit.setCursorPosition(0)

        self.gridLayout_5.addWidget(self.InpDipBlockSizeLineEdit, 2, 2, 1, 1)

        self.InpDipBruteForceCheck = QRadioButton(self.InpDipBox)
        self.InpDipBruteForceCheck.setObjectName(u"InpDipBruteForceCheck")
        self.InpDipBruteForceCheck.setChecked(True)

        self.gridLayout_5.addWidget(self.InpDipBruteForceCheck, 0, 0, 1, 1)

        self.InpDipMacroCheck = QRadioButton(self.InpDipBox)
        self.InpDipMacroCheck.setObjectName(u"InpDipMacroCheck")

        self.gridLayout_5.addWidget(self.InpDipMacroCheck, 2, 0, 1, 1)

        self.InpDipBlockSizeLabel = QLabel(self.InpDipBox)
        self.InpDipBlockSizeLabel.setObjectName(u"InpDipBlockSizeLabel")

        self.gridLayout_5.addWidget(self.InpDipBlockSizeLabel, 2, 1, 1, 1)

        self.InpDipFFTCheck = QRadioButton(self.InpDipBox)
        self.InpDipFFTCheck.setObjectName(u"InpDipFFTCheck")

        self.gridLayout_5.addWidget(self.InpDipFFTCheck, 1, 0, 1, 1)


        self.verticalLayout_16.addWidget(self.InpDipBox)

        self.verticalSpacer_7 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_16.addItem(self.verticalSpacer_7)


        self.gridLayout_11.addWidget(self.InpHamBox, 0, 0, 1, 1)

        self.InpOptions.addItem(self.Hamiltonian, u"Hamiltonian")
        self.Magnetization = QWidget()
        self.Magnetization.setObjectName(u"Magnetization")
        self.Magnetization.setGeometry(QRect(0, 0, 322, 631))
        self.gridLayout_46 = QGridLayout(self.Magnetization)
        self.gridLayout_46.setObjectName(u"gridLayout_46")
        self.InpMagMainBox = QGroupBox(self.Magnetization)
        self.InpMagMainBox.setObjectName(u"InpMagMainBox")
        self.verticalLayout_32 = QVBoxLayout(self.InpMagMainBox)
        self.verticalLayout_32.setObjectName(u"verticalLayout_32")
        self.InpMagInitBox = QGroupBox(self.InpMagMainBox)
        self.InpMagInitBox.setObjectName(u"InpMagInitBox")
        self.gridLayout_44 = QGridLayout(self.InpMagInitBox)
        self.gridLayout_44.setObjectName(u"gridLayout_44")
        self.InpMensembleLabel = QLabel(self.InpMagInitBox)
        self.InpMensembleLabel.setObjectName(u"InpMensembleLabel")

        self.gridLayout_44.addWidget(self.InpMensembleLabel, 0, 0, 1, 1)

        self.InpInitmag2Box = QGroupBox(self.InpMagInitBox)
        self.InpInitmag2Box.setObjectName(u"InpInitmag2Box")
        self.InpInitmag2Box.setCheckable(True)
        self.InpInitmag2Box.setChecked(False)
        self.gridLayout_43 = QGridLayout(self.InpInitmag2Box)
        self.gridLayout_43.setObjectName(u"gridLayout_43")
        self.InpInitMag2Theta = QLineEdit(self.InpInitmag2Box)
        self.InpInitMag2Theta.setObjectName(u"InpInitMag2Theta")

        self.gridLayout_43.addWidget(self.InpInitMag2Theta, 1, 0, 1, 1)

        self.InpInitMag2Phi = QLineEdit(self.InpInitmag2Box)
        self.InpInitMag2Phi.setObjectName(u"InpInitMag2Phi")

        self.gridLayout_43.addWidget(self.InpInitMag2Phi, 1, 1, 1, 1)

        self.InpInitMag2ThetaLabel = QLabel(self.InpInitmag2Box)
        self.InpInitMag2ThetaLabel.setObjectName(u"InpInitMag2ThetaLabel")
        self.InpInitMag2ThetaLabel.setTextFormat(Qt.RichText)

        self.gridLayout_43.addWidget(self.InpInitMag2ThetaLabel, 0, 0, 1, 1)

        self.InpInitMag2PhiLabel = QLabel(self.InpInitmag2Box)
        self.InpInitMag2PhiLabel.setObjectName(u"InpInitMag2PhiLabel")
        self.InpInitMag2PhiLabel.setTextFormat(Qt.RichText)

        self.gridLayout_43.addWidget(self.InpInitMag2PhiLabel, 0, 1, 1, 1)


        self.gridLayout_44.addWidget(self.InpInitmag2Box, 4, 0, 1, 2)

        self.InpMensemble = QLineEdit(self.InpMagInitBox)
        self.InpMensemble.setObjectName(u"InpMensemble")

        self.gridLayout_44.addWidget(self.InpMensemble, 0, 1, 1, 1)

        self.InpInitMag6Check = QGroupBox(self.InpMagInitBox)
        self.InpInitMag6Check.setObjectName(u"InpInitMag6Check")
        self.InpInitMag6Check.setCheckable(True)
        self.InpInitMag6Check.setChecked(False)
        self.verticalLayout_34 = QVBoxLayout(self.InpInitMag6Check)
        self.verticalLayout_34.setObjectName(u"verticalLayout_34")
        self.InpSetIniMomfileButton = QPushButton(self.InpInitMag6Check)
        self.InpSetIniMomfileButton.setObjectName(u"InpSetIniMomfileButton")

        self.verticalLayout_34.addWidget(self.InpSetIniMomfileButton)

        self.InpSetFinMomfileButton = QPushButton(self.InpInitMag6Check)
        self.InpSetFinMomfileButton.setObjectName(u"InpSetFinMomfileButton")

        self.verticalLayout_34.addWidget(self.InpSetFinMomfileButton)


        self.gridLayout_44.addWidget(self.InpInitMag6Check, 5, 0, 1, 2)

        self.InpConfBox = QGroupBox(self.InpMagInitBox)
        self.InpConfBox.setObjectName(u"InpConfBox")
        self.InpConfBox.setCheckable(True)
        self.InpConfBox.setChecked(False)
        self.verticalLayout_35 = QVBoxLayout(self.InpConfBox)
        self.verticalLayout_35.setObjectName(u"verticalLayout_35")
        self.InpInitMag4Check = QCheckBox(self.InpConfBox)
        self.InpInitMag4Check.setObjectName(u"InpInitMag4Check")

        self.verticalLayout_35.addWidget(self.InpInitMag4Check)

        self.InpInitmag7Check = QGroupBox(self.InpConfBox)
        self.InpInitmag7Check.setObjectName(u"InpInitmag7Check")
        self.InpInitmag7Check.setCheckable(True)
        self.InpInitmag7Check.setChecked(False)
        self.verticalLayout_33 = QVBoxLayout(self.InpInitmag7Check)
        self.verticalLayout_33.setObjectName(u"verticalLayout_33")
        self.InpIniFinCheck = QRadioButton(self.InpInitmag7Check)
        self.InpIniFinCheck.setObjectName(u"InpIniFinCheck")

        self.verticalLayout_33.addWidget(self.InpIniFinCheck)

        self.InpFullPathChek = QRadioButton(self.InpInitmag7Check)
        self.InpFullPathChek.setObjectName(u"InpFullPathChek")

        self.verticalLayout_33.addWidget(self.InpFullPathChek)

        self.InpRelGNEBCheck = QCheckBox(self.InpInitmag7Check)
        self.InpRelGNEBCheck.setObjectName(u"InpRelGNEBCheck")

        self.verticalLayout_33.addWidget(self.InpRelGNEBCheck)


        self.verticalLayout_35.addWidget(self.InpInitmag7Check)

        self.InpInitMag4CreateButton = QPushButton(self.InpConfBox)
        self.InpInitMag4CreateButton.setObjectName(u"InpInitMag4CreateButton")

        self.verticalLayout_35.addWidget(self.InpInitMag4CreateButton)

        self.InpInitMag4ReadButton = QPushButton(self.InpConfBox)
        self.InpInitMag4ReadButton.setObjectName(u"InpInitMag4ReadButton")

        self.verticalLayout_35.addWidget(self.InpInitMag4ReadButton)


        self.gridLayout_44.addWidget(self.InpConfBox, 7, 0, 1, 2)

        self.InpInitmag3Check = QCheckBox(self.InpMagInitBox)
        self.InpInitmag3Check.setObjectName(u"InpInitmag3Check")
        self.InpInitmag3Check.setChecked(True)

        self.gridLayout_44.addWidget(self.InpInitmag3Check, 2, 0, 1, 1)

        self.InpInitmag1Check = QCheckBox(self.InpMagInitBox)
        self.InpInitmag1Check.setObjectName(u"InpInitmag1Check")

        self.gridLayout_44.addWidget(self.InpInitmag1Check, 1, 0, 1, 1)


        self.verticalLayout_32.addWidget(self.InpMagInitBox)

        self.verticalSpacer_11 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_32.addItem(self.verticalSpacer_11)


        self.gridLayout_46.addWidget(self.InpMagMainBox, 0, 0, 1, 1)

        self.InpOptions.addItem(self.Magnetization, u"Magnetization")
        self.InitalPhase = QWidget()
        self.InitalPhase.setObjectName(u"InitalPhase")
        self.InitalPhase.setGeometry(QRect(0, 0, 322, 350))
        self.gridLayout_30 = QGridLayout(self.InitalPhase)
        self.gridLayout_30.setObjectName(u"gridLayout_30")
        self.InpInitBox = QGroupBox(self.InitalPhase)
        self.InpInitBox.setObjectName(u"InpInitBox")
        self.InpInitBox.setCheckable(True)
        self.InpInitBox.setChecked(False)
        self.gridLayout_54 = QGridLayout(self.InpInitBox)
        self.gridLayout_54.setObjectName(u"gridLayout_54")
        self.InpInitLLG = QRadioButton(self.InpInitBox)
        self.InitPhaseModeSelector = QButtonGroup(VizMainWindow)
        self.InitPhaseModeSelector.setObjectName(u"InitPhaseModeSelector")
        self.InitPhaseModeSelector.addButton(self.InpInitLLG)
        self.InpInitLLG.setObjectName(u"InpInitLLG")
        self.InpInitLLG.setChecked(True)

        self.gridLayout_54.addWidget(self.InpInitLLG, 0, 0, 1, 1)

        self.InpInitMCBoc = QGroupBox(self.InpInitBox)
        self.InpInitMCBoc.setObjectName(u"InpInitMCBoc")
        self.verticalLayout_13 = QVBoxLayout(self.InpInitMCBoc)
        self.verticalLayout_13.setObjectName(u"verticalLayout_13")
        self.InpInitMcMet = QRadioButton(self.InpInitMCBoc)
        self.InitPhaseModeSelector.addButton(self.InpInitMcMet)
        self.InpInitMcMet.setObjectName(u"InpInitMcMet")
        self.InpInitMcMet.setChecked(False)

        self.verticalLayout_13.addWidget(self.InpInitMcMet)

        self.InpInitMcHeat = QRadioButton(self.InpInitMCBoc)
        self.InitPhaseModeSelector.addButton(self.InpInitMcHeat)
        self.InpInitMcHeat.setObjectName(u"InpInitMcHeat")

        self.verticalLayout_13.addWidget(self.InpInitMcHeat)


        self.gridLayout_54.addWidget(self.InpInitMCBoc, 0, 1, 1, 1)

        self.InpInitVPO = QRadioButton(self.InpInitBox)
        self.InitPhaseModeSelector.addButton(self.InpInitVPO)
        self.InpInitVPO.setObjectName(u"InpInitVPO")

        self.gridLayout_54.addWidget(self.InpInitVPO, 0, 2, 1, 1)


        self.gridLayout_30.addWidget(self.InpInitBox, 0, 0, 1, 1)

        self.InitPhaseOptionsBox = QGroupBox(self.InitalPhase)
        self.InitPhaseOptionsBox.setObjectName(u"InitPhaseOptionsBox")
        self.InitPhaseOptionsBox.setEnabled(False)
        self.gridLayout_25 = QGridLayout(self.InitPhaseOptionsBox)
        self.gridLayout_25.setObjectName(u"gridLayout_25")
        self.verticalSpacer_5 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_25.addItem(self.verticalSpacer_5, 1, 0, 1, 1)

        self.InpQuickRelax = QCheckBox(self.InitPhaseOptionsBox)
        self.InpQuickRelax.setObjectName(u"InpQuickRelax")

        self.gridLayout_25.addWidget(self.InpQuickRelax, 0, 0, 1, 1)

        self.InpInitAnnealBox = QGroupBox(self.InitPhaseOptionsBox)
        self.InpInitAnnealBox.setObjectName(u"InpInitAnnealBox")
        self.gridLayout_21 = QGridLayout(self.InpInitAnnealBox)
        self.gridLayout_21.setObjectName(u"gridLayout_21")
        self.InpSetPhases = QPushButton(self.InpInitAnnealBox)
        self.InpSetPhases.setObjectName(u"InpSetPhases")

        self.gridLayout_21.addWidget(self.InpSetPhases, 0, 0, 1, 1)


        self.gridLayout_25.addWidget(self.InpInitAnnealBox, 1, 0, 1, 1)


        self.gridLayout_30.addWidget(self.InitPhaseOptionsBox, 1, 0, 1, 1)

        self.InpOptions.addItem(self.InitalPhase, u"Initial Phase")
        self.MeasurePhase = QWidget()
        self.MeasurePhase.setObjectName(u"MeasurePhase")
        self.MeasurePhase.setGeometry(QRect(0, 0, 322, 619))
        self.gridLayout_33 = QGridLayout(self.MeasurePhase)
        self.gridLayout_33.setObjectName(u"gridLayout_33")
        self.InpMeasureMainBox = QGroupBox(self.MeasurePhase)
        self.InpMeasureMainBox.setObjectName(u"InpMeasureMainBox")
        self.gridLayout_35 = QGridLayout(self.InpMeasureMainBox)
        self.gridLayout_35.setObjectName(u"gridLayout_35")
        self.InpMeasureGnebBox = QGroupBox(self.InpMeasureMainBox)
        self.InpMeasureGnebBox.setObjectName(u"InpMeasureGnebBox")
        self.InpMeasureGnebBox.setCheckable(True)
        self.InpMeasureGnebBox.setChecked(False)
        self.gridLayout_34 = QGridLayout(self.InpMeasureGnebBox)
        self.gridLayout_34.setObjectName(u"gridLayout_34")
        self.InpGNEBMeasureBox = QGroupBox(self.InpMeasureGnebBox)
        self.InpGNEBMeasureBox.setObjectName(u"InpGNEBMeasureBox")
        self.InpGNEBMeasureBox.setEnabled(False)
        self.InpGNEBMeasureBox.setCheckable(True)
        self.InpGNEBMeasureBox.setChecked(False)
        self.gridLayout_2 = QGridLayout(self.InpGNEBMeasureBox)
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.InpGNEBMEPTolLabel = QLabel(self.InpGNEBMeasureBox)
        self.InpGNEBMEPTolLabel.setObjectName(u"InpGNEBMEPTolLabel")

        self.gridLayout_2.addWidget(self.InpGNEBMEPTolLabel, 0, 0, 1, 1)

        self.InpGNEBMEPTol = QLineEdit(self.InpGNEBMeasureBox)
        self.InpGNEBMEPTol.setObjectName(u"InpGNEBMEPTol")

        self.gridLayout_2.addWidget(self.InpGNEBMEPTol, 0, 1, 1, 1)

        self.InpGNEBMEPStepsLabel = QLabel(self.InpGNEBMeasureBox)
        self.InpGNEBMEPStepsLabel.setObjectName(u"InpGNEBMEPStepsLabel")

        self.gridLayout_2.addWidget(self.InpGNEBMEPStepsLabel, 1, 0, 1, 1)

        self.InpGNEBMEPSteps = QLineEdit(self.InpGNEBMeasureBox)
        self.InpGNEBMEPSteps.setObjectName(u"InpGNEBMEPSteps")

        self.gridLayout_2.addWidget(self.InpGNEBMEPSteps, 1, 1, 1, 1)

        self.InpMinEigLabel = QLabel(self.InpGNEBMeasureBox)
        self.InpMinEigLabel.setObjectName(u"InpMinEigLabel")

        self.gridLayout_2.addWidget(self.InpMinEigLabel, 2, 0, 1, 1)

        self.InpMinEig = QLineEdit(self.InpGNEBMeasureBox)
        self.InpMinEig.setObjectName(u"InpMinEig")

        self.gridLayout_2.addWidget(self.InpMinEig, 2, 1, 1, 1)


        self.gridLayout_34.addWidget(self.InpGNEBMeasureBox, 1, 0, 1, 2)

        self.InpMeasureGNEBCI = QGroupBox(self.InpMeasureGnebBox)
        self.InpMeasureGNEBCI.setObjectName(u"InpMeasureGNEBCI")
        self.InpMeasureGNEBCI.setEnabled(False)
        self.InpMeasureGNEBCI.setCheckable(True)
        self.InpMeasureGNEBCI.setChecked(False)
        self.gridLayout_161 = QGridLayout(self.InpMeasureGNEBCI)
        self.gridLayout_161.setObjectName(u"gridLayout_161")
        self.InpGNEBCITolLabel = QLabel(self.InpMeasureGNEBCI)
        self.InpGNEBCITolLabel.setObjectName(u"InpGNEBCITolLabel")

        self.gridLayout_161.addWidget(self.InpGNEBCITolLabel, 0, 0, 1, 1)

        self.InpGNEBCITol = QLineEdit(self.InpMeasureGNEBCI)
        self.InpGNEBCITol.setObjectName(u"InpGNEBCITol")

        self.gridLayout_161.addWidget(self.InpGNEBCITol, 0, 1, 1, 1)


        self.gridLayout_34.addWidget(self.InpMeasureGNEBCI, 2, 0, 1, 2)


        self.gridLayout_35.addWidget(self.InpMeasureGnebBox, 0, 0, 1, 1)

        self.verticalSpacer_91 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_35.addItem(self.verticalSpacer_91, 3, 0, 1, 1)


        self.gridLayout_33.addWidget(self.InpMeasureMainBox, 0, 0, 1, 1)

        self.InpOptions.addItem(self.MeasurePhase, u"Measurement Phase")
        self.Excitations = QWidget()
        self.Excitations.setObjectName(u"Excitations")
        self.Excitations.setGeometry(QRect(0, 0, 322, 656))
        self.gridLayout_40 = QGridLayout(self.Excitations)
        self.gridLayout_40.setObjectName(u"gridLayout_40")
        self.InpExcMainBox = QGroupBox(self.Excitations)
        self.InpExcMainBox.setObjectName(u"InpExcMainBox")
        self.gridLayout_42 = QGridLayout(self.InpExcMainBox)
        self.gridLayout_42.setObjectName(u"gridLayout_42")
        self.InpSTorqueBox = QGroupBox(self.InpExcMainBox)
        self.InpSTorqueBox.setObjectName(u"InpSTorqueBox")
        self.gridLayout_41 = QGridLayout(self.InpSTorqueBox)
        self.gridLayout_41.setObjectName(u"gridLayout_41")
        self.InpSTTBox = QGroupBox(self.InpSTorqueBox)
        self.InpSTTBox.setObjectName(u"InpSTTBox")
        self.InpSTTBox.setCheckable(True)
        self.InpSTTBox.setChecked(False)
        self.gridLayout_37 = QGridLayout(self.InpSTTBox)
        self.gridLayout_37.setObjectName(u"gridLayout_37")
        self.InpSTTModelBox = QGroupBox(self.InpSTTBox)
        self.InpSTTModelBox.setObjectName(u"InpSTTModelBox")
        self.verticalLayout_19 = QVBoxLayout(self.InpSTTModelBox)
        self.verticalLayout_19.setObjectName(u"verticalLayout_19")
        self.InpSlonwceskiCheck = QRadioButton(self.InpSTTModelBox)
        self.InpSlonwceskiCheck.setObjectName(u"InpSlonwceskiCheck")

        self.verticalLayout_19.addWidget(self.InpSlonwceskiCheck)

        self.InpZhangLiCheck = QRadioButton(self.InpSTTModelBox)
        self.InpZhangLiCheck.setObjectName(u"InpZhangLiCheck")
        self.InpZhangLiCheck.setChecked(True)

        self.verticalLayout_19.addWidget(self.InpZhangLiCheck)


        self.gridLayout_37.addWidget(self.InpSTTModelBox, 0, 0, 1, 2)

        self.InpBetaLabel = QLabel(self.InpSTTBox)
        self.InpBetaLabel.setObjectName(u"InpBetaLabel")

        self.gridLayout_37.addWidget(self.InpBetaLabel, 2, 0, 1, 1)

        self.InpBeta = QLineEdit(self.InpSTTBox)
        self.InpBeta.setObjectName(u"InpBeta")

        self.gridLayout_37.addWidget(self.InpBeta, 2, 1, 1, 1)

        self.InpCurrentBox = QGroupBox(self.InpSTTBox)
        self.InpCurrentBox.setObjectName(u"InpCurrentBox")
        self.gridLayout_36 = QGridLayout(self.InpCurrentBox)
        self.gridLayout_36.setObjectName(u"gridLayout_36")
        self.InpJvec_z = QLineEdit(self.InpCurrentBox)
        self.InpJvec_z.setObjectName(u"InpJvec_z")

        self.gridLayout_36.addWidget(self.InpJvec_z, 1, 2, 1, 1)

        self.InpJvec_x = QLineEdit(self.InpCurrentBox)
        self.InpJvec_x.setObjectName(u"InpJvec_x")

        self.gridLayout_36.addWidget(self.InpJvec_x, 1, 0, 1, 1)

        self.InpJvec_y = QLineEdit(self.InpCurrentBox)
        self.InpJvec_y.setObjectName(u"InpJvec_y")

        self.gridLayout_36.addWidget(self.InpJvec_y, 1, 1, 1, 1)

        self.InpJvecLabel_z = QLabel(self.InpCurrentBox)
        self.InpJvecLabel_z.setObjectName(u"InpJvecLabel_z")

        self.gridLayout_36.addWidget(self.InpJvecLabel_z, 0, 2, 1, 1)

        self.InpJvecLabel_x = QLabel(self.InpCurrentBox)
        self.InpJvecLabel_x.setObjectName(u"InpJvecLabel_x")
        self.InpJvecLabel_x.setTextFormat(Qt.RichText)

        self.gridLayout_36.addWidget(self.InpJvecLabel_x, 0, 0, 1, 1)

        self.InpJvecLabel_y = QLabel(self.InpCurrentBox)
        self.InpJvecLabel_y.setObjectName(u"InpJvecLabel_y")

        self.gridLayout_36.addWidget(self.InpJvecLabel_y, 0, 1, 1, 1)


        self.gridLayout_37.addWidget(self.InpCurrentBox, 3, 0, 1, 2)

        self.InpSHEBox = QGroupBox(self.InpSTTBox)
        self.InpSHEBox.setObjectName(u"InpSHEBox")
        self.InpSHEBox.setCheckable(True)
        self.InpSHEBox.setChecked(False)
        self.gridLayout_49 = QGridLayout(self.InpSHEBox)
        self.gridLayout_49.setObjectName(u"gridLayout_49")
        self.InpSheLabel = QLabel(self.InpSHEBox)
        self.InpSheLabel.setObjectName(u"InpSheLabel")

        self.gridLayout_49.addWidget(self.InpSheLabel, 0, 0, 1, 1)

        self.InpShe = QLineEdit(self.InpSHEBox)
        self.InpShe.setObjectName(u"InpShe")

        self.gridLayout_49.addWidget(self.InpShe, 0, 2, 1, 1)

        self.InpSheThicknessLabel = QLabel(self.InpSHEBox)
        self.InpSheThicknessLabel.setObjectName(u"InpSheThicknessLabel")

        self.gridLayout_49.addWidget(self.InpSheThicknessLabel, 1, 0, 1, 1)

        self.InpSheThickness = QLineEdit(self.InpSHEBox)
        self.InpSheThickness.setObjectName(u"InpSheThickness")

        self.gridLayout_49.addWidget(self.InpSheThickness, 1, 2, 1, 1)


        self.gridLayout_37.addWidget(self.InpSHEBox, 1, 0, 1, 2)


        self.gridLayout_41.addWidget(self.InpSTTBox, 0, 0, 1, 1)

        self.InpSOTBox = QGroupBox(self.InpSTorqueBox)
        self.InpSOTBox.setObjectName(u"InpSOTBox")
        self.InpSOTBox.setCheckable(True)
        self.InpSOTBox.setChecked(False)
        self.gridLayout_39 = QGridLayout(self.InpSOTBox)
        self.gridLayout_39.setObjectName(u"gridLayout_39")
        self.InpSOTFLLabel = QLabel(self.InpSOTBox)
        self.InpSOTFLLabel.setObjectName(u"InpSOTFLLabel")

        self.gridLayout_39.addWidget(self.InpSOTFLLabel, 0, 0, 1, 1)

        self.InpSOTFL = QLineEdit(self.InpSOTBox)
        self.InpSOTFL.setObjectName(u"InpSOTFL")

        self.gridLayout_39.addWidget(self.InpSOTFL, 0, 1, 1, 1)

        self.InpSOTDLLabel = QLabel(self.InpSOTBox)
        self.InpSOTDLLabel.setObjectName(u"InpSOTDLLabel")

        self.gridLayout_39.addWidget(self.InpSOTDLLabel, 1, 0, 1, 1)

        self.InpSOTDL = QLineEdit(self.InpSOTBox)
        self.InpSOTDL.setObjectName(u"InpSOTDL")

        self.gridLayout_39.addWidget(self.InpSOTDL, 1, 1, 1, 1)

        self.InpSOTPolBox = QGroupBox(self.InpSOTBox)
        self.InpSOTPolBox.setObjectName(u"InpSOTPolBox")
        self.gridLayout_38 = QGridLayout(self.InpSOTPolBox)
        self.gridLayout_38.setObjectName(u"gridLayout_38")
        self.InpSOTPolLabel_x = QLabel(self.InpSOTPolBox)
        self.InpSOTPolLabel_x.setObjectName(u"InpSOTPolLabel_x")

        self.gridLayout_38.addWidget(self.InpSOTPolLabel_x, 0, 0, 1, 1)

        self.InpSOTPolLabel_y = QLabel(self.InpSOTPolBox)
        self.InpSOTPolLabel_y.setObjectName(u"InpSOTPolLabel_y")

        self.gridLayout_38.addWidget(self.InpSOTPolLabel_y, 0, 1, 1, 1)

        self.InpSOTPolLabel_z = QLabel(self.InpSOTPolBox)
        self.InpSOTPolLabel_z.setObjectName(u"InpSOTPolLabel_z")

        self.gridLayout_38.addWidget(self.InpSOTPolLabel_z, 0, 2, 1, 1)

        self.InpSOTPol_x = QLineEdit(self.InpSOTPolBox)
        self.InpSOTPol_x.setObjectName(u"InpSOTPol_x")

        self.gridLayout_38.addWidget(self.InpSOTPol_x, 1, 0, 1, 1)

        self.InpSOTPol_y = QLineEdit(self.InpSOTPolBox)
        self.InpSOTPol_y.setObjectName(u"InpSOTPol_y")

        self.gridLayout_38.addWidget(self.InpSOTPol_y, 1, 1, 1, 1)

        self.InpSOTPol_z = QLineEdit(self.InpSOTPolBox)
        self.InpSOTPol_z.setObjectName(u"InpSOTPol_z")

        self.gridLayout_38.addWidget(self.InpSOTPol_z, 1, 2, 1, 1)


        self.gridLayout_39.addWidget(self.InpSOTPolBox, 2, 0, 1, 2)


        self.gridLayout_41.addWidget(self.InpSOTBox, 1, 0, 1, 1)


        self.gridLayout_42.addWidget(self.InpSTorqueBox, 0, 0, 1, 1)

        self.verticalSpacer_10 = QSpacerItem(20, 40, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.gridLayout_42.addItem(self.verticalSpacer_10, 1, 0, 1, 1)


        self.gridLayout_40.addWidget(self.InpExcMainBox, 0, 0, 1, 1)

        self.InpOptions.addItem(self.Excitations, u"Excitations")
        self.InpMeasurablePage = QWidget()
        self.InpMeasurablePage.setObjectName(u"InpMeasurablePage")
        self.InpMeasurablePage.setGeometry(QRect(0, 0, 322, 1220))
        self.gridLayout_32 = QGridLayout(self.InpMeasurablePage)
        self.gridLayout_32.setObjectName(u"gridLayout_32")
        self.MeasureOptsBox = QGroupBox(self.InpMeasurablePage)
        self.MeasureOptsBox.setObjectName(u"MeasureOptsBox")
        self.verticalLayout_31 = QVBoxLayout(self.MeasureOptsBox)
        self.verticalLayout_31.setObjectName(u"verticalLayout_31")
        self.InpAveMainBox = QGroupBox(self.MeasureOptsBox)
        self.InpAveMainBox.setObjectName(u"InpAveMainBox")
        self.gridLayout_20 = QGridLayout(self.InpAveMainBox)
        self.gridLayout_20.setObjectName(u"gridLayout_20")
        self.InpAveBox = QGroupBox(self.InpAveMainBox)
        self.InpAveBox.setObjectName(u"InpAveBox")
        self.InpAveBox.setCheckable(True)
        self.gridLayout_12 = QGridLayout(self.InpAveBox)
        self.gridLayout_12.setObjectName(u"gridLayout_12")
        self.InpAveStepLabel = QLabel(self.InpAveBox)
        self.InpAveStepLabel.setObjectName(u"InpAveStepLabel")

        self.gridLayout_12.addWidget(self.InpAveStepLabel, 0, 0, 1, 1)

        self.InpAveBuffLabel = QLabel(self.InpAveBox)
        self.InpAveBuffLabel.setObjectName(u"InpAveBuffLabel")

        self.gridLayout_12.addWidget(self.InpAveBuffLabel, 1, 0, 1, 1)

        self.InpAveStep = QLineEdit(self.InpAveBox)
        self.InpAveStep.setObjectName(u"InpAveStep")

        self.gridLayout_12.addWidget(self.InpAveStep, 0, 1, 1, 1)

        self.InpAveBuff = QLineEdit(self.InpAveBox)
        self.InpAveBuff.setObjectName(u"InpAveBuff")

        self.gridLayout_12.addWidget(self.InpAveBuff, 1, 1, 1, 1)

        self.InpProjAveBox = QGroupBox(self.InpAveBox)
        self.InpProjAveBox.setObjectName(u"InpProjAveBox")
        self.verticalLayout_17 = QVBoxLayout(self.InpProjAveBox)
        self.verticalLayout_17.setObjectName(u"verticalLayout_17")
        self.InpSiteAveCheck = QRadioButton(self.InpProjAveBox)
        self.ProjAveButtonGroup = QButtonGroup(VizMainWindow)
        self.ProjAveButtonGroup.setObjectName(u"ProjAveButtonGroup")
        self.ProjAveButtonGroup.addButton(self.InpSiteAveCheck)
        self.InpSiteAveCheck.setObjectName(u"InpSiteAveCheck")
        self.InpSiteAveCheck.setChecked(True)

        self.verticalLayout_17.addWidget(self.InpSiteAveCheck)

        self.InpTypeAveCheck = QRadioButton(self.InpProjAveBox)
        self.ProjAveButtonGroup.addButton(self.InpTypeAveCheck)
        self.InpTypeAveCheck.setObjectName(u"InpTypeAveCheck")

        self.verticalLayout_17.addWidget(self.InpTypeAveCheck)

        self.InpChemAveCheck = QCheckBox(self.InpProjAveBox)
        self.InpChemAveCheck.setObjectName(u"InpChemAveCheck")

        self.verticalLayout_17.addWidget(self.InpChemAveCheck)


        self.gridLayout_12.addWidget(self.InpProjAveBox, 2, 0, 1, 2)


        self.gridLayout_20.addWidget(self.InpAveBox, 0, 0, 1, 1)


        self.verticalLayout_31.addWidget(self.InpAveMainBox)

        self.InpEneBox = QGroupBox(self.MeasureOptsBox)
        self.InpEneBox.setObjectName(u"InpEneBox")
        self.verticalLayout_18 = QVBoxLayout(self.InpEneBox)
        self.verticalLayout_18.setObjectName(u"verticalLayout_18")
        self.InpEneTotalEneCheck = QCheckBox(self.InpEneBox)
        self.InpEneTotalEneCheck.setObjectName(u"InpEneTotalEneCheck")

        self.verticalLayout_18.addWidget(self.InpEneTotalEneCheck)

        self.InpEneSiteEneCheck = QCheckBox(self.InpEneBox)
        self.InpEneSiteEneCheck.setObjectName(u"InpEneSiteEneCheck")

        self.verticalLayout_18.addWidget(self.InpEneSiteEneCheck)


        self.verticalLayout_31.addWidget(self.InpEneBox)

        self.InpCumuMainBox = QGroupBox(self.MeasureOptsBox)
        self.InpCumuMainBox.setObjectName(u"InpCumuMainBox")
        self.gridLayout_18 = QGridLayout(self.InpCumuMainBox)
        self.gridLayout_18.setObjectName(u"gridLayout_18")
        self.InpCumuBox = QGroupBox(self.InpCumuMainBox)
        self.InpCumuBox.setObjectName(u"InpCumuBox")
        self.InpCumuBox.setCheckable(True)
        self.InpCumuBox.setChecked(False)
        self.gridLayout_17 = QGridLayout(self.InpCumuBox)
        self.gridLayout_17.setObjectName(u"gridLayout_17")
        self.InpCumuStepLabel = QLabel(self.InpCumuBox)
        self.InpCumuStepLabel.setObjectName(u"InpCumuStepLabel")

        self.gridLayout_17.addWidget(self.InpCumuStepLabel, 0, 0, 1, 1)

        self.InpCumuStep = QLineEdit(self.InpCumuBox)
        self.InpCumuStep.setObjectName(u"InpCumuStep")

        self.gridLayout_17.addWidget(self.InpCumuStep, 0, 1, 1, 1)

        self.InpCumuBuffLabel = QLabel(self.InpCumuBox)
        self.InpCumuBuffLabel.setObjectName(u"InpCumuBuffLabel")

        self.gridLayout_17.addWidget(self.InpCumuBuffLabel, 1, 0, 1, 1)

        self.InpCumuBuff = QLineEdit(self.InpCumuBox)
        self.InpCumuBuff.setObjectName(u"InpCumuBuff")

        self.gridLayout_17.addWidget(self.InpCumuBuff, 1, 1, 1, 1)


        self.gridLayout_18.addWidget(self.InpCumuBox, 0, 0, 1, 1)


        self.verticalLayout_31.addWidget(self.InpCumuMainBox)

        self.InpTrajBox = QGroupBox(self.MeasureOptsBox)
        self.InpTrajBox.setObjectName(u"InpTrajBox")
        self.gridLayout_19 = QGridLayout(self.InpTrajBox)
        self.gridLayout_19.setObjectName(u"gridLayout_19")
        self.InpSingleTrajBox = QGroupBox(self.InpTrajBox)
        self.InpSingleTrajBox.setObjectName(u"InpSingleTrajBox")
        self.InpSingleTrajBox.setCheckable(True)
        self.InpSingleTrajBox.setChecked(False)
        self.verticalLayout_20 = QVBoxLayout(self.InpSingleTrajBox)
        self.verticalLayout_20.setObjectName(u"verticalLayout_20")
        self.InpNTrajButton = QPushButton(self.InpSingleTrajBox)
        self.InpNTrajButton.setObjectName(u"InpNTrajButton")

        self.verticalLayout_20.addWidget(self.InpNTrajButton)


        self.gridLayout_19.addWidget(self.InpSingleTrajBox, 1, 0, 1, 1)

        self.InpGlobalTrajBox = QGroupBox(self.InpTrajBox)
        self.InpGlobalTrajBox.setObjectName(u"InpGlobalTrajBox")
        self.InpGlobalTrajBox.setCheckable(True)
        self.InpGlobalTrajBox.setChecked(False)
        self.gridLayout_13 = QGridLayout(self.InpGlobalTrajBox)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.InitTTrajStepLabel = QLabel(self.InpGlobalTrajBox)
        self.InitTTrajStepLabel.setObjectName(u"InitTTrajStepLabel")

        self.gridLayout_13.addWidget(self.InitTTrajStepLabel, 0, 0, 1, 1)

        self.InitTTrajStep = QLineEdit(self.InpGlobalTrajBox)
        self.InitTTrajStep.setObjectName(u"InitTTrajStep")

        self.gridLayout_13.addWidget(self.InitTTrajStep, 0, 1, 1, 1)

        self.InitTTrajBuffLabel = QLabel(self.InpGlobalTrajBox)
        self.InitTTrajBuffLabel.setObjectName(u"InitTTrajBuffLabel")

        self.gridLayout_13.addWidget(self.InitTTrajBuffLabel, 1, 0, 1, 1)

        self.InitTTrajBuff = QLineEdit(self.InpGlobalTrajBox)
        self.InitTTrajBuff.setObjectName(u"InitTTrajBuff")

        self.gridLayout_13.addWidget(self.InitTTrajBuff, 1, 1, 1, 1)


        self.gridLayout_19.addWidget(self.InpGlobalTrajBox, 0, 0, 1, 1)


        self.verticalLayout_31.addWidget(self.InpTrajBox)

        self.InpSpinCorrMainBox = QGroupBox(self.MeasureOptsBox)
        self.InpSpinCorrMainBox.setObjectName(u"InpSpinCorrMainBox")
        self.gridLayout_31 = QGridLayout(self.InpSpinCorrMainBox)
        self.gridLayout_31.setObjectName(u"gridLayout_31")
        self.InpAMSCheck = QCheckBox(self.InpSpinCorrMainBox)
        self.InpAMSCheck.setObjectName(u"InpAMSCheck")

        self.gridLayout_31.addWidget(self.InpAMSCheck, 0, 0, 1, 1)

        self.ImpSqwBox = QGroupBox(self.InpSpinCorrMainBox)
        self.ImpSqwBox.setObjectName(u"ImpSqwBox")
        self.ImpSqwBox.setCheckable(True)
        self.ImpSqwBox.setChecked(False)
        self.gridLayout_47 = QGridLayout(self.ImpSqwBox)
        self.gridLayout_47.setObjectName(u"gridLayout_47")
        self.InpScStepLabel = QLabel(self.ImpSqwBox)
        self.InpScStepLabel.setObjectName(u"InpScStepLabel")

        self.gridLayout_47.addWidget(self.InpScStepLabel, 0, 0, 1, 1)

        self.InpScStep = QLineEdit(self.ImpSqwBox)
        self.InpScStep.setObjectName(u"InpScStep")

        self.gridLayout_47.addWidget(self.InpScStep, 0, 1, 1, 1)

        self.InpScNStepLabel = QLabel(self.ImpSqwBox)
        self.InpScNStepLabel.setObjectName(u"InpScNStepLabel")

        self.gridLayout_47.addWidget(self.InpScNStepLabel, 1, 0, 1, 1)

        self.InpScNStep = QLineEdit(self.ImpSqwBox)
        self.InpScNStep.setObjectName(u"InpScNStep")

        self.gridLayout_47.addWidget(self.InpScNStep, 1, 1, 1, 1)


        self.gridLayout_31.addWidget(self.ImpSqwBox, 1, 0, 1, 1)

        self.InpScCheck = QCheckBox(self.InpSpinCorrMainBox)
        self.InpScCheck.setObjectName(u"InpScCheck")

        self.gridLayout_31.addWidget(self.InpScCheck, 2, 0, 1, 1)

        self.InpSqQpoints = QPushButton(self.InpSpinCorrMainBox)
        self.InpSqQpoints.setObjectName(u"InpSqQpoints")

        self.gridLayout_31.addWidget(self.InpSqQpoints, 3, 0, 1, 1)


        self.verticalLayout_31.addWidget(self.InpSpinCorrMainBox)

        self.TopologyBox = QGroupBox(self.MeasureOptsBox)
        self.TopologyBox.setObjectName(u"TopologyBox")
        self.verticalLayout_21 = QVBoxLayout(self.TopologyBox)
        self.verticalLayout_21.setObjectName(u"verticalLayout_21")
        self.SkxNumBox = QGroupBox(self.TopologyBox)
        self.SkxNumBox.setObjectName(u"SkxNumBox")
        self.SkxNumBox.setCheckable(True)
        self.SkxNumBox.setChecked(False)
        self.gridLayout_26 = QGridLayout(self.SkxNumBox)
        self.gridLayout_26.setObjectName(u"gridLayout_26")
        self.InpSkxBuffLabel = QLabel(self.SkxNumBox)
        self.InpSkxBuffLabel.setObjectName(u"InpSkxBuffLabel")

        self.gridLayout_26.addWidget(self.InpSkxBuffLabel, 1, 0, 1, 1)

        self.InpSkxStepsLabel = QLabel(self.SkxNumBox)
        self.InpSkxStepsLabel.setObjectName(u"InpSkxStepsLabel")

        self.gridLayout_26.addWidget(self.InpSkxStepsLabel, 0, 0, 1, 1)

        self.InpSkxStep = QLineEdit(self.SkxNumBox)
        self.InpSkxStep.setObjectName(u"InpSkxStep")

        self.gridLayout_26.addWidget(self.InpSkxStep, 0, 1, 1, 1)

        self.InitSkxBuff = QLineEdit(self.SkxNumBox)
        self.InitSkxBuff.setObjectName(u"InitSkxBuff")

        self.gridLayout_26.addWidget(self.InitSkxBuff, 1, 1, 1, 1)


        self.verticalLayout_21.addWidget(self.SkxNumBox)


        self.verticalLayout_31.addWidget(self.TopologyBox)

        self.HessianBox = QGroupBox(self.MeasureOptsBox)
        self.HessianBox.setObjectName(u"HessianBox")
        self.HessianBox.setEnabled(True)
        self.verticalLayout_30 = QVBoxLayout(self.HessianBox)
        self.verticalLayout_30.setObjectName(u"verticalLayout_30")
        self.HessInitCheck = QCheckBox(self.HessianBox)
        self.HessInitCheck.setObjectName(u"HessInitCheck")
        self.HessInitCheck.setEnabled(False)

        self.verticalLayout_30.addWidget(self.HessInitCheck)

        self.HessFinCheck = QCheckBox(self.HessianBox)
        self.HessFinCheck.setObjectName(u"HessFinCheck")
        self.HessFinCheck.setEnabled(False)

        self.verticalLayout_30.addWidget(self.HessFinCheck)

        self.HessSPCheck = QCheckBox(self.HessianBox)
        self.HessSPCheck.setObjectName(u"HessSPCheck")
        self.HessSPCheck.setEnabled(False)

        self.verticalLayout_30.addWidget(self.HessSPCheck)


        self.verticalLayout_31.addWidget(self.HessianBox)

        self.verticalSpacer_8 = QSpacerItem(20, 198, QSizePolicy.Policy.Minimum, QSizePolicy.Policy.Expanding)

        self.verticalLayout_31.addItem(self.verticalSpacer_8)


        self.gridLayout_32.addWidget(self.MeasureOptsBox, 0, 0, 1, 1)

        self.InpOptions.addItem(self.InpMeasurablePage, u"Measurables")

        self.horizontalLayout_7.addWidget(self.InpOptions)

        self.InpDockWidget.setWidget(self.InpDockContents)
        VizMainWindow.addDockWidget(Qt.DockWidgetArea.RightDockWidgetArea, self.InpDockWidget)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuSnapshot.menuAction())
        self.menubar.addAction(self.menuViz_Options.menuAction())
        self.menubar.addAction(self.menuCamera_Options.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuVTK_Files.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuPlot_Files.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuFile.addSeparator()
        self.menuVTK_Files.addAction(self.actionCoordinate_File)
        self.menuVTK_Files.addAction(self.actionMagnetization_File)
        self.menuVTK_Files.addAction(self.actionEnergy_File)
        self.menuVTK_Files.addSeparator()
        self.menuVTK_Files.addAction(self.actionStruct_File)
        self.menuVTK_Files.addAction(self.actionDM_File)
        self.menuVTK_Files.addSeparator()
        self.menuVTK_Files.addAction(self.actionKMC_File)
        self.menuPlot_Files.addAction(self.actionYaml_File)
        self.menuPlot_Files.addSeparator()
        self.menuPlot_Files.addAction(self.actionS_q_w_File)
        self.menuPlot_Files.addAction(self.actionAMS_File)
        self.menuPlot_Files.addAction(self.actionAverages_File)
        self.menuPlot_Files.addAction(self.actionTrajectory_File)
        self.menuPlot_Files.addAction(self.actionTot_Energy_File)
        self.menuSnapshot.addAction(self.actionTake_Snapshot)
        self.menuSnapshot.addSeparator()
        self.menuSnapshot.addAction(self.actionSave_png)
        self.menuSnapshot.addAction(self.actionSave_pov)
        self.menuViz_Options.addAction(self.menuMagnetisation_Opts.menuAction())
        self.menuViz_Options.addAction(self.menuNeighbour_Opts.menuAction())
        self.menuViz_Options.addAction(self.menuEnergy_Opts.menuAction())
        self.menuViz_Options.addSeparator()
        self.menuViz_Options.addAction(self.menuColormap_Options.menuAction())
        self.menuViz_Options.addSeparator()
        self.menuViz_Options.addAction(self.actionScalar_Bar)
        self.menuViz_Options.addAction(self.actionAxes)
        self.menuViz_Options.addAction(self.actionDisplay_timer)
        self.menuMagnetisation_Opts.addAction(self.menuMagnetisation_Density.menuAction())
        self.menuMagnetisation_Opts.addSeparator()
        self.menuMagnetisation_Opts.addAction(self.menuAtomic_Spins.menuAction())
        self.menuMagnetisation_Opts.addSeparator()
        self.menuMagnetisation_Opts.addAction(self.actionMagnetisation_direction)
        self.menuMagnetisation_Opts.addAction(self.actionDisplay_Contours)
        self.menuMagnetisation_Density.addAction(self.actionDisplayMagDens)
        self.menuMagnetisation_Density.addSeparator()
        self.menuMagnetisation_Density.addAction(self.actionX_ProjMagDens)
        self.menuMagnetisation_Density.addAction(self.actionY_ProjMagDens)
        self.menuMagnetisation_Density.addAction(self.actionZ_ProjMagDens)
        self.menuAtomic_Spins.addAction(self.actionDisplayAtomicSpins)
        self.menuAtomic_Spins.addSeparator()
        self.menuAtomic_Spins.addAction(self.actionX_ProjAtomicSpins)
        self.menuAtomic_Spins.addAction(self.actionY_ProjAtomicSpins)
        self.menuAtomic_Spins.addAction(self.actionZ_ProjAtomicSpins)
        self.menuAtomic_Spins.addSeparator()
        self.menuAtomic_Spins.addAction(self.actionArrows)
        self.menuAtomic_Spins.addAction(self.actionCones)
        self.menuAtomic_Spins.addAction(self.actionCubes)
        self.menuAtomic_Spins.addAction(self.actionSpheres)
        self.menuEnergy_Opts.addAction(self.actionTotal_Energy)
        self.menuEnergy_Opts.addAction(self.actionExchange)
        self.menuEnergy_Opts.addAction(self.actionDMI_Energy)
        self.menuEnergy_Opts.addAction(self.actionAnisotropy_Energy)
        self.menuEnergy_Opts.addAction(self.actionBiquadratic_Energy)
        self.menuEnergy_Opts.addAction(self.actionBiquadratic_DM_Energy)
        self.menuEnergy_Opts.addAction(self.actionPseudo_Dipolar_Energy)
        self.menuEnergy_Opts.addAction(self.actionZeeman_Energy)
        self.menuEnergy_Opts.addAction(self.actionDipolar_Energy)
        self.menuNeighbour_Opts.addAction(self.actionDisplay_Atoms)
        self.menuNeighbour_Opts.addAction(self.actionDisplay_Neighbour_cloud)
        self.menuColormap_Options.addAction(self.actionCoolwarm)
        self.menuColormap_Options.addAction(self.actionBlack_Body)
        self.menuColormap_Options.addAction(self.actionRdGy)
        self.menuColormap_Options.addAction(self.actionSpectral)
        self.menuCamera_Options.addAction(self.actionReset_Camera)
        self.menuCamera_Options.addAction(self.actionPrallel_Projection)

        self.retranslateUi(VizMainWindow)
        self.actionExit.triggered.connect(VizMainWindow.close)

        self.ModeSelector.setCurrentIndex(0)
        self.PlotStacked.setCurrentIndex(0)
        self.VizToolBox.setCurrentIndex(0)
        self.VizToolBox.layout().setSpacing(6)
        self.MatToolBox.setCurrentIndex(4)
        self.InpOptions.setCurrentIndex(0)


        QMetaObject.connectSlotsByName(VizMainWindow)
    # setupUi

    def retranslateUi(self, VizMainWindow):
        VizMainWindow.setWindowTitle(QCoreApplication.translate("VizMainWindow", u"UppASD GUI", None))
#if QT_CONFIG(tooltip)
        VizMainWindow.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        VizMainWindow.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Visualizer GUI for UppASD dynamical data", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        VizMainWindow.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Visualizer GUI for UppASD dynamical data", None))
#endif // QT_CONFIG(whatsthis)
        self.actionMoments_File.setText(QCoreApplication.translate("VizMainWindow", u"Moments File", None))
        self.actionMagnetization_File.setText(QCoreApplication.translate("VizMainWindow", u"Magnetic Configuration", None))
#if QT_CONFIG(tooltip)
        self.actionMagnetization_File.setToolTip(QCoreApplication.translate("VizMainWindow", u"Read a magnetic configuration file (restart/moment)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionMagnetization_File.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Read a magnetic configuration file (restart/moment)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionMagnetization_File.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Read a magnetic configuration file (restart/moment)", None))
#endif // QT_CONFIG(whatsthis)
        self.actionExit.setText(QCoreApplication.translate("VizMainWindow", u"Exit", None))
#if QT_CONFIG(statustip)
        self.actionExit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Exit the UppASD Visualizer", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionExit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Exit the UppASD Visualizer", None))
#endif // QT_CONFIG(whatsthis)
        self.actionSave_png.setText(QCoreApplication.translate("VizMainWindow", u"Save '.png'", None))
        self.actionSave_pov.setText(QCoreApplication.translate("VizMainWindow", u"Save '.pov'", None))
        self.actionDisplayMagDens.setText(QCoreApplication.translate("VizMainWindow", u"Display", None))
#if QT_CONFIG(tooltip)
        self.actionDisplayMagDens.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the magnetisation density", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionDisplayMagDens.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the magnetisation density", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionDisplayMagDens.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the magnetisation density", None))
#endif // QT_CONFIG(whatsthis)
        self.actionX_ProjMagDens.setText(QCoreApplication.translate("VizMainWindow", u"X Proj.", None))
        self.actionY_ProjMagDens.setText(QCoreApplication.translate("VizMainWindow", u"Y Proj.", None))
        self.actionZ_ProjMagDens.setText(QCoreApplication.translate("VizMainWindow", u"Z Proj.", None))
        self.actionDisplayAtomicSpins.setText(QCoreApplication.translate("VizMainWindow", u"Display", None))
        self.actionX_ProjAtomicSpins.setText(QCoreApplication.translate("VizMainWindow", u"X Proj.", None))
        self.actionY_ProjAtomicSpins.setText(QCoreApplication.translate("VizMainWindow", u"Y Proj.", None))
        self.actionZ_ProjAtomicSpins.setText(QCoreApplication.translate("VizMainWindow", u"Z Proj.", None))
        self.actionArrows.setText(QCoreApplication.translate("VizMainWindow", u"Arrows", None))
        self.actionCones.setText(QCoreApplication.translate("VizMainWindow", u"Cones", None))
        self.actionCubes.setText(QCoreApplication.translate("VizMainWindow", u"Cubes", None))
        self.actionSpheres.setText(QCoreApplication.translate("VizMainWindow", u"Spheres", None))
        self.actionMagnetisation_direction.setText(QCoreApplication.translate("VizMainWindow", u"Display Moments", None))
        self.actionDisplay_Contours.setText(QCoreApplication.translate("VizMainWindow", u"Display Contours", None))
        self.actionExchange.setText(QCoreApplication.translate("VizMainWindow", u"Exchange Energy", None))
        self.actionDMI_Energy.setText(QCoreApplication.translate("VizMainWindow", u"DMI Energy", None))
        self.actionAnisotropy_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Anisotropy Energy", None))
        self.actionBiquadratic_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic Energy", None))
        self.actionBiquadratic_DM_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic DM Energy", None))
        self.actionPseudo_Dipolar_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Pseudo Dipolar Energy", None))
        self.actionZeeman_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Zeeman Energy", None))
        self.actionDipolar_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Dipolar Energy", None))
        self.actionTotal_Energy.setText(QCoreApplication.translate("VizMainWindow", u"Total Energy", None))
        self.actionDisplay_Atoms.setText(QCoreApplication.translate("VizMainWindow", u"Display Atoms", None))
        self.actionDisplay_Neighbour_cloud.setText(QCoreApplication.translate("VizMainWindow", u"Display Neighbour cloud", None))
        self.actionCoolwarm.setText(QCoreApplication.translate("VizMainWindow", u"Coolwarm", None))
        self.actionBlack_Body.setText(QCoreApplication.translate("VizMainWindow", u"Black Body", None))
        self.actionRdGy.setText(QCoreApplication.translate("VizMainWindow", u"RdGy", None))
        self.actionSpectral.setText(QCoreApplication.translate("VizMainWindow", u"Spectral", None))
        self.actionScalar_Bar.setText(QCoreApplication.translate("VizMainWindow", u"Scalar Bar", None))
        self.actionAxes.setText(QCoreApplication.translate("VizMainWindow", u"Axes", None))
        self.actionDisplay_timer.setText(QCoreApplication.translate("VizMainWindow", u"Display timer", None))
        self.actionReset_Camera.setText(QCoreApplication.translate("VizMainWindow", u"Reset Camera", None))
        self.actionPrallel_Projection.setText(QCoreApplication.translate("VizMainWindow", u"Prallel Projection", None))
        self.actionTake_Snapshot.setText(QCoreApplication.translate("VizMainWindow", u"Take Snapshot", None))
#if QT_CONFIG(tooltip)
        self.actionTake_Snapshot.setToolTip(QCoreApplication.translate("VizMainWindow", u"Take a snapshot of the current rendering", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionTake_Snapshot.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Take a snapshot of the current rendering", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionTake_Snapshot.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Take a snapshot of the current rendering", None))
#endif // QT_CONFIG(whatsthis)
        self.actionRestart.setText(QCoreApplication.translate("VizMainWindow", u"Restart", None))
#if QT_CONFIG(statustip)
        self.actionRestart.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the mode to read the restart file for a snapshot rendering", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionRestart.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the mode to read the restart file for a snapshot rendering", None))
#endif // QT_CONFIG(whatsthis)
        self.actionMoments.setText(QCoreApplication.translate("VizMainWindow", u"Moments", None))
#if QT_CONFIG(statustip)
        self.actionMoments.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the mode to read the moments file for a movie rendering", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionMoments.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the mode to read the moments file for a movie rendering", None))
#endif // QT_CONFIG(whatsthis)
        self.actionNeighbours.setText(QCoreApplication.translate("VizMainWindow", u"Neighbours", None))
#if QT_CONFIG(statustip)
        self.actionNeighbours.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the mode to read the structfile1 file to render the neighbour clouds", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionNeighbours.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the mode to read the structfile1 file to render the neighbour clouds", None))
#endif // QT_CONFIG(whatsthis)
        self.actionPlay.setText(QCoreApplication.translate("VizMainWindow", u"Play", None))
#if QT_CONFIG(statustip)
        self.actionPlay.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Render the moments file in a video", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.actionPlay.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Render the moments file in a video", None))
#endif // QT_CONFIG(whatsthis)
        self.actionEnergy.setText(QCoreApplication.translate("VizMainWindow", u"Energy", None))
#if QT_CONFIG(tooltip)
        self.actionEnergy.setToolTip(QCoreApplication.translate("VizMainWindow", u"Energy", None))
#endif // QT_CONFIG(tooltip)
        self.actionEnergy_File.setText(QCoreApplication.translate("VizMainWindow", u"Energy File", None))
        self.actionDM_Neigh.setText(QCoreApplication.translate("VizMainWindow", u"DM Neigh", None))
#if QT_CONFIG(tooltip)
        self.actionDM_Neigh.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the DM vectors for the current atom", None))
#endif // QT_CONFIG(tooltip)
        self.actionS_q_w.setText(QCoreApplication.translate("VizMainWindow", u"Correlations", None))
        self.actionS_q_w.setIconText(QCoreApplication.translate("VizMainWindow", u"Correlations", None))
#if QT_CONFIG(tooltip)
        self.actionS_q_w.setToolTip(QCoreApplication.translate("VizMainWindow", u"Dynamical Structure Factor", None))
#endif // QT_CONFIG(tooltip)
        self.actionTrajectory.setText(QCoreApplication.translate("VizMainWindow", u"Trajectory", None))
#if QT_CONFIG(tooltip)
        self.actionTrajectory.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display single atom trajectory", None))
#endif // QT_CONFIG(tooltip)
        self.actionAverages.setText(QCoreApplication.translate("VizMainWindow", u"Averages", None))
#if QT_CONFIG(tooltip)
        self.actionAverages.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display averages for single calculation", None))
#endif // QT_CONFIG(tooltip)
        self.actionCoordinate_File.setText(QCoreApplication.translate("VizMainWindow", u"Coordinate File", None))
        self.actionStruct_File.setText(QCoreApplication.translate("VizMainWindow", u"Struct File", None))
        self.actionDM_File.setText(QCoreApplication.translate("VizMainWindow", u"DM File", None))
        self.actionKMC_File.setText(QCoreApplication.translate("VizMainWindow", u"KMC File", None))
        self.actionYaml_File.setText(QCoreApplication.translate("VizMainWindow", u"Yaml File", None))
        self.actionS_q_w_File.setText(QCoreApplication.translate("VizMainWindow", u"S(q,w) File", None))
        self.actionAMS_File.setText(QCoreApplication.translate("VizMainWindow", u"AMS File", None))
        self.actionAverages_File.setText(QCoreApplication.translate("VizMainWindow", u"Averages File", None))
        self.actionTrajectory_File.setText(QCoreApplication.translate("VizMainWindow", u"Trajectory File", None))
        self.actionTot_Energy_File.setText(QCoreApplication.translate("VizMainWindow", u"Tot. Energy File", None))
        self.ModeSelector.setTabText(self.ModeSelector.indexOf(self.ASD_VTK), QCoreApplication.translate("VizMainWindow", u"VTK", None))
        self.ModeSelector.setTabText(self.ModeSelector.indexOf(self.ASD_PY), QCoreApplication.translate("VizMainWindow", u"Matplot", None))
        self.InpGeometryBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Geometry Information", None))
        self.InpUnitCellBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Unit cell", None))
        self.InpNcellLabel.setText(QCoreApplication.translate("VizMainWindow", u"Ncell", None))
#if QT_CONFIG(tooltip)
        self.InpPBCCheckC1.setToolTip(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C1 (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPBCCheckC1.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C1 (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPBCCheckC1.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C1 (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpPBCCheckC1.setText(QCoreApplication.translate("VizMainWindow", u"Along C1", None))
#if QT_CONFIG(tooltip)
        self.InpPBCCheckC2.setToolTip(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C2 (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPBCCheckC2.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C2 (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPBCCheckC2.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C2 (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpPBCCheckC2.setText(QCoreApplication.translate("VizMainWindow", u"Along C2", None))
#if QT_CONFIG(tooltip)
        self.InpPBCCheckC3.setToolTip(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C3 (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPBCCheckC3.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C3 (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPBCCheckC3.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Periodic bounday conditions along C3 (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpPBCCheckC3.setText(QCoreApplication.translate("VizMainWindow", u"Along C3", None))
#if QT_CONFIG(tooltip)
        self.InpN1.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C1", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpN1.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C1", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpN1.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C1", None))
#endif // QT_CONFIG(whatsthis)
        self.InpN1.setInputMask("")
        self.InpN1.setText("")
        self.InpN1.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1", None))
#if QT_CONFIG(tooltip)
        self.InpN2.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C2", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpN2.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C2", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpN2.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C2", None))
#endif // QT_CONFIG(whatsthis)
        self.InpN2.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1", None))
#if QT_CONFIG(tooltip)
        self.InpN3.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C3", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpN3.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C3", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpN3.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of repetitions of C3", None))
#endif // QT_CONFIG(whatsthis)
        self.InpN3.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1", None))
        self.InpLineEditC1_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1.000", None))
        self.InpLineEditC1_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.000", None))
        self.InpLineEditC1_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.000", None))
        self.InpLineEditC2_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.000", None))
        self.InpLineEditC2_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1.000", None))
        self.InpLineEditC2_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.000", None))
        self.InpLineEditC3_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.000", None))
        self.InpLineEditC3_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.000", None))
        self.InpLineEditC3_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1.000", None))
#if QT_CONFIG(tooltip)
        self.InpLineEditAlat.setToolTip(QCoreApplication.translate("VizMainWindow", u"Lattice constant of the system (Not needed for all types of simulations)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpLineEditAlat.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Lattice constant of the system (Not needed for all types of simulations)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpLineEditAlat.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Lattice constant of the system (Not needed for all types of simulations)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpLineEditAlat.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"3e-10", None))
        self.InpC1Label.setText(QCoreApplication.translate("VizMainWindow", u"C1", None))
        self.InpC2Label.setText(QCoreApplication.translate("VizMainWindow", u"C2", None))
        self.InpC3Label.setText(QCoreApplication.translate("VizMainWindow", u"C3", None))
        self.Inp_m_label.setText(QCoreApplication.translate("VizMainWindow", u"m", None))
        self.InpPBCLabel.setText(QCoreApplication.translate("VizMainWindow", u"PBC", None))
        self.Inp_alat_label.setText(QCoreApplication.translate("VizMainWindow", u"Lattice constant", None))
#if QT_CONFIG(tooltip)
        self.InpTemplateBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Creation of input files via templates", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpTemplateBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Creation of input files via templates", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTemplateBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Creation of input files via templates", None))
#endif // QT_CONFIG(whatsthis)
        self.InpTemplateBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Structure templates", None))
#if QT_CONFIG(tooltip)
        self.InpTemplateBCCButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create body centered cubic system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpTemplateBCCButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create body centered cubic system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTemplateBCCButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create body centered cubic system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpTemplateBCCButton.setText("")
#if QT_CONFIG(tooltip)
        self.InpTemplateSCButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create simple cubic system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpTemplateSCButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create simple cubic system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTemplateSCButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create simple cubic system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpTemplateSCButton.setText("")
#if QT_CONFIG(tooltip)
        self.InpTemplateFCCButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create face centered cubic system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpTemplateFCCButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create face centered cubic system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTemplateFCCButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create face centered cubic system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpTemplateFCCButton.setText("")
#if QT_CONFIG(tooltip)
        self.InpTemplateBCC2TypesButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create multi-atom body centered cubic system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpTemplateBCC2TypesButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create multi-atom body centered cubic system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTemplateBCC2TypesButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create multi-atom body centered cubic system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpTemplateBCC2TypesButton.setText("")
#if QT_CONFIG(tooltip)
        self.InpTemplateHCPButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create hexagonal compact packing system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpTemplateHCPButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create hexagonal compact packing system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTemplateHCPButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create hexagonal compact packing system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpTemplateHCPButton.setText("")
        self.InpBasisBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Supplementary input files", None))
        self.InpMomBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Magnetic moments", None))
#if QT_CONFIG(tooltip)
        self.InpMomButtonSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select momfile from system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMomButtonSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select momfile from system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMomButtonSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select momfile from system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMomButtonSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select momfile", None))
#if QT_CONFIG(tooltip)
        self.InpMomButtonCreate.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create momfile manually", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMomButtonCreate.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create momfile manually", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMomButtonCreate.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create momfile manually", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMomButtonCreate.setText(QCoreApplication.translate("VizMainWindow", u"Create momfile", None))
        self.InpPosBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Position file", None))
#if QT_CONFIG(tooltip)
        self.InpPosButtonSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select posfile from system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPosButtonSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select posfile from system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPosButtonSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select posfile from system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpPosButtonSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select posfile", None))
#if QT_CONFIG(tooltip)
        self.InpPosButtonCreate.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create posfile manually", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPosButtonCreate.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create posfile manually", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPosButtonCreate.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create posfile manually", None))
#endif // QT_CONFIG(whatsthis)
        self.InpPosButtonCreate.setText(QCoreApplication.translate("VizMainWindow", u"Create posfile", None))
#if QT_CONFIG(tooltip)
        self.InpImportBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Import input files from other codes", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpImportBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Import input files from other codes", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpImportBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Import input files from other codes", None))
#endif // QT_CONFIG(whatsthis)
        self.InpImportBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Import system", None))
#if QT_CONFIG(tooltip)
        self.InpImportRSPTButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Import system from RSPt", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpImportRSPTButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Import system from RSPt", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpImportRSPTButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Import system from RSPt", None))
#endif // QT_CONFIG(whatsthis)
        self.InpImportRSPTButton.setText(QCoreApplication.translate("VizMainWindow", u"RSPt", None))
#if QT_CONFIG(tooltip)
        self.InpImportRSLMTOButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Import system from RSLMTO", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpImportRSLMTOButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Import system from RSLMTO", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpImportRSLMTOButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Import system from RSLMTO", None))
#endif // QT_CONFIG(whatsthis)
        self.InpImportRSLMTOButton.setText(QCoreApplication.translate("VizMainWindow", u"RS-LMTO", None))
#if QT_CONFIG(tooltip)
        self.InpImportCIFButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Import system from .cif file", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpImportCIFButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Import system from .cif file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpImportCIFButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Import system from .cif file", None))
#endif // QT_CONFIG(whatsthis)
        self.InpImportCIFButton.setText(QCoreApplication.translate("VizMainWindow", u"CIF file", None))
#if QT_CONFIG(tooltip)
        self.InpImportSPRKKRButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Import system from SPRKKR", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpImportSPRKKRButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Import system from SPRKKR", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpImportSPRKKRButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Import system from SPRKKR", None))
#endif // QT_CONFIG(whatsthis)
        self.InpImportSPRKKRButton.setText(QCoreApplication.translate("VizMainWindow", u"SPRKKR", None))
        self.GeneralGridBox.setTitle(QCoreApplication.translate("VizMainWindow", u"General Sim Info", None))
        self.InpSimIDLabel.setText(QCoreApplication.translate("VizMainWindow", u"SimID", None))
#if QT_CONFIG(tooltip)
        self.InpLineEditSimid.setToolTip(QCoreApplication.translate("VizMainWindow", u"Name of the simulation for output files", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpLineEditSimid.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Name of the simulation for output files", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpLineEditSimid.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Name of the simulation for output files", None))
#endif // QT_CONFIG(whatsthis)
        self.InpLineEditSimid.setText("")
        self.InpLineEditSimid.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"_UppASD_", None))
#if QT_CONFIG(tooltip)
        self.InpMeasureBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options for the mode of the measurement phase", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for the mode of the measurement phase", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for the mode of the measurement phase", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Measurement Phase", None))
#if QT_CONFIG(tooltip)
        self.InpMeasureLLG.setToolTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses the LLG", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureLLG.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses the LLG", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureLLG.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses the LLG", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureLLG.setText(QCoreApplication.translate("VizMainWindow", u"LLG", None))
        self.InpMeasureSelectMCBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Monte Carlo", None))
#if QT_CONFIG(tooltip)
        self.InpMeasureMCMet.setToolTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses Monte Carlo with the Metropolis algorithm", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureMCMet.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses Monte Carlo with the Metropolis algorithm", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureMCMet.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses Monte Carlo with the Metropolis algorithm", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureMCMet.setText(QCoreApplication.translate("VizMainWindow", u"Metropolis", None))
#if QT_CONFIG(tooltip)
        self.InpMeasureMCHeat.setToolTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses Monte Carlo with the Heat Bath algorithm", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureMCHeat.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses Monte Carlo with the Heat Bath algorithm", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureMCHeat.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses Monte Carlo with the Heat Bath algorithm", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureMCHeat.setText(QCoreApplication.translate("VizMainWindow", u"Heat Bath", None))
#if QT_CONFIG(tooltip)
        self.InpMeasureGNEB.setToolTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses the velocity projector optimization method", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureGNEB.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses the velocity projector optimization method", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureGNEB.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Measurement phase uses the velocity projector optimization method", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureGNEB.setText(QCoreApplication.translate("VizMainWindow", u"GNEB", None))
#if QT_CONFIG(tooltip)
        self.InpLLGMeasureBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Spin dynamics measurement mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpLLGMeasureBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Spin dynamics measurement mode", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpLLGMeasureBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Spin dynamics measurement mode", None))
#endif // QT_CONFIG(whatsthis)
        self.InpLLGMeasureBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin Dynamics", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGAlghLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Algorithm to solve the LLG. (1: Midpoint, 2: Heun-1; 3: Heun-2, 4: Heun Predictor corrector, 5: Depondt)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGAlghLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Algorithm to solve the LLG. (1: Midpoint, 2: Heun-1; 3: Heun-2, 4: Heun Predictor corrector, 5: Depondt)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGAlghLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Algorithm to solve the LLG. (1: Midpoint, 2: Heun-1; 3: Heun-2, 4: Heun Predictor corrector, 5: Depondt)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGAlghLabel.setText(QCoreApplication.translate("VizMainWindow", u"Algorithm", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGSteps.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGSteps.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGSteps.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGSteps.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1000", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGTempLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the SD calculation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGTempLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the SD calculation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGTempLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Temperature of the SD calculation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGTempLabel.setText(QCoreApplication.translate("VizMainWindow", u"Temperature", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGDamp.setToolTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the scalar Gilbert damping", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGDamp.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the scalar Gilbert damping", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGDamp.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Magnitude of the scalar Gilbert damping", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGDamp.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.01", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGAlgh.setToolTip(QCoreApplication.translate("VizMainWindow", u"Algorithm to solve the LLG. (1: Midpoint, 2: Heun-1; 3: Heun-2, 4: Heun Predictor corrector, 5: Depondt)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGAlgh.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Algorithm to solve the LLG. (1: Midpoint, 2: Heun-1; 3: Heun-2, 4: Heun Predictor corrector, 5: Depondt)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGAlgh.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Algorithm to solve the LLG. (1: Midpoint, 2: Heun-1; 3: Heun-2, 4: Heun Predictor corrector, 5: Depondt)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.InpASDLLGDampLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the scalar Gilbert damping", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGDampLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the scalar Gilbert damping", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGDampLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Magnitude of the scalar Gilbert damping", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGDampLabel.setText(QCoreApplication.translate("VizMainWindow", u"Damping", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGStepsLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGStepsLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGStepsLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGStepsLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGTemp.setToolTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the SD calculation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGTemp.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the SD calculation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGTemp.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Temperature of the SD calculation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGTemp.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGDTLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Integration time step. WARNING: do not see to high or the solver might be unstable", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGDTLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Integration time step. WARNING: do not see to high or the solver might be unstable", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGDTLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Integration time step. WARNING: do not see to high or the solver might be unstable", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGDTLabel.setText(QCoreApplication.translate("VizMainWindow", u"Time step [s]", None))
#if QT_CONFIG(tooltip)
        self.InpASDLLGDT.setToolTip(QCoreApplication.translate("VizMainWindow", u"Integration time step. WARNING: do not see to high or the solver might be unstable", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpASDLLGDT.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Integration time step. WARNING: do not see to high or the solver might be unstable", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpASDLLGDT.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Integration time step. WARNING: do not see to high or the solver might be unstable", None))
#endif // QT_CONFIG(whatsthis)
        self.InpASDLLGDT.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1e-16", None))
#if QT_CONFIG(tooltip)
        self.InpMeasureMCBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Monte Carlo measurement mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureMCBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Monte Carlo measurement mode", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureMCBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Monte Carlo measurement mode", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureMCBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Monte Carlo", None))
#if QT_CONFIG(tooltip)
        self.InpMCTempLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the MC calculation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMCTempLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the MC calculation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMCTempLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Temperature of the MC calculation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMCTempLabel.setText(QCoreApplication.translate("VizMainWindow", u"Temperature", None))
#if QT_CONFIG(tooltip)
        self.InpMCTemp.setToolTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the MC calculation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMCTemp.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Temperature of the MC calculation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMCTemp.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Temperature of the MC calculation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMCTemp.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
#if QT_CONFIG(tooltip)
        self.InpMCStepsLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMCStepsLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMCStepsLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMCStepsLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
#if QT_CONFIG(tooltip)
        self.InpMCSteps.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMCSteps.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMCSteps.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of steps of the simulation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMCSteps.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1000", None))
        self.InpHamiltonianFileGen.setTitle(QCoreApplication.translate("VizMainWindow", u" Hamiltonian file generation ", None))
        self.InpJfileBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Exchange file", None))
#if QT_CONFIG(tooltip)
        self.InpJfileButtonSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select jfile from system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpJfileButtonSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select jfile from system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpJfileButtonSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select jfile from system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpJfileButtonSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select jfile", None))
#if QT_CONFIG(tooltip)
        self.InpJfileButtonCreate.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create jfile manually", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpJfileButtonCreate.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create jfile manually", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpJfileButtonCreate.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create jfile manually", None))
#endif // QT_CONFIG(whatsthis)
        self.InpJfileButtonCreate.setText(QCoreApplication.translate("VizMainWindow", u"Create jfile", None))
        self.InpDMBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Dzyaloshinskii-Moriya file", None))
#if QT_CONFIG(tooltip)
        self.InpDMButtonSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select DM-file from system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDMButtonSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select DM-file from system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDMButtonSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select DM-file from system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDMButtonSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select DM-file", None))
#if QT_CONFIG(tooltip)
        self.InpDMButtonCreate.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create DM-file manually", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDMButtonCreate.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create DM-file manually", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDMButtonCreate.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create DM-file manually", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDMButtonCreate.setText(QCoreApplication.translate("VizMainWindow", u"Create DM-file", None))
        self.InpKfileBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Anisotropy file", None))
#if QT_CONFIG(tooltip)
        self.InpKfileButtonSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select k-file from system", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpKfileButtonSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select k-file from system", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpKfileButtonSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select k-file from system", None))
#endif // QT_CONFIG(whatsthis)
        self.InpKfileButtonSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select k-file", None))
#if QT_CONFIG(tooltip)
        self.InpKfileButtonCreate.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create k-file manually", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpKfileButtonCreate.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create k-file manually", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpKfileButtonCreate.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create k-file manually", None))
#endif // QT_CONFIG(whatsthis)
        self.InpKfileButtonCreate.setText(QCoreApplication.translate("VizMainWindow", u"Create k-file", None))
        self.InpPsDipCheckBox.setTitle(QCoreApplication.translate("VizMainWindow", u" Pseudo-Dipolar ", None))
        self.InpPseudDipSelect.setText(QCoreApplication.translate("VizMainWindow", u" Select file ", None))
        self.InpBiQCheckBox.setTitle(QCoreApplication.translate("VizMainWindow", u" Biquadratic ", None))
        self.InpBiQSelect.setText(QCoreApplication.translate("VizMainWindow", u" Select file ", None))
        self.InpBiQDMCheckBox.setTitle(QCoreApplication.translate("VizMainWindow", u" Biquadratic-DM ", None))
        self.InpBiQDMSelect.setText(QCoreApplication.translate("VizMainWindow", u" Select file ", None))
        self.InpBextMainBox.setTitle(QCoreApplication.translate("VizMainWindow", u"External Field", None))
#if QT_CONFIG(tooltip)
        self.InpBextMeasureBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"External static magnetic field in the measurement phase (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpBextMeasureBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"External static magnetic field in the measurement phase (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpBextMeasureBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"External static magnetic field in the measurement phase (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpBextMeasureBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Measurement Phase", None))
        self.InpBextMeasure_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpBextMeasure_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpBextMeasure_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpMagnonQuickBox.setTitle(QCoreApplication.translate("VizMainWindow", u" Quick Settings ", None))
        self.InpMagnonQuickButton.setText(QCoreApplication.translate("VizMainWindow", u" Linear Spin Wave Spectra ", None))
        self.InpFInalizeBox.setTitle("")
#if QT_CONFIG(tooltip)
        self.InpRunSimButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Button to run simulation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpRunSimButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Button to run simulation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpRunSimButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Button to run simulation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpRunSimButton.setText(QCoreApplication.translate("VizMainWindow", u"Run Simulation!", None))
#if QT_CONFIG(tooltip)
        self.InpDoneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Setup of the inpsd.dat done write file", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDoneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Setup of the inpsd.dat done write file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDoneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Setup of the inpsd.dat done write file", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDoneButton.setText(QCoreApplication.translate("VizMainWindow", u"Generate inpsd.dat", None))
#if QT_CONFIG(tooltip)
        self.InpCancelButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Reset values to default", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpCancelButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Reset values to default", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpCancelButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Reset values to default", None))
#endif // QT_CONFIG(whatsthis)
        self.InpCancelButton.setText(QCoreApplication.translate("VizMainWindow", u"Reset", None))
        self.ModeSelector.setTabText(self.ModeSelector.indexOf(self.ASDInput), QCoreApplication.translate("VizMainWindow", u"ASD Input", None))
        self.ModeSelector.setTabText(self.ModeSelector.indexOf(self.ASD_Interactive), QCoreApplication.translate("VizMainWindow", u"InteractiveASD", None))
        self.menuFile.setTitle(QCoreApplication.translate("VizMainWindow", u"File", None))
        self.menuVTK_Files.setTitle(QCoreApplication.translate("VizMainWindow", u"VTK Files", None))
        self.menuPlot_Files.setTitle(QCoreApplication.translate("VizMainWindow", u"Plot Files", None))
        self.menuSnapshot.setTitle(QCoreApplication.translate("VizMainWindow", u"Snapshot", None))
        self.menuViz_Options.setTitle(QCoreApplication.translate("VizMainWindow", u"Viz. Options", None))
        self.menuMagnetisation_Opts.setTitle(QCoreApplication.translate("VizMainWindow", u"Magnetisation Opts.", None))
        self.menuMagnetisation_Density.setTitle(QCoreApplication.translate("VizMainWindow", u"Magnetisation Density", None))
        self.menuAtomic_Spins.setTitle(QCoreApplication.translate("VizMainWindow", u"Atomic Spins", None))
        self.menuEnergy_Opts.setTitle(QCoreApplication.translate("VizMainWindow", u"Energy Opts.", None))
        self.menuNeighbour_Opts.setTitle(QCoreApplication.translate("VizMainWindow", u"Neighbour Opts.", None))
        self.menuColormap_Options.setTitle(QCoreApplication.translate("VizMainWindow", u"Colormap Options", None))
        self.menuCamera_Options.setTitle(QCoreApplication.translate("VizMainWindow", u"Camera Options", None))
        self.OptionDock.setWindowTitle(QCoreApplication.translate("VizMainWindow", u"Options", None))
        self.MagMainGroup.setTitle("")
#if QT_CONFIG(tooltip)
        self.DensBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Selection of the magnetisation density", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.DensBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Selection of the magnetisation density", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.DensBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Selection of the magnetisation density", None))
#endif // QT_CONFIG(whatsthis)
        self.DensBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Mag. Density", None))
#if QT_CONFIG(tooltip)
        self.DensX.setToolTip(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its x component", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.DensX.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its x component", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.DensX.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its x component", None))
#endif // QT_CONFIG(whatsthis)
        self.DensX.setText(QCoreApplication.translate("VizMainWindow", u"X Proj.", None))
#if QT_CONFIG(tooltip)
        self.DensY.setToolTip(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its y component", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.DensY.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its y component", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.DensY.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its y component", None))
#endif // QT_CONFIG(whatsthis)
        self.DensY.setText(QCoreApplication.translate("VizMainWindow", u"Y Proj", None))
#if QT_CONFIG(tooltip)
        self.DensZ.setToolTip(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its z component", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.DensZ.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its z component", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.DensZ.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Color the magnetization density by its z component", None))
#endif // QT_CONFIG(whatsthis)
        self.DensZ.setText(QCoreApplication.translate("VizMainWindow", u"Z Proj.", None))
#if QT_CONFIG(tooltip)
        self.SpinsBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options for the visualization of the atomic spins", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinsBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for the visualization of the atomic spins", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinsBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for the visualization of the atomic spins", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinsBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spins", None))
#if QT_CONFIG(tooltip)
        self.SpinX.setToolTip(QCoreApplication.translate("VizMainWindow", u"Color the spins by its x component", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinX.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Color the spins by its x component", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinX.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Color the spins by its x component", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinX.setText(QCoreApplication.translate("VizMainWindow", u"X Proj.", None))
#if QT_CONFIG(tooltip)
        self.SpinY.setToolTip(QCoreApplication.translate("VizMainWindow", u"Color the spins by its y component", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinY.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Color the spins by its y component", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinY.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Color the spins by its y component", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinY.setText(QCoreApplication.translate("VizMainWindow", u"Y Proj", None))
#if QT_CONFIG(tooltip)
        self.SpinZ.setToolTip(QCoreApplication.translate("VizMainWindow", u"Color the spins by its z component", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinZ.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Color the spins by its z component", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinZ.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Color the spins by its z component", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinZ.setText(QCoreApplication.translate("VizMainWindow", u"Z Proj.", None))
        self.SpinSliderLabel.setText(QCoreApplication.translate("VizMainWindow", u"Spin Size", None))
#if QT_CONFIG(tooltip)
        self.SpinSize.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale the size of the spins", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinSize.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale the size of the spins", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinSize.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale the size of the spins", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinGlyphSelectBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin Glyph Options", None))
#if QT_CONFIG(tooltip)
        self.SpinArrowButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be arrows", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinArrowButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be arrows", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinArrowButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be arrows", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinArrowButton.setText(QCoreApplication.translate("VizMainWindow", u"Arrows", None))
#if QT_CONFIG(tooltip)
        self.SpinConeButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be cones", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinConeButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be cones", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinConeButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be cones", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinConeButton.setText(QCoreApplication.translate("VizMainWindow", u"Cones", None))
#if QT_CONFIG(tooltip)
        self.SpinSphereButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be spheres", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinSphereButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be spheres", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinSphereButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be spheres", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinSphereButton.setText(QCoreApplication.translate("VizMainWindow", u"Spheres", None))
#if QT_CONFIG(tooltip)
        self.SpinCubeButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be cubes", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinCubeButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be cubes", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinCubeButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be cubes", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinCubeButton.setText(QCoreApplication.translate("VizMainWindow", u"Cubes", None))
#if QT_CONFIG(tooltip)
        self.SpinBarButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be bars", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinBarButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be bars", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinBarButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the glyph of the spins to be bars", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinBarButton.setText(QCoreApplication.translate("VizMainWindow", u"Bars", None))
#if QT_CONFIG(tooltip)
        self.SpinCenterCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Center arrows in middle or base", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinCenterCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Center arrows in middle or base", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinCenterCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Center arrows in middle or base", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinCenterCheck.setText(QCoreApplication.translate("VizMainWindow", u"Center arrows", None))
        self.GlyphQualitySliderLabel.setText(QCoreApplication.translate("VizMainWindow", u"Glyph quality", None))
#if QT_CONFIG(tooltip)
        self.SpinColorScale.setToolTip(QCoreApplication.translate("VizMainWindow", u"Autoscale color rangee", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinColorScale.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Autoscale color rangee", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinColorScale.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Autoscale color rangee", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinColorScale.setText(QCoreApplication.translate("VizMainWindow", u"Autoscale color range", None))
#if QT_CONFIG(tooltip)
        self.AtomsBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options for the visualization of the atoms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AtomsBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for the visualization of the atoms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AtomsBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for the visualization of the atoms", None))
#endif // QT_CONFIG(whatsthis)
        self.AtomsBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Atoms", None))
        self.AtomSizeSliderLabel.setText(QCoreApplication.translate("VizMainWindow", u"Atom Size", None))
#if QT_CONFIG(tooltip)
        self.AtomSize.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale the size of the atoms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AtomSize.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale the size of the atoms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AtomSize.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale the size of the atoms", None))
#endif // QT_CONFIG(whatsthis)
        self.AtomOpaqSliderLabel.setText(QCoreApplication.translate("VizMainWindow", u"Atom Opacity", None))
#if QT_CONFIG(tooltip)
        self.AtomOpaq.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale the opacity of the atoms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AtomOpaq.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale the opacity of the atoms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AtomOpaq.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale the opacity of the atoms", None))
#endif // QT_CONFIG(whatsthis)
        self.AtomQualiSliderLabel.setText(QCoreApplication.translate("VizMainWindow", u"Atom quality", None))
#if QT_CONFIG(tooltip)
        self.AtomQuali.setToolTip(QCoreApplication.translate("VizMainWindow", u"Modify the reslolution of the atoms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AtomQuali.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Modify the reslolution of the atoms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AtomQuali.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Modify the reslolution of the atoms", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(statustip)
        self.MomOptGroup.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Optional visualizations for the moments", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.MomOptGroup.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Optional visualizations for the moments", None))
#endif // QT_CONFIG(whatsthis)
        self.MomOptGroup.setTitle(QCoreApplication.translate("VizMainWindow", u"Mom. Opt.", None))
#if QT_CONFIG(tooltip)
        self.SpinCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of spin directions", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SpinCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of spin directions", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SpinCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of spin directions", None))
#endif // QT_CONFIG(whatsthis)
        self.SpinCheck.setText(QCoreApplication.translate("VizMainWindow", u"Directions", None))
#if QT_CONFIG(tooltip)
        self.ContourCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of contours", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ContourCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of contours", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ContourCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of contours", None))
#endif // QT_CONFIG(whatsthis)
        self.ContourCheck.setText(QCoreApplication.translate("VizMainWindow", u"Contours", None))
#if QT_CONFIG(tooltip)
        self.KMCCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of KMC particles", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.KMCCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of KMC particles", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.KMCCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Tunr on/off the visualization of KMC particles", None))
#endif // QT_CONFIG(whatsthis)
        self.KMCCheck.setText(QCoreApplication.translate("VizMainWindow", u"KMC actors", None))
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.Mag_Page), QCoreApplication.translate("VizMainWindow", u"Magnetization Options", None))
        self.EneMainBox.setTitle("")
#if QT_CONFIG(tooltip)
        self.EneSelectBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Selection of the different energy terms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.EneSelectBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Selection of the different energy terms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.EneSelectBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Selection of the different energy terms", None))
#endif // QT_CONFIG(whatsthis)
        self.EneSelectBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Energy terms", None))
#if QT_CONFIG(tooltip)
        self.TotEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the total energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.TotEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the total energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.TotEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the total energy", None))
#endif // QT_CONFIG(whatsthis)
        self.TotEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Total Energy", None))
#if QT_CONFIG(tooltip)
        self.ExcEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the exchange energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ExcEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the exchange energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ExcEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the exchange energy", None))
#endif // QT_CONFIG(whatsthis)
        self.ExcEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Exchange Energy", None))
#if QT_CONFIG(tooltip)
        self.DMEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the DMI energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.DMEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the DMI energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.DMEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the DMI energy", None))
#endif // QT_CONFIG(whatsthis)
        self.DMEneButton.setText(QCoreApplication.translate("VizMainWindow", u"DMI Energy", None))
#if QT_CONFIG(tooltip)
        self.AniEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the anisotropy energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AniEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the anisotropy energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AniEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the anisotropy energy", None))
#endif // QT_CONFIG(whatsthis)
        self.AniEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Anisotropy Energy", None))
#if QT_CONFIG(tooltip)
        self.BqEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the biquadratic energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.BqEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the biquadratic energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.BqEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the biquadratic energy", None))
#endif // QT_CONFIG(whatsthis)
        self.BqEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic Energy", None))
#if QT_CONFIG(tooltip)
        self.BqDMEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the biquadratic DM energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.BqDMEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the biquadratic DM energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.BqDMEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the biquadratic DM energy", None))
#endif // QT_CONFIG(whatsthis)
        self.BqDMEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic DM Energy", None))
#if QT_CONFIG(tooltip)
        self.PdEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the pseudo-dipolar energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PdEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the pseudo-dipolar energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PdEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the pseudo-dipolar energy", None))
#endif // QT_CONFIG(whatsthis)
        self.PdEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Pseudo Dipolar Energy", None))
#if QT_CONFIG(tooltip)
        self.BextEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the Zeeman energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.BextEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the Zeeman energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.BextEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the Zeeman energy", None))
#endif // QT_CONFIG(whatsthis)
        self.BextEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Zeeman Energy", None))
#if QT_CONFIG(tooltip)
        self.DipEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the dipolar energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.DipEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the dipolar energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.DipEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the dipolar energy", None))
#endif // QT_CONFIG(whatsthis)
        self.DipEneButton.setText(QCoreApplication.translate("VizMainWindow", u"Dipolar Energy", None))
#if QT_CONFIG(tooltip)
        self.ChirEneButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Display the CHIR energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ChirEneButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Display the CHIR energy", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ChirEneButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Display the CHIR energy", None))
#endif // QT_CONFIG(whatsthis)
        self.ChirEneButton.setText(QCoreApplication.translate("VizMainWindow", u"CHIR Energy", None))
#if QT_CONFIG(tooltip)
        self.EneActorBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Selection of energy actors", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.EneActorBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Selection of energy actors", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.EneActorBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Selection of energy actors", None))
#endif // QT_CONFIG(whatsthis)
        self.EneActorBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Energy actor", None))
#if QT_CONFIG(tooltip)
        self.EneDensButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select the energy density to be the actor", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.EneDensButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select the energy density to be the actor", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.EneDensButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select the energy density to be the actor", None))
#endif // QT_CONFIG(whatsthis)
        self.EneDensButton.setText(QCoreApplication.translate("VizMainWindow", u"Energy density", None))
#if QT_CONFIG(tooltip)
        self.EneSiteGlyphs.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select the energy site to be the actor", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.EneSiteGlyphs.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select the energy site to be the actor", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.EneSiteGlyphs.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select the energy site to be the actor", None))
#endif // QT_CONFIG(whatsthis)
        self.EneSiteGlyphs.setText(QCoreApplication.translate("VizMainWindow", u"Site Glyphs", None))
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.Ene_Page), QCoreApplication.translate("VizMainWindow", u"Energy Options", None))
        self.NeighMainBox.setTitle("")
#if QT_CONFIG(statustip)
        self.NeighSelectBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"General selection of the atom for neighour display", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighSelectBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"General selection of the atom for neighour display", None))
#endif // QT_CONFIG(whatsthis)
        self.NeighSelectBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Atom Selector", None))
        self.AtomNumLabel.setText(QCoreApplication.translate("VizMainWindow", u"Atom Number=", None))
#if QT_CONFIG(tooltip)
        self.NeighSelectLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"One can write the atom number to check here", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NeighSelectLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"One can write the atom number to check here", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighSelectLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"One can write the atom number to check here", None))
#endif // QT_CONFIG(whatsthis)
        self.NeighSelectLineEdit.setText(QCoreApplication.translate("VizMainWindow", u"1", None))
#if QT_CONFIG(tooltip)
        self.NeighSelectSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"One can select the atom number to check here", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NeighSelectSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"One can select the atom number to check here", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighSelectSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"One can select the atom number to check here", None))
#endif // QT_CONFIG(whatsthis)
        self.NeighInfoBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Neighbour Info.", None))
#if QT_CONFIG(tooltip)
        self.NeighNumberLabel.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of neighbours for the current atom", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NeighNumberLabel.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of neighbours for the current atom", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighNumberLabel.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of neighbours for the current atom", None))
#endif // QT_CONFIG(whatsthis)
        self.NeighNumberLabel.setText(QCoreApplication.translate("VizMainWindow", u"Number of Neighbours = 0", None))
#if QT_CONFIG(statustip)
        self.NeighOptBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"General options for the display of the neighbours", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighOptBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"General options for the display of the neighbours", None))
#endif // QT_CONFIG(whatsthis)
        self.NeighOptBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Neighbour Opt.", None))
#if QT_CONFIG(tooltip)
        self.NeighAtomCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the atoms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NeighAtomCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the atoms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighAtomCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the atoms", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.NeighAtomCheck.setAccessibleDescription(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the atoms", None))
#endif // QT_CONFIG(accessibility)
        self.NeighAtomCheck.setText(QCoreApplication.translate("VizMainWindow", u"Atoms", None))
#if QT_CONFIG(tooltip)
        self.NeighNeighsCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the neighbour cloud", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NeighNeighsCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the neighbour cloud", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighNeighsCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the neighbour cloud", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.NeighNeighsCheck.setAccessibleDescription(QCoreApplication.translate("VizMainWindow", u"Turn on/off the display of the neighbour cloud", None))
#endif // QT_CONFIG(accessibility)
        self.NeighNeighsCheck.setText(QCoreApplication.translate("VizMainWindow", u"Neighbour cloud", None))
        self.NeighOpacityLabel.setText(QCoreApplication.translate("VizMainWindow", u"Neighbour Opacity", None))
#if QT_CONFIG(tooltip)
        self.NeighOpacitySlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select the opacity of the neighbours", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NeighOpacitySlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select the opacity of the neighbours", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NeighOpacitySlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select the opacity of the neighbours", None))
#endif // QT_CONFIG(whatsthis)
        self.AtomOpacityLabel.setText(QCoreApplication.translate("VizMainWindow", u"Atom Opacity", None))
#if QT_CONFIG(tooltip)
        self.AtomOpacitySlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select the opacity of the atoms", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AtomOpacitySlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select the opacity of the atoms", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AtomOpacitySlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select the opacity of the atoms", None))
#endif // QT_CONFIG(whatsthis)
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.Neigh_Page), QCoreApplication.translate("VizMainWindow", u"Neighbour Options", None))
        self.SceneOptMainBox.setTitle("")
#if QT_CONFIG(statustip)
        self.SceneOptBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"General visualization options", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SceneOptBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"General visualization options", None))
#endif // QT_CONFIG(whatsthis)
        self.SceneOptBox.setTitle(QCoreApplication.translate("VizMainWindow", u"General Options", None))
#if QT_CONFIG(tooltip)
        self.ScalarBarCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the scalar bar widget", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ScalarBarCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the scalar bar widget", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ScalarBarCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off the scalar bar widget", None))
#endif // QT_CONFIG(whatsthis)
        self.ScalarBarCheck.setText(QCoreApplication.translate("VizMainWindow", u"Scalar Bar", None))
#if QT_CONFIG(tooltip)
        self.AxesCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the axes widget", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AxesCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off the axes widget", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AxesCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off the axes widget", None))
#endif // QT_CONFIG(whatsthis)
        self.AxesCheck.setText(QCoreApplication.translate("VizMainWindow", u"Axes", None))
#if QT_CONFIG(tooltip)
        self.ClusBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Enable/Disable the visualization of the cluster", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ClusBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Enable/Disable the visualization of the cluster", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ClusBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Enable/Disable the visualization of the cluster", None))
#endif // QT_CONFIG(whatsthis)
        self.ClusBox.setText(QCoreApplication.translate("VizMainWindow", u"Cluster", None))
#if QT_CONFIG(tooltip)
        self.TimeStepBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Time step of the simulation in seconds", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.TimeStepBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Time step of the simulation in seconds", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.TimeStepBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Input for the display of the time step of the simulation in seconds", None))
#endif // QT_CONFIG(whatsthis)
        self.TimeStepBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Time Info", None))
        self.TimeStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Time Step", None))
#if QT_CONFIG(tooltip)
        self.TimeStepLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Write up the time step of the simulation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.TimeStepLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Write up the time step of the simulation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.TimeStepLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Write up the time step of the simulation", None))
#endif // QT_CONFIG(whatsthis)
        self.TimeStepLineEdit.setInputMask(QCoreApplication.translate("VizMainWindow", u"1e-15", None))
        self.TimeStepLineEdit.setText(QCoreApplication.translate("VizMainWindow", u"1e-15", None))
        self.TimeStepLineEdit.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1e-15", None))
#if QT_CONFIG(tooltip)
        self.ClippBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options for the clipping plane ", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ClippBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for the clipping plane ", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ClippBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for the clipping plane ", None))
#endif // QT_CONFIG(whatsthis)
        self.ClippBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Clipping Planes", None))
#if QT_CONFIG(tooltip)
        self.ClippPlaneXCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the x direction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ClippPlaneXCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the x direction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ClippPlaneXCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the x direction", None))
#endif // QT_CONFIG(whatsthis)
        self.ClippPlaneXCheck.setText(QCoreApplication.translate("VizMainWindow", u"(1,0,0) Normal", None))
#if QT_CONFIG(tooltip)
        self.ClippPlaneYCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the y direction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ClippPlaneYCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the y direction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ClippPlaneYCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the y direction", None))
#endif // QT_CONFIG(whatsthis)
        self.ClippPlaneYCheck.setText(QCoreApplication.translate("VizMainWindow", u"(0,1,0) Normal", None))
#if QT_CONFIG(tooltip)
        self.ClippPlaneZCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the z direction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ClippPlaneZCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the z direction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ClippPlaneZCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Normal of the plane along the z direction", None))
#endif // QT_CONFIG(whatsthis)
        self.ClippPlaneZCheck.setText(QCoreApplication.translate("VizMainWindow", u"(0,0,1) Normal", None))
#if QT_CONFIG(tooltip)
        self.ClippingPlaneSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Change the position of the clipping plane", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ClippingPlaneSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Change the position of the clipping plane", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ClippingPlaneSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Change the position of the clipping plane", None))
#endif // QT_CONFIG(whatsthis)
        self.ClipPlaneLabel.setText(QCoreApplication.translate("VizMainWindow", u"Clip. Plane Pos = (0,0,0)", None))
#if QT_CONFIG(tooltip)
        self.BackgroundColorBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Background color control ", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.BackgroundColorBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Background color control ", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.BackgroundColorBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Background color control ", None))
#endif // QT_CONFIG(whatsthis)
        self.BackgroundColorBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Background color", None))
        self.RGBRedBackgroundLabel.setText(QCoreApplication.translate("VizMainWindow", u"Red", None))
#if QT_CONFIG(tooltip)
        self.RGBRedBackgroundSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Amount of red in background", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RGBRedBackgroundSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Amount of red in background", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RGBRedBackgroundSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Amount of red in background", None))
#endif // QT_CONFIG(whatsthis)
        self.RGBGreenBackgroundLabel.setText(QCoreApplication.translate("VizMainWindow", u"Green", None))
#if QT_CONFIG(tooltip)
        self.RGBGreenBackgroundSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Amount of green in background", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RGBGreenBackgroundSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Amount of green in background", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RGBGreenBackgroundSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Amount of green in background", None))
#endif // QT_CONFIG(whatsthis)
        self.RGBBlueBackgroundLabel.setText(QCoreApplication.translate("VizMainWindow", u"Blue", None))
#if QT_CONFIG(tooltip)
        self.RGBBlueBackgroundSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Amount of blue in background", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RGBBlueBackgroundSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Amount of blue in background", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RGBBlueBackgroundSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Amount of blue in background", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.BWBackgroundCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the background color to grayscale", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.BWBackgroundCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the background color to grayscale", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.BWBackgroundCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the background color to grayscale", None))
#endif // QT_CONFIG(whatsthis)
        self.BWBackgroundCheck.setText(QCoreApplication.translate("VizMainWindow", u"Grayscale background", None))
#if QT_CONFIG(tooltip)
        self.FocusBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options for focal blur", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FocusBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for focal blur", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FocusBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for focal blur", None))
#endif // QT_CONFIG(whatsthis)
        self.FocusBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Focal blur", None))
        self.FocusLabel.setText(QCoreApplication.translate("VizMainWindow", u"Focal depth", None))
#if QT_CONFIG(tooltip)
        self.FocusSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Change the depth of field", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FocusSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Change the depth of field", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FocusSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Change the depth of field", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.AutoFocusCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Toggle automatic focal point determination", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.AutoFocusCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Toggle automatic focal point determination", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.AutoFocusCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Toggle automatic focal point determination", None))
#endif // QT_CONFIG(whatsthis)
        self.AutoFocusCheck.setText(QCoreApplication.translate("VizMainWindow", u"Automatic focus point", None))
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.SceneOptPage), QCoreApplication.translate("VizMainWindow", u"Scene Options", None))
        self.ColorOptMainBox.setTitle("")
        self.ColormapLabel.setText(QCoreApplication.translate("VizMainWindow", u"Colormap", None))
        self.ColorMapBox.setItemText(0, QCoreApplication.translate("VizMainWindow", u"Coolwarm", None))
        self.ColorMapBox.setItemText(1, QCoreApplication.translate("VizMainWindow", u"Blackbody", None))
        self.ColorMapBox.setItemText(2, QCoreApplication.translate("VizMainWindow", u"RdGy", None))
        self.ColorMapBox.setItemText(3, QCoreApplication.translate("VizMainWindow", u"Spectral", None))
        self.ColorMapBox.setItemText(4, QCoreApplication.translate("VizMainWindow", u"VTK Spectrum", None))
        self.ColorMapBox.setItemText(5, QCoreApplication.translate("VizMainWindow", u"VTK Warm", None))
        self.ColorMapBox.setItemText(6, QCoreApplication.translate("VizMainWindow", u"VTK Cool", None))
        self.ColorMapBox.setItemText(7, QCoreApplication.translate("VizMainWindow", u"VTK Blues", None))
        self.ColorMapBox.setItemText(8, QCoreApplication.translate("VizMainWindow", u"VTK Wildflower", None))
        self.ColorMapBox.setItemText(9, QCoreApplication.translate("VizMainWindow", u"VTK Citrus", None))
        self.ColorMapBox.setItemText(10, QCoreApplication.translate("VizMainWindow", u"ColorBrewer PuOr", None))
        self.ColorMapBox.setItemText(11, QCoreApplication.translate("VizMainWindow", u"ColorBrewer BrBuGr", None))
        self.ColorMapBox.setItemText(12, QCoreApplication.translate("VizMainWindow", u"ColorBrewer BuGr", None))
        self.ColorMapBox.setItemText(13, QCoreApplication.translate("VizMainWindow", u"ColorBrewer YeOrBr", None))
        self.ColorMapBox.setItemText(14, QCoreApplication.translate("VizMainWindow", u"ColorBrewer BuPu", None))
        self.ColorMapBox.setItemText(15, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Spectral", None))
        self.ColorMapBox.setItemText(16, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Accent", None))
        self.ColorMapBox.setItemText(17, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Dark", None))
        self.ColorMapBox.setItemText(18, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Pastel v1", None))
        self.ColorMapBox.setItemText(19, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Pastel v2", None))
        self.ColorMapBox.setItemText(20, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Qualitative v1", None))
        self.ColorMapBox.setItemText(21, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Qualitative v2", None))
        self.ColorMapBox.setItemText(22, QCoreApplication.translate("VizMainWindow", u"ColorBrewer Qualitative v3", None))

#if QT_CONFIG(tooltip)
        self.ColorMapBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Colormap name", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ColorMapBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Colormap name", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ColorMapBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Colormap name", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.ColormapScaleBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale of the colormap", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ColormapScaleBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale of the colormap", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ColormapScaleBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale of the colormap", None))
#endif // QT_CONFIG(whatsthis)
        self.ColormapScaleBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Colormap scale", None))
#if QT_CONFIG(tooltip)
        self.LinearScale.setToolTip(QCoreApplication.translate("VizMainWindow", u"Linear scale of the colormap", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.LinearScale.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Linear scale of the colormap", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.LinearScale.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Linear scale of the colormap", None))
#endif // QT_CONFIG(whatsthis)
        self.LinearScale.setText(QCoreApplication.translate("VizMainWindow", u"Linear", None))
#if QT_CONFIG(tooltip)
        self.LogScale.setToolTip(QCoreApplication.translate("VizMainWindow", u"Log scale of the colormap", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.LogScale.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Log scale of the colormap", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.LogScale.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Log scale of the colormap", None))
#endif // QT_CONFIG(whatsthis)
        self.LogScale.setText(QCoreApplication.translate("VizMainWindow", u"Log", None))
#if QT_CONFIG(tooltip)
        self.SingleColorBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Single color control ", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SingleColorBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Single color control ", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SingleColorBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Single color control ", None))
#endif // QT_CONFIG(whatsthis)
        self.SingleColorBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Single color", None))
        self.RGBRedColorLabel.setText(QCoreApplication.translate("VizMainWindow", u"Red", None))
#if QT_CONFIG(tooltip)
        self.RGBRedColorSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Amount of red component in single color", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RGBRedColorSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Amount of red component in single color", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RGBRedColorSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Amount of red component in single color", None))
#endif // QT_CONFIG(whatsthis)
        self.RGBGreenColorLabel.setText(QCoreApplication.translate("VizMainWindow", u"Green", None))
#if QT_CONFIG(tooltip)
        self.RGBGreenColorSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Amount of green component in single color", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RGBGreenColorSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Amount of green component in single color", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RGBGreenColorSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Amount of green component in single color", None))
#endif // QT_CONFIG(whatsthis)
        self.RGBBlueColorLabel.setText(QCoreApplication.translate("VizMainWindow", u"Blue", None))
#if QT_CONFIG(tooltip)
        self.RGBBlueColorSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Amount of blue component in single color", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RGBBlueColorSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Amount of blue component in single color", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RGBBlueColorSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Amount of blue component in single color", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.BWSinglecolorCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph color to grayscale", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.BWSinglecolorCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the glyph color to grayscale", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.BWSinglecolorCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the glyph color to grayscale", None))
#endif // QT_CONFIG(whatsthis)
        self.BWSinglecolorCheck.setText(QCoreApplication.translate("VizMainWindow", u"Grayscale", None))
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.ColorOptPage), QCoreApplication.translate("VizMainWindow", u"Colormap Options", None))
        self.NeighMainBox1.setTitle("")
        self.VizQualityBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Visualization quality", None))
#if QT_CONFIG(tooltip)
        self.SSAOCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off screen-space ambient occlusion (SSAO)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SSAOCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off screen-space ambient occlusion (SSAO)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SSAOCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off screen-space ambient occlusion (SSAO)", None))
#endif // QT_CONFIG(whatsthis)
        self.SSAOCheck.setText(QCoreApplication.translate("VizMainWindow", u"Enable SSAO", None))
#if QT_CONFIG(tooltip)
        self.FXAACheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off fast approximate anti-aliasing (FXAA)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FXAACheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off fast approximate anti-aliasing (FXAA)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FXAACheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off fast approximate anti-aliasing (FXAA)", None))
#endif // QT_CONFIG(whatsthis)
        self.FXAACheck.setText(QCoreApplication.translate("VizMainWindow", u"Enable FXAA", None))
#if QT_CONFIG(tooltip)
        self.HDRICheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off image based lighting (HDRI)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.HDRICheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off image based lighting (HDRI)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.HDRICheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off image based lighting (HDRI)", None))
#endif // QT_CONFIG(whatsthis)
        self.HDRICheck.setText(QCoreApplication.translate("VizMainWindow", u"Enable HDR lighting", None))
#if QT_CONFIG(tooltip)
        self.SkyBoxCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off skybox", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SkyBoxCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off skybox", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SkyBoxCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off skybox", None))
#endif // QT_CONFIG(whatsthis)
        self.SkyBoxCheck.setText(QCoreApplication.translate("VizMainWindow", u"Show skybox", None))
#if QT_CONFIG(tooltip)
        self.HDRIButtonSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select HDR image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.HDRIButtonSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select HDR image", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.HDRIButtonSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select HDR image", None))
#endif // QT_CONFIG(whatsthis)
        self.HDRIButtonSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select HDR image", None))
        self.SpinShadeSelectBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin Shading Options", None))
#if QT_CONFIG(tooltip)
        self.FlatShadeButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to flat", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FlatShadeButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to flat", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FlatShadeButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to flat", None))
#endif // QT_CONFIG(whatsthis)
        self.FlatShadeButton.setText(QCoreApplication.translate("VizMainWindow", u"Flat", None))
#if QT_CONFIG(tooltip)
        self.GouraudShadeButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to Gouraud", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.GouraudShadeButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to Gouraud", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.GouraudShadeButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to Gouraud", None))
#endif // QT_CONFIG(whatsthis)
        self.GouraudShadeButton.setText(QCoreApplication.translate("VizMainWindow", u"Gouraud", None))
#if QT_CONFIG(tooltip)
        self.PhongShadeButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to phong", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PhongShadeButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to phong", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PhongShadeButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to phong", None))
#endif // QT_CONFIG(whatsthis)
        self.PhongShadeButton.setText(QCoreApplication.translate("VizMainWindow", u"Phong", None))
        self.AmbientLabel.setText(QCoreApplication.translate("VizMainWindow", u"Ambient", None))
#if QT_CONFIG(tooltip)
        self.RenAmbientSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Ambient scattering", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RenAmbientSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Ambient scattering", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RenAmbientSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Ambient scattering", None))
#endif // QT_CONFIG(whatsthis)
        self.DiffuseLabel.setText(QCoreApplication.translate("VizMainWindow", u"Diffuse", None))
#if QT_CONFIG(tooltip)
        self.RenDiffuseSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Diffuse scattering", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RenDiffuseSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Diffuse scattering", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RenDiffuseSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Diffuse scattering", None))
#endif // QT_CONFIG(whatsthis)
        self.SpecularLabel.setText(QCoreApplication.translate("VizMainWindow", u"Specular", None))
#if QT_CONFIG(tooltip)
        self.RenSpecularSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Specular shading of glyphs", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RenSpecularSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Specular shading of glyphs", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RenSpecularSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Specular shading of glyphs", None))
#endif // QT_CONFIG(whatsthis)
        self.SpecularPowerLabel.setText(QCoreApplication.translate("VizMainWindow", u"Specular power", None))
#if QT_CONFIG(tooltip)
        self.RenSpecularPowerSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Specular power of glyphs", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.RenSpecularPowerSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Specular power of glyphs", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.RenSpecularPowerSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Specular power of glyphs", None))
#endif // QT_CONFIG(whatsthis)
        self.GlyphOpacitySliderLabel.setText(QCoreApplication.translate("VizMainWindow", u"Glyph Opacity", None))
#if QT_CONFIG(tooltip)
        self.PBRShadeButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to PBR", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PBRShadeButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to PBR", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PBRShadeButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the interpolation of the glyphs to PBR", None))
#endif // QT_CONFIG(whatsthis)
        self.PBRShadeButton.setText(QCoreApplication.translate("VizMainWindow", u"Physically Based Rendering", None))
        self.RoughnessLabel.setText(QCoreApplication.translate("VizMainWindow", u"Roughness", None))
#if QT_CONFIG(tooltip)
        self.PBRRoughnessSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Roughness of glyphs", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PBRRoughnessSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Roughness of glyphs", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PBRRoughnessSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Roughness of glyphs", None))
#endif // QT_CONFIG(whatsthis)
        self.MetallicLabel.setText(QCoreApplication.translate("VizMainWindow", u"Metallic", None))
#if QT_CONFIG(tooltip)
        self.PBRMetallicSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Metallic scattering", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PBRMetallicSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Metallic scattering", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PBRMetallicSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Metallic scattering", None))
#endif // QT_CONFIG(whatsthis)
        self.EmissionLabel.setText(QCoreApplication.translate("VizMainWindow", u"Emission", None))
#if QT_CONFIG(tooltip)
        self.PBREmissionSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Emission of glyphs", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PBREmissionSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Emission of glyphs", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PBREmissionSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Emission of glyphs", None))
#endif // QT_CONFIG(whatsthis)
        self.OcclusionLabel.setText(QCoreApplication.translate("VizMainWindow", u"Occlusion", None))
#if QT_CONFIG(tooltip)
        self.PBROcclusionSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Occlusion of glyphs", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.PBROcclusionSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Occlusion of glyphs", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.PBROcclusionSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Occlusion of glyphs", None))
#endif // QT_CONFIG(whatsthis)
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.AdvViz_Page), QCoreApplication.translate("VizMainWindow", u"Shading Options", None))
        self.TextureMainBox.setTitle("")
#if QT_CONFIG(tooltip)
        self.TextureCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off surface texure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.TextureCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off surface texure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.TextureCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off surface texure", None))
#endif // QT_CONFIG(whatsthis)
        self.TextureCheck.setText(QCoreApplication.translate("VizMainWindow", u"Use surface texture", None))
#if QT_CONFIG(tooltip)
        self.ORMTextureCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off ORM texure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ORMTextureCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off ORM texure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ORMTextureCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off ORM texure", None))
#endif // QT_CONFIG(whatsthis)
        self.ORMTextureCheck.setText(QCoreApplication.translate("VizMainWindow", u"Use ORM texture", None))
#if QT_CONFIG(tooltip)
        self.NTextureCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off normal texure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NTextureCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off normal texure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NTextureCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off normal texure", None))
#endif // QT_CONFIG(whatsthis)
        self.NTextureCheck.setText(QCoreApplication.translate("VizMainWindow", u"Use normal texture", None))
#if QT_CONFIG(tooltip)
        self.ETextureCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off emissive texure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ETextureCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off emissive texure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ETextureCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off emissive texure", None))
#endif // QT_CONFIG(whatsthis)
        self.ETextureCheck.setText(QCoreApplication.translate("VizMainWindow", u"Use emissive texture", None))
#if QT_CONFIG(tooltip)
        self.ATextureCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off anisotropy texure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ATextureCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Turn on/off anisotropy texure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ATextureCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Turn on/off anisotropy texure", None))
#endif // QT_CONFIG(whatsthis)
        self.ATextureCheck.setText(QCoreApplication.translate("VizMainWindow", u"Use anisotropy texture", None))
#if QT_CONFIG(tooltip)
        self.TextureSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select surface texture image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.TextureSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select surface texture image", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.TextureSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select surface texture image", None))
#endif // QT_CONFIG(whatsthis)
        self.TextureSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select surface texture image", None))
#if QT_CONFIG(tooltip)
        self.ORMTextureSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select ORM texture image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ORMTextureSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select ORM texture image", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ORMTextureSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select ORM texture image", None))
#endif // QT_CONFIG(whatsthis)
        self.ORMTextureSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select ORM texture image", None))
#if QT_CONFIG(tooltip)
        self.NTextureSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select normal texture image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.NTextureSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select normal texture image", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.NTextureSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select normal texture image", None))
#endif // QT_CONFIG(whatsthis)
        self.NTextureSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select normal texture image", None))
#if QT_CONFIG(tooltip)
        self.ETextureSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select emissive texture image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ETextureSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select emissive texture image", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ETextureSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select emissive texture image", None))
#endif // QT_CONFIG(whatsthis)
        self.ETextureSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select emissive texture image", None))
#if QT_CONFIG(tooltip)
        self.ATextureSelect.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select anisotropy texture image", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ATextureSelect.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select anisotropy texture image", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ATextureSelect.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select anisotropy texture image", None))
#endif // QT_CONFIG(whatsthis)
        self.ATextureSelect.setText(QCoreApplication.translate("VizMainWindow", u"Select anisotropy texture image", None))
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.Texure_Page), QCoreApplication.translate("VizMainWindow", u"Texturing Options", None))
        self.CamMainBox.setTitle("")
#if QT_CONFIG(statustip)
        self.CamAngleBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Selection of the camera angles", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamAngleBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Selection of the camera angles", None))
#endif // QT_CONFIG(whatsthis)
        self.CamAngleBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Camera Angles", None))
#if QT_CONFIG(tooltip)
        self.CamElevationLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the camera elevation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamElevationLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the camera elevation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamElevationLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the camera elevation", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.CamRollLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the camera roll", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamRollLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the camera roll", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamRollLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the camera roll", None))
#endif // QT_CONFIG(whatsthis)
        self.CamRollLabel.setText(QCoreApplication.translate("VizMainWindow", u"Roll", None))
        self.CamPitchLabel.setText(QCoreApplication.translate("VizMainWindow", u"Pitch", None))
#if QT_CONFIG(tooltip)
        self.CamPitchLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the camera pitch", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamPitchLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the camera pitch", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamPitchLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the camera pitch", None))
#endif // QT_CONFIG(whatsthis)
        self.CamYawLabel.setText(QCoreApplication.translate("VizMainWindow", u"Yaw", None))
#if QT_CONFIG(tooltip)
        self.CamYawLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the camera yaw", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamYawLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the camera yaw", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamYawLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the camera yaw", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.CamAzimuthLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the camera azimuth", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamAzimuthLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the camera azimuth", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamAzimuthLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the camera azimuth", None))
#endif // QT_CONFIG(whatsthis)
        self.CamAzimuthLabel.setText(QCoreApplication.translate("VizMainWindow", u"Azimuth", None))
        self.CamElevationLabel.setText(QCoreApplication.translate("VizMainWindow", u"Elevation", None))
#if QT_CONFIG(statustip)
        self.CamPosBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Setting the camera position", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamPosBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Setting the camera position", None))
#endif // QT_CONFIG(whatsthis)
        self.CamPosBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Camera Position", None))
        self.FocalPointLabel.setText(QCoreApplication.translate("VizMainWindow", u"Set Focal Point", None))
        self.FocalPosXLabel.setText(QCoreApplication.translate("VizMainWindow", u"X", None))
        self.FocalPosYLabel.setText(QCoreApplication.translate("VizMainWindow", u"Y", None))
        self.FocalPosZLabel.setText(QCoreApplication.translate("VizMainWindow", u"Z", None))
#if QT_CONFIG(tooltip)
        self.FocalPosX.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the x coordinate of the focal point", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FocalPosX.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the x coordinate of the focal point", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FocalPosX.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the x coordinate of the focal point", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.FocalPosY.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the y coordinate of the focal point", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FocalPosY.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the y coordinate of the focal point", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FocalPosY.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the y coordinate of the focal point", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.FocalPosZ.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the z coordinate of the focal point", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.FocalPosZ.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the z coordinate of the focal point", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.FocalPosZ.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the z coordinate of the focal point", None))
#endif // QT_CONFIG(whatsthis)
        self.CamPosLabel.setText(QCoreApplication.translate("VizMainWindow", u"Set Camera Position", None))
        self.CamPosXLabel.setText(QCoreApplication.translate("VizMainWindow", u"X", None))
        self.CamPosYLabel.setText(QCoreApplication.translate("VizMainWindow", u"Y", None))
        self.CamPosZLabel.setText(QCoreApplication.translate("VizMainWindow", u"Z", None))
#if QT_CONFIG(tooltip)
        self.CamPosX.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the x coordinate of the camera position", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamPosX.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the x coordinate of the camera position", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamPosX.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the x coordinate of the camera position", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.CamPosY.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the y coordinate of the camera position", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamPosY.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the y coordinate of the camera position", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamPosY.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the y coordinate of the camera position", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.CamPosZ.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the z coordinate of the camera position", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamPosZ.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the z coordinate of the camera position", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamPosZ.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the z coordinate of the camera position", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.CamViewBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Setup the view of the camera", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamViewBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Setup the view of the camera", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamViewBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Setup the view of the camera", None))
#endif // QT_CONFIG(whatsthis)
        self.CamViewBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Set View", None))
#if QT_CONFIG(tooltip)
        self.SetXView.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the x direction to be up", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SetXView.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the x direction to be up", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SetXView.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the x direction to be up", None))
#endif // QT_CONFIG(whatsthis)
        self.SetXView.setText(QCoreApplication.translate("VizMainWindow", u"(1,0,0)", None))
#if QT_CONFIG(tooltip)
        self.SetYView.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the y direction to be up", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SetYView.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the y direction to be up", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SetYView.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the y direction to be up", None))
#endif // QT_CONFIG(whatsthis)
        self.SetYView.setText(QCoreApplication.translate("VizMainWindow", u"(0,1,0)", None))
#if QT_CONFIG(tooltip)
        self.SetZView.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the z direction to be up", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SetZView.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the z direction to be up", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SetZView.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the z direction to be up", None))
#endif // QT_CONFIG(whatsthis)
        self.SetZView.setText(QCoreApplication.translate("VizMainWindow", u"(0,0,1)", None))
        self.ParallelProjectBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Parallel Projection", None))
#if QT_CONFIG(tooltip)
        self.ParallelScaleSlider.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the parallel scale distance", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ParallelScaleSlider.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the parallel scale distance", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ParallelScaleSlider.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the parallel scale distance", None))
#endif // QT_CONFIG(whatsthis)
        self.ParallelScaleLabel.setText(QCoreApplication.translate("VizMainWindow", u"Parallel Scale", None))
#if QT_CONFIG(tooltip)
        self.ParallelScaleLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the parallel scale distance", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ParallelScaleLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the parallel scale distance", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ParallelScaleLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the parallel scale distance", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.SetCamButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the camera to the selected values", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.SetCamButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the camera to the selected values", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.SetCamButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the camera to the selected values", None))
#endif // QT_CONFIG(whatsthis)
        self.SetCamButton.setText(QCoreApplication.translate("VizMainWindow", u"Set Camera", None))
#if QT_CONFIG(tooltip)
        self.CamResetButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Reset the Camera to the default values", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamResetButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Reset the Camera to the default values", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamResetButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Reset the Camera to the default values", None))
#endif // QT_CONFIG(whatsthis)
        self.CamResetButton.setText(QCoreApplication.translate("VizMainWindow", u"Reset Camera", None))
#if QT_CONFIG(tooltip)
        self.CamSaveButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Save current camera settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamSaveButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Save current camera settings", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamSaveButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Save current camera settings", None))
#endif // QT_CONFIG(whatsthis)
        self.CamSaveButton.setText(QCoreApplication.translate("VizMainWindow", u"Save Camera settings", None))
#if QT_CONFIG(tooltip)
        self.CamLoadButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Load previous camera settings", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.CamLoadButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Load previous camera settings", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.CamLoadButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Load previous camera settings", None))
#endif // QT_CONFIG(whatsthis)
        self.CamLoadButton.setText(QCoreApplication.translate("VizMainWindow", u"Load Camera settings", None))
        self.VizToolBox.setItemText(self.VizToolBox.indexOf(self.Camera_Page), QCoreApplication.translate("VizMainWindow", u"Camera Options", None))
#if QT_CONFIG(tooltip)
        self.MatPlotOptions.setToolTip(QCoreApplication.translate("VizMainWindow", u"Option for static properties plotting", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.MatPlotOptions.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for static properties plotting", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.MatPlotOptions.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for static properties plotting", None))
#endif // QT_CONFIG(whatsthis)
        self.MatPlotOptions.setWindowTitle(QCoreApplication.translate("VizMainWindow", u"Options", None))
        self.MainSqwBox.setTitle("")
        self.SqwDisplayOpts.setTitle(QCoreApplication.translate("VizMainWindow", u"Spectra represenation", None))
        self.SqwDispCheckBox.setText(QCoreApplication.translate("VizMainWindow", u"S(q,w)", None))
        self.AMSDispCheckBox.setText(QCoreApplication.translate("VizMainWindow", u"AMS", None))
        self.SqwColorMapSelect.setTitle(QCoreApplication.translate("VizMainWindow", u"Colormap selection", None))
        self.SqwCoolwarm.setText(QCoreApplication.translate("VizMainWindow", u"Coolwarm", None))
        self.SqwSpectral.setText(QCoreApplication.translate("VizMainWindow", u"Spectral", None))
        self.SqwBlackbody.setText(QCoreApplication.translate("VizMainWindow", u"Blackbody", None))
        self.SqwProjBox.setTitle(QCoreApplication.translate("VizMainWindow", u"S(q,w) Projections", None))
        self.Sqw_x.setText(QCoreApplication.translate("VizMainWindow", u"X component", None))
        self.Sqw_y.setText(QCoreApplication.translate("VizMainWindow", u"Y component", None))
        self.Sqw_z.setText(QCoreApplication.translate("VizMainWindow", u"Z Component", None))
        self.Sqw_2.setText(QCoreApplication.translate("VizMainWindow", u"Squared", None))
        self.CorrOptsBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Correlation options", None))
        self.InpSqwSCStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Sampling Freq.", None))
        self.InpSqwSCStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"50", None))
        self.InpSqwSCNStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1000", None))
        self.InpSqwSCNStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Freq. Number", None))
        self.AMSDisplayOpts.setTitle(QCoreApplication.translate("VizMainWindow", u"AMS control", None))
        self.ABCorrOptsBox.setTitle(QCoreApplication.translate("VizMainWindow", u"S(q,w) broadening (meV)", None))
#if QT_CONFIG(tooltip)
        self.ABCorrWidth.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale the S(q,w) broadening", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ABCorrWidth.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale the S(q,w) broadening", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABCorrWidth.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale the S(q,w) broadening", None))
#endif // QT_CONFIG(whatsthis)
        self.ABCorrWidthTX.setText(QCoreApplication.translate("VizMainWindow", u"1.0", None))
#if QT_CONFIG(tooltip)
        self.ABAMSGrid.setToolTip(QCoreApplication.translate("VizMainWindow", u"Toggle on/off symmetry lines", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ABAMSGrid.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Toggle on/off symmetry lines", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABAMSGrid.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Toggle on/off symmetry lines", None))
#endif // QT_CONFIG(whatsthis)
        self.ABAMSGrid.setText(QCoreApplication.translate("VizMainWindow", u"magnon symmetry lines", None))
        self.MatToolBox.setItemText(self.MatToolBox.indexOf(self.SqwOptions), QCoreApplication.translate("VizMainWindow", u"Magnon Spectra Options", None))
        self.MatToolBox.setItemText(self.MatToolBox.indexOf(self.NTrajOpts), QCoreApplication.translate("VizMainWindow", u"Single Trajectory Options", None))
        self.AvePlotMainBox.setTitle("")
        self.PlotMagDirOpt.setTitle(QCoreApplication.translate("VizMainWindow", u"Magnetization", None))
        self.Plot_M_x.setText(QCoreApplication.translate("VizMainWindow", u"X Projection", None))
        self.Plot_M_y.setText(QCoreApplication.translate("VizMainWindow", u"Y Projection", None))
        self.Plot_M_z.setText(QCoreApplication.translate("VizMainWindow", u"Z Projection", None))
        self.Plot_M_tot.setText(QCoreApplication.translate("VizMainWindow", u"Total", None))
        self.MatToolBox.setItemText(self.MatToolBox.indexOf(self.AveOpts), QCoreApplication.translate("VizMainWindow", u"Averages Options", None))
        self.EnePlotMainBox.setTitle("")
        self.EneCompOpt.setTitle(QCoreApplication.translate("VizMainWindow", u"Energy Contributions", None))
        self.EneTotCheck.setText(QCoreApplication.translate("VizMainWindow", u"Total", None))
        self.EneExcCheck.setText(QCoreApplication.translate("VizMainWindow", u"Exchange", None))
        self.EneAniCheck.setText(QCoreApplication.translate("VizMainWindow", u"Anisotropy", None))
        self.EneDMCheck.setText(QCoreApplication.translate("VizMainWindow", u"Dzyaloshinskii-Moriya", None))
        self.EnePdCheck.setText(QCoreApplication.translate("VizMainWindow", u"Pseudo Dipolar", None))
        self.EneBqDMCheck.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic DM", None))
        self.EneBqCheck.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic", None))
        self.EneDipCheck.setText(QCoreApplication.translate("VizMainWindow", u"Dipolar", None))
        self.EneExtCheck.setText(QCoreApplication.translate("VizMainWindow", u"Zeeman", None))
        self.EneLSFCheck.setText(QCoreApplication.translate("VizMainWindow", u"LSF", None))
        self.EneChirCheck.setText(QCoreApplication.translate("VizMainWindow", u"Chiral", None))
        self.MatToolBox.setItemText(self.MatToolBox.indexOf(self.EneOpts), QCoreApplication.translate("VizMainWindow", u"Energy options", None))
        self.GenOptMainBox.setTitle("")
        self.ABLineLabel.setText(QCoreApplication.translate("VizMainWindow", u"Line width", None))
#if QT_CONFIG(tooltip)
        self.ABLineWidth.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale the width of the lines", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ABLineWidth.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale the width of the lines", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABLineWidth.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale the width of the lines", None))
#endif // QT_CONFIG(whatsthis)
        self.ABMarkerLabel.setText(QCoreApplication.translate("VizMainWindow", u"Marker Size", None))
#if QT_CONFIG(tooltip)
        self.ABMarkerSize.setToolTip(QCoreApplication.translate("VizMainWindow", u"Scale the size of the markers", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ABMarkerSize.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Scale the size of the markers", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABMarkerSize.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Scale the size of the markers", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(statustip)
        self.ABOptGroup.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Optional visualizations for plots", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABOptGroup.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Optional visualizations for plots", None))
#endif // QT_CONFIG(whatsthis)
        self.ABOptGroup.setTitle(QCoreApplication.translate("VizMainWindow", u"Grid options", None))
#if QT_CONFIG(tooltip)
        self.ABXMajGrid.setToolTip(QCoreApplication.translate("VizMainWindow", u"Toggle on/off x-axis grid lines", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ABXMajGrid.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Toggle on/off x-axis grid lines", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABXMajGrid.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Toggle on/off x-axis grid lines", None))
#endif // QT_CONFIG(whatsthis)
        self.ABXMajGrid.setText(QCoreApplication.translate("VizMainWindow", u"x-axis grid lines", None))
#if QT_CONFIG(tooltip)
        self.ABYMajGrid.setToolTip(QCoreApplication.translate("VizMainWindow", u"Toggle on/off y-axis grid lines", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ABYMajGrid.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Toggle on/off y-axis grid lines", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ABYMajGrid.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Toggle on/off y-axis grid lines", None))
#endif // QT_CONFIG(whatsthis)
        self.ABYMajGrid.setText(QCoreApplication.translate("VizMainWindow", u"y-axis grid lines", None))
        self.PlotGenOpts.setTitle(QCoreApplication.translate("VizMainWindow", u"Plotting options", None))
        self.InpPlotDt.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1e-16", None))
        self.InpPlotDtLabel.setText(QCoreApplication.translate("VizMainWindow", u"Time step", None))
        self.secLabel.setText(QCoreApplication.translate("VizMainWindow", u"s", None))
#if QT_CONFIG(tooltip)
        self.InpFigOptBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options to save the figure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpFigOptBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options to save the figure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpFigOptBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options to save the figure", None))
#endif // QT_CONFIG(whatsthis)
        self.InpFigOptBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Saving options", None))
        self.InpFigDPILabel.setText(QCoreApplication.translate("VizMainWindow", u"dpi", None))
#if QT_CONFIG(tooltip)
        self.InpFigDPI.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the dpi of the saved figure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpFigDPI.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the dpi of the saved figure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpFigDPI.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the dpi of the saved figure", None))
#endif // QT_CONFIG(whatsthis)
        self.InpFigDPI.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"800", None))
        self.MatToolBox.setItemText(self.MatToolBox.indexOf(self.MatGenOpts), QCoreApplication.translate("VizMainWindow", u"Figure Options", None))
#if QT_CONFIG(tooltip)
        self.InpDockWidget.setToolTip(QCoreApplication.translate("VizMainWindow", u"Options for the creation of the input file", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDockWidget.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Options for the creation of the input file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDockWidget.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Options for the creation of the input file", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDockWidget.setWindowTitle(QCoreApplication.translate("VizMainWindow", u"Input Options", None))
        self.InpHamBox.setTitle("")
        self.InpPairOptBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Pair options", None))
        self.ImpPairMaptypeLabel.setText(QCoreApplication.translate("VizMainWindow", u"Maptype", None))
        self.InpPairSymLabel.setText(QCoreApplication.translate("VizMainWindow", u"Symmetry", None))
#if QT_CONFIG(tooltip)
        self.InpPairSym.setToolTip(QCoreApplication.translate("VizMainWindow", u"Symmetry of the exchange Hamiltonian", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPairSym.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Symmetry of the exchange Hamiltonian", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPairSym.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Symmetry of the exchange Hamiltonian", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.ImpPairMaptype.setToolTip(QCoreApplication.translate("VizMainWindow", u"Type of mapping for the neighbour hamiltonian (1: cartesian, 2: direct)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ImpPairMaptype.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Type of mapping for the neighbour hamiltonian (1: cartesian, 2: direct)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ImpPairMaptype.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Type of mapping for the neighbour hamiltonian (1: cartesian, 2: direct)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(tooltip)
        self.InpXCCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider exchange interaction (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpXCCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider exchange interaction (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpXCCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider exchange interaction (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpXCCheck.setText(QCoreApplication.translate("VizMainWindow", u"Exchange", None))
#if QT_CONFIG(tooltip)
        self.InpDMCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider DM interaction (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDMCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider DM interaction (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDMCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider DM interaction (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDMCheck.setText(QCoreApplication.translate("VizMainWindow", u"Dzyaloshinskii-Moriya", None))
#if QT_CONFIG(tooltip)
        self.InpMAECheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider anisotropy (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMAECheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider anisotropy (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMAECheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider anisotropy (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMAECheck.setText(QCoreApplication.translate("VizMainWindow", u"Anisotropy", None))
#if QT_CONFIG(tooltip)
        self.InpPseudoCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider pseudo-dipolar inteaction (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpPseudoCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider pseudo-dipolar inteaction (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpPseudoCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider pseudo-dipolar inteaction (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpPseudoCheck.setText(QCoreApplication.translate("VizMainWindow", u"Pseudo Dipolar", None))
#if QT_CONFIG(tooltip)
        self.InpBqCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider biquadratic inteaction (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpBqCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider biquadratic inteaction (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpBqCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider biquadratic inteaction (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpBqCheck.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic", None))
#if QT_CONFIG(tooltip)
        self.InpBqDMCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider biquadratic-DM inteaction (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpBqDMCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider biquadratic-DM inteaction (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpBqDMCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider biquadratic-DM inteaction (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpBqDMCheck.setText(QCoreApplication.translate("VizMainWindow", u"Biquadratic DM", None))
        self.InpBextMainBox1.setTitle(QCoreApplication.translate("VizMainWindow", u"Zeeman term", None))
#if QT_CONFIG(tooltip)
        self.InpBextInitBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"External static magnetic field in the initial phase (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpBextInitBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"External static magnetic field in the initial phase (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpBextInitBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"External static magnetic field in the initial phase (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpBextInitBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Initial Phase", None))
        self.InpBextInit_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpBextInit_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpBextInit_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
#if QT_CONFIG(tooltip)
        self.InpDipBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Consider the dipolar interaction (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDipBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider the dipolar interaction (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDipBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider the dipolar interaction (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDipBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Dipolar interaction", None))
#if QT_CONFIG(tooltip)
        self.InpDipBlockSizeLineEdit.setToolTip(QCoreApplication.translate("VizMainWindow", u"Size of the macro cell considered ", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDipBlockSizeLineEdit.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Size of the macro cell considered ", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDipBlockSizeLineEdit.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Size of the macro cell considered ", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDipBlockSizeLineEdit.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"10", None))
#if QT_CONFIG(tooltip)
        self.InpDipBruteForceCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Brute force claculation of the dipole-dipole interaction for finite systems (on/off) WARNING: very slow", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDipBruteForceCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Brute force claculation of the dipole-dipole interaction for finite systems (on/off) WARNING: very slow", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDipBruteForceCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Brute force claculation of the dipole-dipole interaction for finite systems (on/off) WARNING: very slow", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDipBruteForceCheck.setText(QCoreApplication.translate("VizMainWindow", u"Brute Force", None))
#if QT_CONFIG(tooltip)
        self.InpDipMacroCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Macro spin approach to the dipole-dipole interaction", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDipMacroCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Macro spin approach to the dipole-dipole interaction", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDipMacroCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Macro spin approach to the dipole-dipole interaction", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDipMacroCheck.setText(QCoreApplication.translate("VizMainWindow", u"Macro spin", None))
        self.InpDipBlockSizeLabel.setText(QCoreApplication.translate("VizMainWindow", u"Block size", None))
#if QT_CONFIG(tooltip)
        self.InpDipFFTCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Use the convolution theorem and FFT for dipole interaction in finite systems (on/off) WARNING: requires FFT MKL or FFTW", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpDipFFTCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Use the convolution theorem and FFT for dipole interaction in finite systems (on/off) WARNING: requires FFT MKL or FFTW", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpDipFFTCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Use the convolution theorem and FFT for dipole interaction in finite systems (on/off) WARNING: requires FFT MKL or FFTW", None))
#endif // QT_CONFIG(whatsthis)
        self.InpDipFFTCheck.setText(QCoreApplication.translate("VizMainWindow", u"FFT Method", None))
        self.InpOptions.setItemText(self.InpOptions.indexOf(self.Hamiltonian), QCoreApplication.translate("VizMainWindow", u"Hamiltonian", None))
        self.InpMagMainBox.setTitle("")
        self.InpMagInitBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Magnetization initial configuration", None))
        self.InpMensembleLabel.setText(QCoreApplication.translate("VizMainWindow", u"Number of Ensembles", None))
#if QT_CONFIG(tooltip)
        self.InpInitmag2Box.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the magnetic moments randomly distributed by given cone angles", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitmag2Box.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the magnetic moments randomly distributed by given cone angles", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitmag2Box.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the magnetic moments randomly distributed by given cone angles", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitmag2Box.setTitle(QCoreApplication.translate("VizMainWindow", u"Cone angles (to be implemented)", None))
        self.InpInitMag2Theta.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpInitMag2Phi.setInputMask("")
        self.InpInitMag2Phi.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpInitMag2ThetaLabel.setText(QCoreApplication.translate("VizMainWindow", u"&Theta", None))
        self.InpInitMag2PhiLabel.setText(QCoreApplication.translate("VizMainWindow", u"&Phi", None))
#if QT_CONFIG(tooltip)
        self.InpMensemble.setToolTip(QCoreApplication.translate("VizMainWindow", u"Number of replicas(images) for a calculation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMensemble.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Number of replicas(images) for a calculation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMensemble.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Number of replicas(images) for a calculation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMensemble.setInputMask("")
        self.InpMensemble.setText("")
        self.InpMensemble.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1", None))
        self.InpInitMag6Check.setTitle(QCoreApplication.translate("VizMainWindow", u"From GNEB momfile", None))
        self.InpSetIniMomfileButton.setText(QCoreApplication.translate("VizMainWindow", u"Set initial moments", None))
        self.InpSetFinMomfileButton.setText(QCoreApplication.translate("VizMainWindow", u"Set final moments", None))
        self.InpConfBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Read magnetic configuration", None))
        self.InpInitMag4Check.setText(QCoreApplication.translate("VizMainWindow", u"Standard configuations", None))
        self.InpInitmag7Check.setTitle(QCoreApplication.translate("VizMainWindow", u"For GNEB configurations", None))
        self.InpIniFinCheck.setText(QCoreApplication.translate("VizMainWindow", u"Initial-Final states", None))
        self.InpFullPathChek.setText(QCoreApplication.translate("VizMainWindow", u"Full Path", None))
        self.InpRelGNEBCheck.setText(QCoreApplication.translate("VizMainWindow", u"Relax initial-final states", None))
#if QT_CONFIG(tooltip)
        self.InpInitMag4CreateButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Create a restartfile. WARNING: you must have chosen(created) a momfile and posfile and set the crystal structure", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitMag4CreateButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Create a restartfile. WARNING: you must have chosen(created) a momfile and posfile and set the crystal structure", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitMag4CreateButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Create a restartfile. WARNING: you must have chosen(created) a momfile and posfile and set the crystal structure", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitMag4CreateButton.setText(QCoreApplication.translate("VizMainWindow", u"Create", None))
#if QT_CONFIG(tooltip)
        self.InpInitMag4ReadButton.setToolTip(QCoreApplication.translate("VizMainWindow", u"Select restarfile from file", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitMag4ReadButton.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Select restarfile from file", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitMag4ReadButton.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Select restarfile from file", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitMag4ReadButton.setText(QCoreApplication.translate("VizMainWindow", u"Predefined", None))
#if QT_CONFIG(tooltip)
        self.InpInitmag3Check.setToolTip(QCoreApplication.translate("VizMainWindow", u"Set the direction of the moments to be given by the momfile", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitmag3Check.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Set the direction of the moments to be given by the momfile", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitmag3Check.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Set the direction of the moments to be given by the momfile", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitmag3Check.setText(QCoreApplication.translate("VizMainWindow", u"From momfile", None))
#if QT_CONFIG(tooltip)
        self.InpInitmag1Check.setToolTip(QCoreApplication.translate("VizMainWindow", u"Random orientation of moments", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitmag1Check.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Random orientation of moments", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitmag1Check.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Random orientation of moments", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitmag1Check.setText(QCoreApplication.translate("VizMainWindow", u"Random", None))
        self.InpOptions.setItemText(self.InpOptions.indexOf(self.Magnetization), QCoreApplication.translate("VizMainWindow", u"Magnetization", None))
#if QT_CONFIG(tooltip)
        self.InpInitBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Perform initial phase without measurement (on/off)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Perform initial phase without measurement (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Perform initial phase without measurement (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Inital Phase", None))
#if QT_CONFIG(tooltip)
        self.InpInitLLG.setToolTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses the LLG", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitLLG.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses the LLG", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitLLG.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Initial phase uses the LLG", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitLLG.setText(QCoreApplication.translate("VizMainWindow", u"LLG", None))
        self.InpInitMCBoc.setTitle(QCoreApplication.translate("VizMainWindow", u"Monte Carlo", None))
#if QT_CONFIG(tooltip)
        self.InpInitMcMet.setToolTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses Monte Carlo with the Metropolis algorithm", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitMcMet.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses Monte Carlo with the Metropolis algorithm", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitMcMet.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Initial phase uses Monte Carlo with the Metropolis algorithm", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitMcMet.setText(QCoreApplication.translate("VizMainWindow", u"Metropolis", None))
#if QT_CONFIG(tooltip)
        self.InpInitMcHeat.setToolTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses Monte Carlo with the Heath Bath algorithm", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitMcHeat.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses Monte Carlo with the Heath Bath algorithm", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitMcHeat.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Initial phase uses Monte Carlo with the Heath Bath algorithm", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitMcHeat.setText(QCoreApplication.translate("VizMainWindow", u"Heat Bath", None))
#if QT_CONFIG(tooltip)
        self.InpInitVPO.setToolTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses the velocity projector optimization method", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpInitVPO.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Initial phase uses the velocity projector optimization method", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpInitVPO.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Initial phase uses the velocity projector optimization method", None))
#endif // QT_CONFIG(whatsthis)
        self.InpInitVPO.setText(QCoreApplication.translate("VizMainWindow", u"VPO", None))
        self.InitPhaseOptionsBox.setTitle("")
        self.InpQuickRelax.setText(QCoreApplication.translate("VizMainWindow", u" Use quick relaxation ", None))
        self.InpInitAnnealBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Annealing phases", None))
        self.InpSetPhases.setText(QCoreApplication.translate("VizMainWindow", u"Setup Initial Phase", None))
        self.InpOptions.setItemText(self.InpOptions.indexOf(self.InitalPhase), QCoreApplication.translate("VizMainWindow", u"Initial Phase", None))
        self.InpMeasureMainBox.setTitle("")
#if QT_CONFIG(tooltip)
        self.InpMeasureGnebBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Velocity projector optimization measurement mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMeasureGnebBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Velocity projector optimization measurement mode", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMeasureGnebBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Velocity projector optimization measurement mode", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMeasureGnebBox.setTitle(QCoreApplication.translate("VizMainWindow", u"GNEB", None))
#if QT_CONFIG(tooltip)
        self.InpGNEBMeasureBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Perform GNEB calculation", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpGNEBMeasureBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Perform GNEB calculation", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpGNEBMeasureBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Perform GNEB calculation", None))
#endif // QT_CONFIG(whatsthis)
        self.InpGNEBMeasureBox.setTitle(QCoreApplication.translate("VizMainWindow", u"GNEB", None))
        self.InpGNEBMEPTolLabel.setText(QCoreApplication.translate("VizMainWindow", u"MEP tol", None))
        self.InpGNEBMEPTol.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.001", None))
        self.InpGNEBMEPStepsLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
        self.InpGNEBMEPSteps.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"100", None))
        self.InpMinEigLabel.setText(QCoreApplication.translate("VizMainWindow", u"Min Eig", None))
#if QT_CONFIG(tooltip)
        self.InpMinEig.setToolTip(QCoreApplication.translate("VizMainWindow", u"Minimal nonzero eigenvalue", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpMinEig.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Minimal nonzero eigenvalue", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpMinEig.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Minimal nonzero eigenvalue", None))
#endif // QT_CONFIG(whatsthis)
        self.InpMinEig.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.001", None))
        self.InpMeasureGNEBCI.setTitle(QCoreApplication.translate("VizMainWindow", u"GNEB CI", None))
        self.InpGNEBCITolLabel.setText(QCoreApplication.translate("VizMainWindow", u"CI tol", None))
        self.InpGNEBCITol.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1e-10", None))
        self.InpOptions.setItemText(self.InpOptions.indexOf(self.MeasurePhase), QCoreApplication.translate("VizMainWindow", u"Measurement Phase", None))
        self.InpExcMainBox.setTitle("")
        self.InpSTorqueBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin torque", None))
#if QT_CONFIG(statustip)
        self.InpSTTBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider the STT (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSTTBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider the STT (on/off)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSTTBox.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Consider the STT (on/off)", None))
#endif // QT_CONFIG(accessibility)
        self.InpSTTBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin Transfer Torque", None))
        self.InpSTTModelBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Torque model", None))
#if QT_CONFIG(statustip)
        self.InpSlonwceskiCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Slonwcenski STT model (fixed layer model)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSlonwceskiCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Slonwcenski STT model (fixed layer model)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSlonwceskiCheck.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Slonwcenski STT model (fixed layer model)", None))
#endif // QT_CONFIG(accessibility)
        self.InpSlonwceskiCheck.setText(QCoreApplication.translate("VizMainWindow", u"Slonwcenski", None))
#if QT_CONFIG(statustip)
        self.InpZhangLiCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Zhang-Li STT model (continuous model)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpZhangLiCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Zhang-Li STT model (continuous model)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpZhangLiCheck.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Zhang-Li STT model (continuous model)", None))
#endif // QT_CONFIG(accessibility)
        self.InpZhangLiCheck.setText(QCoreApplication.translate("VizMainWindow", u"Zhang-Li", None))
        self.InpBetaLabel.setText(QCoreApplication.translate("VizMainWindow", u"Non-adibatic", None))
#if QT_CONFIG(statustip)
        self.InpBeta.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the non-adibatic parameter", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpBeta.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Magnitude of the non-adibatic parameter", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpBeta.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Magnitude of the non-adibatic parameter", None))
#endif // QT_CONFIG(accessibility)
        self.InpBeta.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.01", None))
#if QT_CONFIG(statustip)
        self.InpCurrentBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the spin current", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpCurrentBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Magnitude of the spin current", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpCurrentBox.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Magnitude of the spin current", None))
#endif // QT_CONFIG(accessibility)
        self.InpCurrentBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Current magnitude", None))
        self.InpJvec_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpJvec_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpJvec_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpJvecLabel_z.setText(QCoreApplication.translate("VizMainWindow", u"J<sub>z<sub>", None))
        self.InpJvecLabel_x.setText(QCoreApplication.translate("VizMainWindow", u"J<sub>x<sub>", None))
        self.InpJvecLabel_y.setText(QCoreApplication.translate("VizMainWindow", u"J<sub>y<sub>", None))
#if QT_CONFIG(statustip)
        self.InpSHEBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider the SHE STT (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSHEBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider the SHE STT (on/off)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSHEBox.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Consider the SHE STT (on/off)", None))
#endif // QT_CONFIG(accessibility)
        self.InpSHEBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin Hall Effect", None))
        self.InpSheLabel.setText(QCoreApplication.translate("VizMainWindow", u"SHE angle", None))
#if QT_CONFIG(statustip)
        self.InpShe.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Spin Hall angle", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpShe.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Spin Hall angle", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpShe.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Spin Hall angle", None))
#endif // QT_CONFIG(accessibility)
        self.InpShe.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpSheThicknessLabel.setText(QCoreApplication.translate("VizMainWindow", u"Thickness", None))
#if QT_CONFIG(statustip)
        self.InpSheThickness.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Thicknedd of the ferromagnetic layer", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSheThickness.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Thicknedd of the ferromagnetic layer", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSheThickness.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Thicknedd of the ferromagnetic layer", None))
#endif // QT_CONFIG(accessibility)
        self.InpSheThickness.setInputMask("")
        self.InpSheThickness.setText("")
        self.InpSheThickness.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1.0", None))
#if QT_CONFIG(statustip)
        self.InpSOTBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Consider the Spin Orbit Torque (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSOTBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Consider the Spin Orbit Torque (on/off)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSOTBox.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Consider the Spin Orbit Torque (on/off)", None))
#endif // QT_CONFIG(accessibility)
        self.InpSOTBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin Orbit Torque", None))
        self.InpSOTFLLabel.setText(QCoreApplication.translate("VizMainWindow", u"Field like", None))
#if QT_CONFIG(statustip)
        self.InpSOTFL.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the field-like torque", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSOTFL.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Magnitude of the field-like torque", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSOTFL.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Magnitude of the field-like torque", None))
#endif // QT_CONFIG(accessibility)
        self.InpSOTFL.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpSOTDLLabel.setText(QCoreApplication.translate("VizMainWindow", u"Damping Like", None))
#if QT_CONFIG(statustip)
        self.InpSOTDL.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Magnitude of the damping-like torque", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSOTDL.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Magnitude of the damping-like torque", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSOTDL.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Magnitude of the damping-like torque", None))
#endif // QT_CONFIG(accessibility)
        self.InpSOTDL.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpSOTPolBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin polarization", None))
        self.InpSOTPolLabel_x.setText(QCoreApplication.translate("VizMainWindow", u"P<sub>x<sub>", None))
        self.InpSOTPolLabel_y.setText(QCoreApplication.translate("VizMainWindow", u"P<sub>y<sub>", None))
        self.InpSOTPolLabel_z.setText(QCoreApplication.translate("VizMainWindow", u"P<sub>z<sub>", None))
        self.InpSOTPol_x.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpSOTPol_y.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpSOTPol_z.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"0.0", None))
        self.InpOptions.setItemText(self.InpOptions.indexOf(self.Excitations), QCoreApplication.translate("VizMainWindow", u"Excitations", None))
        self.MeasureOptsBox.setTitle("")
        self.InpAveMainBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Averages", None))
#if QT_CONFIG(tooltip)
        self.InpAveBox.setToolTip(QCoreApplication.translate("VizMainWindow", u"Print average magnetization", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpAveBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Print average magnetization (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpAveBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Print average magnetization (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpAveBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Print averages", None))
        self.InpAveStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
        self.InpAveBuffLabel.setText(QCoreApplication.translate("VizMainWindow", u"Buffer size", None))
#if QT_CONFIG(statustip)
        self.InpAveStep.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Print the magnetization every certain number of steps", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpAveStep.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Print the magnetization every certain number of steps", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpAveStep.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Print the magnetization every certain number of steps", None))
#endif // QT_CONFIG(accessibility)
        self.InpAveStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"100", None))
        self.InpAveBuff.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"10", None))
        self.InpProjAveBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Projected averages", None))
#if QT_CONFIG(statustip)
        self.InpSiteAveCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Print site dependet average", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpSiteAveCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Print site dependet average", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpSiteAveCheck.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Print site dependet average", None))
#endif // QT_CONFIG(accessibility)
        self.InpSiteAveCheck.setText(QCoreApplication.translate("VizMainWindow", u"Site Average", None))
#if QT_CONFIG(statustip)
        self.InpTypeAveCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Print type dependet average", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpTypeAveCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Print type dependet average", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpTypeAveCheck.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Print type dependet average", None))
#endif // QT_CONFIG(accessibility)
        self.InpTypeAveCheck.setText(QCoreApplication.translate("VizMainWindow", u"Type Average", None))
#if QT_CONFIG(statustip)
        self.InpChemAveCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Chemical projection of the magnetization average", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpChemAveCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Chemical projection of the magnetization average", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpChemAveCheck.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Chemical projection of the magnetization average", None))
#endif // QT_CONFIG(accessibility)
        self.InpChemAveCheck.setText(QCoreApplication.translate("VizMainWindow", u"Chemical average", None))
        self.InpEneBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Energy", None))
#if QT_CONFIG(tooltip)
        self.InpEneTotalEneCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Calculate total energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpEneTotalEneCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Calculate total energy (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpEneTotalEneCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Calculate total energy (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpEneTotalEneCheck.setText(QCoreApplication.translate("VizMainWindow", u"Total Energy", None))
#if QT_CONFIG(tooltip)
        self.InpEneSiteEneCheck.setToolTip(QCoreApplication.translate("VizMainWindow", u"Calculate site dependet energy", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.InpEneSiteEneCheck.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Calculate site dependet energy (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpEneSiteEneCheck.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Calculate site dependet energy (on/off)", None))
#endif // QT_CONFIG(whatsthis)
        self.InpEneSiteEneCheck.setText(QCoreApplication.translate("VizMainWindow", u"Site depenent energy", None))
        self.InpCumuMainBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Cummulants", None))
#if QT_CONFIG(statustip)
        self.InpCumuBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Print the cummulant information (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpCumuBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Print the cummulant information (on/off)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpCumuBox.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Print the cummulant information (on/off)", None))
#endif // QT_CONFIG(accessibility)
        self.InpCumuBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Print cumulants", None))
        self.InpCumuStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
        self.InpCumuStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"100", None))
        self.InpCumuBuffLabel.setText(QCoreApplication.translate("VizMainWindow", u"Buffer size", None))
        self.InpCumuBuff.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"10", None))
        self.InpTrajBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Trajectories (to be implemented)", None))
        self.InpSingleTrajBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Selected moments", None))
        self.InpNTrajButton.setText(QCoreApplication.translate("VizMainWindow", u"Setup (to be implemented)", None))
#if QT_CONFIG(statustip)
        self.InpGlobalTrajBox.setStatusTip(QCoreApplication.translate("VizMainWindow", u"Print the trajectories of every magnetic moment (on/off)", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.InpGlobalTrajBox.setWhatsThis(QCoreApplication.translate("VizMainWindow", u"Print the trajectories of every magnetic moment (on/off)", None))
#endif // QT_CONFIG(whatsthis)
#if QT_CONFIG(accessibility)
        self.InpGlobalTrajBox.setAccessibleName(QCoreApplication.translate("VizMainWindow", u"Print the trajectories of every magnetic moment (on/off)", None))
#endif // QT_CONFIG(accessibility)
        self.InpGlobalTrajBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Global trajectories", None))
        self.InitTTrajStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
        self.InitTTrajStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"1000", None))
        self.InitTTrajBuffLabel.setText(QCoreApplication.translate("VizMainWindow", u"Buffer size", None))
        self.InitTTrajBuff.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"10", None))
        self.InpSpinCorrMainBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Spin-Spin correlation function", None))
        self.InpAMSCheck.setText(QCoreApplication.translate("VizMainWindow", u"Adibatic magnon Spectra", None))
        self.ImpSqwBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Dynamical structure factor", None))
        self.InpScStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Sampling freq", None))
        self.InpScStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"10", None))
        self.InpScNStepLabel.setText(QCoreApplication.translate("VizMainWindow", u"Number of freq.", None))
        self.InpScNStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"100", None))
        self.InpScCheck.setText(QCoreApplication.translate("VizMainWindow", u"Static correlation", None))
        self.InpSqQpoints.setText(QCoreApplication.translate("VizMainWindow", u"Select Qpoints-file", None))
        self.TopologyBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Topological quantities", None))
        self.SkxNumBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Skyrmion number", None))
        self.InpSkxBuffLabel.setText(QCoreApplication.translate("VizMainWindow", u"Buffer size", None))
        self.InpSkxStepsLabel.setText(QCoreApplication.translate("VizMainWindow", u"Steps", None))
        self.InpSkxStep.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"100", None))
        self.InitSkxBuff.setPlaceholderText(QCoreApplication.translate("VizMainWindow", u"10", None))
        self.HessianBox.setTitle(QCoreApplication.translate("VizMainWindow", u"Hessian quantities", None))
        self.HessInitCheck.setText(QCoreApplication.translate("VizMainWindow", u"Hessian initial phase", None))
        self.HessFinCheck.setText(QCoreApplication.translate("VizMainWindow", u"Hessian final state", None))
        self.HessSPCheck.setText(QCoreApplication.translate("VizMainWindow", u"Hessian saddle point", None))
        self.InpOptions.setItemText(self.InpOptions.indexOf(self.InpMeasurablePage), QCoreApplication.translate("VizMainWindow", u"Measurables", None))
    # retranslateUi

