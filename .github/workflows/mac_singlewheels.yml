name: Build single wheels on MacOS

#on: [release]
on: [release, push, pull_request]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [macOS-latest]
        python-version: ["3.9", "3.10", "3.11", "pypy3.9", "pypy3.10"]
        arch: [x86_64, arm64]
        #os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Provide packages (macOS)
        run: |
          # fftw3 , ninja, meson
          brew install fftw ninja meson
          fftw-wisdom -V
            
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel build delocate

      - name: Build wheel for ${{ matrix.python-version }} on ${{ matrix.arch }}
        run: python -m build --wheel

      - name: Delocate wheel for ${{ matrix.python-version }} on ${{ matrix.arch }}
        run: delocate-wheel dist/uppasd*.whl

      - name: 'ðŸ§ª Test wheel for ${{ matrix.python-version }} on ${{ matrix.arch }}'
        run: |
          python -m pip install dist/uppasd*.whl
          python -c "import uppasd.pyasd as pyasd ; pyasd.printlogo()"

      - name: Upload wheels for ${{ matrix.python-version }} on ${{ matrix.arch }}
        uses: actions/upload-artifact@v4
        with:
          name: uppasd-${{ matrix.python-version }}-${{ matrix.arch }}-${{ matrix.os }}
          path: ./dist/*.whl

  upload:
    runs-on: macOS-latest
    needs: build

    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist
          pattern: uppasd-*
          merge-multiple: true
      - run: ls -l ./dist

  #build_sdist:
  #  name: Build source distribution
  #  runs-on: ubuntu-latest

  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v4

  #    - name: Setup Python
  #      uses: actions/setup-python@v5
  #      with:
  #        python-version: '3.10'

  #    - name: Install needed pip packages
  #      run: python -m pip install build wheel

  #    - name: Build source distribution
  #      run: python -m build . --sdist

  #    - name: Store artifacts
  #      uses: actions/upload-artifact@v4
  #      with:
  #        path: dist/*.tar.gz
