name: Build binaries Windows

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { icon: 'ðŸŸ¦', sys: mingw64, arch: x86_64 }
          - { icon: 'ðŸŸ¨', sys: ucrt64,  arch: x86_64  } # Experimental!
          #- { icon: 'ðŸŸ§', sys: clang64, arch: x86_64 } # Experimental!
          #- { icon: 'â¬›', sys: mingw32, arch: i686 } # Disabled
    name: ðŸš§ ${{ matrix.icon }} ${{ matrix.sys }}
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: '${{ matrix.icon }} Setup MSYS2 gcc'
      if: ${{ matrix.sys != 'clang64' }}
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make

        pacboy: >-
          toolchain:p
          gcc-fortran:p
          openblas:p
          lapack:p
          fftw:p
          cmake:p
          ninja:p
          
    - name: '${{ matrix.icon }} Setup MSYS2 clang'
      if: ${{ matrix.sys == 'clang64' }}
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make

        pacboy: >-
          toolchain:p
          flang:p
          openblas:p
          lapack:p
          fftw:p
          cmake:p
          ninja:p

          
    - name: 'ðŸš§ Build TOOL'
      run: |
        cmake -S . -G Ninja -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build 
        ls ./bin
        cp ./bin/sd.gfortran.exe ./bin/sd.gfortran.${{matrix.sys}}.${{matrix.arch}}.exe
        cp ./bin/sd.gfortran.exe ./bin/uppasd.${{matrix.sys}}.${{matrix.arch}}.exe
        ls ./bin
        
    - uses: actions/upload-artifact@v3
      with:
       name: uppasd.${{matrix.sys}}.${{matrix.arch}}
       path: ./bin/uppasd*.exe
