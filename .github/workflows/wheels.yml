name: Build wheels on linux and macos

#on: [release]
on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-11]
        #os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - name: Provide gfortran (macOS)
        if: runner.os == 'macOS'
        run: |
          # https://github.com/actions/virtual-environments/issues/2524
          # https://github.com/cbg-ethz/dce/blob/master/.github/workflows/pkgdown.yaml
          sudo ln -s /usr/local/bin/gfortran-11 /usr/local/bin/gfortran
          sudo ln -s /usr/local/bin/gcc-11 /usr/local/bin/gcc
          sudo mkdir /usr/local/gfortran
          sudo ln -s /usr/local/Cellar/gcc@11/*/lib/gcc/11 /usr/local/gfortran/lib
          gfortran --version
          gcc --version
          which gcc
          which gfortran

      - name: Provide fftw  (macOS)
        if: runner.os == 'macOS'
        run: |
          # fftw3 
          brew install fftw
          fftw-wisdom -V

      - name: Provide gfortran (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          path-type: inherit
          install: >-
            git
            make

          pacboy: >-
            toolchain:p
            gcc-fortran:p
            openblas:p
            lapack:p
            fftw:p
            cmake:p
            ninja:p

      - name: Tell distutils to use mingw (Windows)
        if: runner.os == 'Windows'
        run: |
           #echo "[build]`ncompiler=mingw32" | Out-File -Encoding ASCII ~/pydistutils.cfg
           echo "[build]`ncompiler=mingw32" 

      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.10.1

      - name: Build wheels
        run: 
          python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value
        env:
          CIBW_SKIP: cp36* pp38-manylinux* pp39* pp31* cp38-manylinux_i686 
          CIBW_ENVIRONMENT_WINDOWS: CC=gcc CXX=g++ FC=gfortran
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: ""
          FC: gfortran
          CC: gcc



      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Build source distribution
        run: bash python/build_tools/build_sdist.sh

      - name: Test source distribution
        run: bash python/build_tools/test_sdist.sh

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

