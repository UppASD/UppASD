name: Build single wheels on Linux

#on: [release]
on: [release, push, pull_request]

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "pypy3.9", "pypy3.10"]
        #os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install ninja-build and meson
        run: sudo apt-get -y install ninja-build meson libopenblas-dev liblapack-dev

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel build

      - name: Build wheel for ${{ matrix.python-version }}
        run: python -m build --wheel

      - name: 'ðŸ§ª Test wheel'
        run: |
          python -m pip install dist/uppasd*.whl
          python -c "import uppasd.pyasd as pyasd ; pyasd.printlogo()"

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.python-version }}-${{ matrix.os }}
          path: ./dist/*.whl

  #build_sdist:
  #  name: Build source distribution
  #  runs-on: ubuntu-latest

  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v4

  #    - name: Setup Python
  #      uses: actions/setup-python@v5
  #      with:
  #        python-version: '3.10'

  #    - name: Install needed pip packages
  #      run: python -m pip install build wheel

  #    - name: Build source distribution
  #      run: python -m build . --sdist

  #    - name: Store artifacts
  #      uses: actions/upload-artifact@v4
  #      with:
  #        path: dist/*.tar.gz
